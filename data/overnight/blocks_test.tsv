is there any block with a height of either 3 or 6 inches	block whose height is 3 inches or 6 inches	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string height ) ( string = ) ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) )
find me a pyramid block that is 3 inches tall	block whose shape is a pyramid and whose height is 3 inches	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
block whose height is 3 inches and whose shape is a pyramid	block whose height is 3 inches and whose shape is a pyramid	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( string shape ) ( string = ) en.shape.pyramid ) )
block above a pyramid shaped block	block that is above block whose shape is a pyramid	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ) )
get a 3inch block above block 1	block that is above block 1 and whose height is 3 inches	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string above ) ( string = ) en.block.block1 ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
below special block	block that block that is special is above	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string is_special ) ) ) )
block whose height is at most width of block 1	block whose height is at most width of block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
block whose height is length of block 1	block whose height is length of block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string height ) ( string = ) ( call SW.getProperty en.block.block1 ( string length ) ) ) )
block whose width is 3 inches and that is below block 1	block whose width is 3 inches and that is below block 1	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( string below ) ( string = ) en.block.block1 ) )
a special block	block that is special	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string is_special ) ) )
locate the block with a height that equals more than the width of block 1	block whose height is larger than width of block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
find me the block that is left of the block that block 1 is right of	block that is left of block that block 1 is right of	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ) )
pyramid block to left of block 1	block whose shape is a pyramid and that block 1 is right of	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
what block is not as long as block 1 is tall	block whose length is smaller than height of block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
identify a block with a width of 3 inches	block whose width is 3 inches and whose width is 3 inches	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
find a block between block 1 and a block below block 1	block that is above block that is below block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string = ) en.block.block1 ) ) )
what block is not above block 1	block that block 1 not is above	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string above ) ) ( string != ) en.block.block1 ) )
find me a block as long or longer then block 1 is wide	block whose length is at least width of block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
what block is below the block that block 1 is to the right of	block that is below block that block 1 is right of	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ) )
select the block on the right	block that block 1 is above and that is right of block 1	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ( string right ) ( string = ) en.block.block1 ) )
find me the block that is both above and to the right of block 1	block that block 1 is right of and that is above block 1	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( string above ) ( string = ) en.block.block1 ) )
find me all the 3 inch wide and tall blocks	block whose width is 3 inches and whose height is 3 inches	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
choose a block that is to the left of block 1 and 2	block that is left of block 1 or block 2	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string = ) ( call SW.concat en.block.block1 en.block.block2 ) ) )
special block left of block 1	block that is special and that block 1 is right of	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string is_special ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
find me all blocks at most as wide at block 1 is tall	block whose width is at most height of block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
find me all blocks left of 3 inch wide blocks	block that is left of block whose width is 3 inches	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ) )
find me all blocks left and above block 1	block that block that is left of block 1 is above	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string = ) en.block.block1 ) ) )
find me all special blocks that block 1 is below	block that block 1 is below and that is special	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( string is_special ) ) )
block taller than the width of block 1	block whose height is larger than width of block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
3 inch long block below block	block that is below block whose length is 3 inches	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ) )
is there a block to the right of more than two other blocks	block that more than two block is left of	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string left ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
find me a block that is above the most blocks	block that the most number of block is below	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string max ) ( call SW.reverse ( string below ) ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
block that is not left of block 1	block that not is left of block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string != ) en.block.block1 ) )
3 inches wide block below block 1	block whose width is 3 inches and that block 1 is below	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
find me all blocks with 2 blocks to the left	block that two block is left of	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
choose a block that is right of block 1	block that is right of block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string right ) ( string = ) en.block.block1 ) )
find me all blocks with the same color as block 1	block whose color is color of block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string color ) ( string = ) ( call SW.getProperty en.block.block1 ( string color ) ) ) )
what brick has more than 2 bricks to its right	block that more than two block is right of	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string right ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
find me all the bricks taller than the width of block 1	block whose height is larger than width of block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
which block is to the right of block 1	block that block that is right of block 1 is left of	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string right ) ( string = ) en.block.block1 ) ) )
block whose height is at leas the length of block 1	block whose height is at least length of block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
find a block with a special block to the left of it	block that is right of block that is special	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string is_special ) ) ) )
select the block that is equal or bigger than block 1	block whose width is at least height of block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
choose a block that is above block 2	block that more than two block is above	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string above ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
what block is above the block that block 1 is to the right of	block that is above block that block 1 is right of	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ) )
find me all blocks not 3 inches wide	block whose width is not 3 inches	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string width ) ( string != ) ( number 3 en.inch ) ) )
choose a block below block 2	block that is below less than two block	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
which block is bigger than block 1	block whose length is larger than length of block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
find me all blocks above 3 inch wide blocks	block that block whose width is 3 inches is above	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ) )
which brick is no taller than brick 1 is long	block whose height is at most length of block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
block left of 3 inch block	block that block whose height is 3 inches is right of	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ) )
locate the block with a height that is equal to or greater than the height of block 1	block whose height is at least height of block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
find me the most colorful block	block that has the most number of color	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string max ) ( string color ) ) )
select block that is below block 1 and block that is above block 1	block that is below block 1 and that block 1 is below	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string = ) en.block.block1 ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
what block is both above and below block one	block that is above block 1 and that is below block 1	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string above ) ( string = ) en.block.block1 ) ( string below ) ( string = ) en.block.block1 ) )
find me all blocks 2 left of block 1	block that is left of block that block 1 is left of	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ) )
block that is below block 1 and whose length is 3 inches	block that is below block 1 and whose length is 3 inches	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string = ) en.block.block1 ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
select the brick right and above block 1	block that is right of block that is above block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string above ) ( string = ) en.block.block1 ) ) )
find me all blocks right and below block 1	block that is right of block 1 and that is below block 1	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string right ) ( string = ) en.block.block1 ) ( string below ) ( string = ) en.block.block1 ) )
select the block that is to the right of block 1	block that is right of block 1 and that block 1 is left of	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string right ) ( string = ) en.block.block1 ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
choose a pyramid or a cube	a pyramid or a cube	( call SW.listValue ( call SW.concat en.shape.pyramid en.shape.cube ) )
block that is below block 1 and that is below block 1	block that is below block 1 and that is below block 1	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string = ) en.block.block1 ) ( string below ) ( string = ) en.block.block1 ) )
block above 1 block and below 1 block	block that block 1 is above and that block 1 is below	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
block thats less than block 2	block that has less than two shape	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string shape ) ( string < ) ( number 2 ) ) )
find a block that is above at least two other blocks	block that is above at least two block	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string above ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
what block is to the right of the most blocks	block that the most number of block is left of	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string max ) ( call SW.reverse ( string left ) ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
which pyramidshaped block is special	block that is special and whose shape is a pyramid	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string is_special ) ) ( string shape ) ( string = ) en.shape.pyramid ) )
block that is below at least two blocksw	block that at least two block is below	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string below ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
find me all blocks that block 1 is below and right of	block that block 1 is below and that is right of block 1	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( string right ) ( string = ) en.block.block1 ) )
block surrounding block 1	block that is left of block 1 and that is right of block 1	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string = ) en.block.block1 ) ( string right ) ( string = ) en.block.block1 ) )
select the longest block	block that has the largest length	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string max ) ( call SW.ensureNumericProperty ( string length ) ) ) )
what special block is at the right of block 1	block that is right of block 1 and that is special	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string right ) ( string = ) en.block.block1 ) ( string is_special ) ) )
find me all 3 inch long blocks that block 1 is above	block whose length is 3 inches and that block 1 is above	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
find the block to the left of the pyramidshaped block	block that is left of block whose shape is a pyramid	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ) )
select the brick with the least number of shapes	block that has the least number of shape	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string min ) ( string shape ) ) )
select the block at the right of block 1	block that block 1 is left of and that block 1 is left of	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
which block is as wide as block 1 is high	block whose width is height of block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string width ) ( string = ) ( call SW.getProperty en.block.block1 ( string height ) ) ) )
find me the block that is to the left and above block 1	block that is above block 1 and that block 1 is left of	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string above ) ( string = ) en.block.block1 ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
find me a block with length equal to block 1s height	block whose length is height of block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string length ) ( string = ) ( call SW.getProperty en.block.block1 ( string height ) ) ) )
find me all the blocks above special blocks	block that is above block that is special	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string is_special ) ) ) )
3 inch wide block to the left of block 1	block whose width is 3 inches and that block 1 is right of	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
find a block with less than two shapes	block that has less than two shape	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string shape ) ( string < ) ( number 2 ) ) )
select the block that block 1 is above and to the left of	block that block that block 1 is above is left of	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ) )
find me a block to the left of at least two blocks	block that at least two block is right of	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string right ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
block lft of special block 1	block that is left of block 1 and that is special	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string = ) en.block.block1 ) ( string is_special ) ) )
what block is not to the right of block 1	block that not is right of block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string right ) ( string != ) en.block.block1 ) )
find me all the 3 inch long special blocks	block whose length is 3 inches and that is special	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( string is_special ) ) )
find the block that is below and to the left of block 1 	block that is below block 1 and that block 1 is left of	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string = ) en.block.block1 ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
find a block with a maximum of two colors on it	block that has at most two color	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string color ) ( string <= ) ( number 2 ) ) )
what block is below block 1 and 3 inches long	block that is below block 1 and whose length is 3 inches	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string = ) en.block.block1 ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
which brick has the least number of colors	block that has the least number of color	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string min ) ( string color ) ) )
find the block that is below to the right of block 1 	block that block that is right of block 1 is below	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string right ) ( string = ) en.block.block1 ) ) )
what block is block 1 not to the right of	block that block 1 not is right of	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string right ) ) ( string != ) en.block.block1 ) )
locate a block that is located to the right of the maximum number of blocks	block that is right of the most number of block	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string max ) ( string right ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
select the block that has greater than two colors	block that has more than two color	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string color ) ( string > ) ( number 2 ) ) )
what block is to the right of the pyramidshaped block	block that is right of block whose shape is a pyramid	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ) )
find me all special blocks that are to the right of block 1	block that is special and that block 1 is right of	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string is_special ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
what blocks length is less than or equal to block 1s height	block whose length is at most height of block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
what block is to the left of the block that block 1 is to the right of	block that is left of block 1 and that block 1 is right of	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string = ) en.block.block1 ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
find me all the blocks with more than 2 blocks below it	block that more than two block is below	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string below ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
find a block below either block 1 or block 2	block that is below block 1 or block 2	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string = ) ( call SW.concat en.block.block1 en.block.block2 ) ) )
select a block with width equal or greater than block 1 is long	block whose width is at least length of block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
block below block with pyramid shape	block that block whose shape is a pyramid is below	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ) )
choose a block that is left of a 3 inch brick	block that is left of block whose height is 3 inches	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ) )
block above and below block 1	block that block 1 is below and that is above block 1	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( string above ) ( string = ) en.block.block1 ) )
what block has two or more colors	block that has at least two color	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string color ) ( string >= ) ( number 2 ) ) )
3 inch block above block 1	block whose length is 3 inches and that block 1 is below	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
find all 3 inch pyramid blocks	block whose height is 3 inches and whose shape is a pyramid	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( string shape ) ( string = ) en.shape.pyramid ) )
which blocks are not above block 1	block that not is above block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string above ) ( string != ) en.block.block1 ) )
is there a block that is on top of more than two other blocks	block that more than two block is below	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string below ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
look right of block 1 and get the 3 inch tall block	block whose height is 3 inches and that block 1 is left of	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
which brick is above the brick that is below brick 1	block that is above block that is below block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string = ) en.block.block1 ) ) )
find me all blocks right of block 1 or 2	block that block 1 or block 2 is left of	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.concat en.block.block1 en.block.block2 ) ) )
what is the shape of block 1	shape of block 1	( call SW.listValue ( call SW.getProperty en.block.block1 ( string shape ) ) )
find block that is below and to the right of block 1	block that is below block 1 and that is right of block 1	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string = ) en.block.block1 ) ( string right ) ( string = ) en.block.block1 ) )
block with more than 2 shapes	block that has more than two shape	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string shape ) ( string > ) ( number 2 ) ) )
select all blocks that dont have a width of 3 inches	block whose width is not 3 inches	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string width ) ( string != ) ( number 3 en.inch ) ) )
which brick is to the left of brick 1 that is at least 3 inches long	block whose length is 3 inches and that is left of block 1	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( string left ) ( string = ) en.block.block1 ) )
block that is right of the least number of block	block that is right of the least number of block	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string min ) ( string right ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
find me all blocks 3 inches tall	block whose height is 3 inches and whose height is 3 inches	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
what brick has two bricks to its left	block that two block is left of	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
find a block as long or longer than block 1	block whose length is at most length of block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
find me all blocks 1 is right and above	block that block 1 is right of and that block 1 is above	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
choose the block to the right of block 2	block that two block is right of	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
block whose length is 3 inches and that is special	block whose length is 3 inches and that is special	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( string is_special ) ) )
block that has less than two shape	block that has less than two shape	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string shape ) ( string < ) ( number 2 ) ) )
select all blocks with the same width as block 1	block whose width is width of block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string width ) ( string = ) ( call SW.getProperty en.block.block1 ( string width ) ) ) )
pyramid shaped block left of block 1	block whose shape is a pyramid and that block 1 is left of	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
find me all pyramid blocks above block 1	block whose shape is a pyramid and that is above block 1	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string above ) ( string = ) en.block.block1 ) )
choose a block that is above block 1 or 2	block that is above block 1 or block 2	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string above ) ( string = ) ( call SW.concat en.block.block1 en.block.block2 ) ) )
block that has the most number of color	block that has the most number of color	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string max ) ( string color ) ) )
which brick is at least as long as brick 1 is tall	block whose length is at least height of block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
block left of 3 inch block	block that block whose width is 3 inches is right of	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ) )
choose a block that is special	block that is special and that is special	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string is_special ) ) ( string is_special ) ) )
what block is 2 blocks below block 1	block that is below block that is below block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string = ) en.block.block1 ) ) )
block left of block one and shaped like a pyramid	block that is left of block 1 and whose shape is a pyramid	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string = ) en.block.block1 ) ( string shape ) ( string = ) en.shape.pyramid ) )
find the block on the left side of the special block	block that block that is special is left of	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string is_special ) ) ) )
block that more than two block is above	block that more than two block is above	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string above ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
find a block shaped like a pyramid or a cube	a pyramid or a cube	( call SW.listValue ( call SW.concat en.shape.pyramid en.shape.cube ) )
find a block located to the right of two other blocks	block that two block is left of	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
what pyramid shaped block is at right of block 1	block that block 1 is left of and whose shape is a pyramid	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( string shape ) ( string = ) en.shape.pyramid ) )
block below block 1 and 3 inches in height	block that block 1 is above and whose height is 3 inches	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
find me all blocks that block 1 is right and left of	block that block 1 is right of and that block 1 is left of	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
pyramid above block 1	block whose shape is a pyramid and that is above block 1	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string above ) ( string = ) en.block.block1 ) )
choose a block that is under the most populous amount of blocks	block that is below the most number of block	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string max ) ( string below ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
choose a block that is the same or below brick 1	block whose length is at most height of block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
a special 3 inch high block	block whose height is 3 inches and that is special	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( string is_special ) ) )
select the block that is above and right of block 1	block that is above block that is right of block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string right ) ( string = ) en.block.block1 ) ) )
pyramid left of block 1	block whose shape is a pyramid and that is left of block 1	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string left ) ( string = ) en.block.block1 ) )
3 inches long pyramid shaped block	block whose length is 3 inches and whose shape is a pyramid	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( string shape ) ( string = ) en.shape.pyramid ) )
beneath block 1 is a block with a height of 3 inches find it	block whose height is 3 inches and that is below block 1	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( string below ) ( string = ) en.block.block1 ) )
what block  has a height of 3 inches and that block 1 is above	block whose height is 3 inches and that block 1 is above	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
which brick is to the right of the brick that is 3 inches high	block that is right of block whose height is 3 inches	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ) )
block whose shape is a pyramid and that is below block 1	block whose shape is a pyramid and that is below block 1	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string below ) ( string = ) en.block.block1 ) )
find a block with width less than or equal to block 1	block whose width is at most width of block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
find me all blocks left of which block 1 is below	block that block that is left of block 1 is below	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string = ) en.block.block1 ) ) )
find me all blocks right of block 1 which block 1 is left of	block that is right of block 1 and that block 1 is left of	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string right ) ( string = ) en.block.block1 ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
which brick is no longer than brick 1 is high	block whose length is at most height of block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
choose a block under block 2	block that two block is below	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
find me all the blocks taller than the length of block 1	block whose height is larger than length of block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
find the block buried under the smallest number of other blocks	block that the least number of block is above	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string min ) ( call SW.reverse ( string above ) ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
select a block that is not below block 1	block that block 1 not is below	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string below ) ) ( string != ) en.block.block1 ) )
what block is to the left of the pyramidshaped block	block that is left of block whose shape is a pyramid	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ) )
block less wider than the length of block 1	block whose width is smaller than length of block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
3 inch block above block 1	block whose length is 3 inches and that is above block 1	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( string above ) ( string = ) en.block.block1 ) )
which brick has a width smaller than the width of brick 1	block whose width is smaller than width of block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
find the block with maximum length of 6 inches	block whose length is at most 3 inches or 6 inches	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
choose the brick to the right of the brick above brick 1	block that is right of block that is above block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string above ) ( string = ) en.block.block1 ) ) )
block either 3 inches or 6 inches long	block whose length is 3 inches or 6 inches	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string length ) ( string = ) ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) )
what block is 3 inches wide by 3 inches tall	block whose height is 3 inches and whose width is 3 inches	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
get me the blocks to the left of the block above block 1	block that is left of block that block 1 is below	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ) )
block below blocks 1 and 2	block that block 1 or block 2 is above	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.concat en.block.block1 en.block.block2 ) ) )
pyramid to left of block 1	block that is left of block 1 and whose shape is a pyramid	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string = ) en.block.block1 ) ( string shape ) ( string = ) en.shape.pyramid ) )
what block is 3 inches long and has block 1 on its left	block that is right of block 1 and whose length is 3 inches	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string right ) ( string = ) en.block.block1 ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
select the pyramidshaped brick below brick 1	block whose shape is a pyramid and that is below block 1	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string below ) ( string = ) en.block.block1 ) )
what block is 3 inches wide	block whose width is 3 inches	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
find a block with a height smaller than the height of block 1	block whose height is smaller than height of block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
select the block that is left of block 1	block that block that block 1 is left of is left of	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ) )
3 inch tall block under first block	block that is below block 1 and whose height is 3 inches	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string = ) en.block.block1 ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
find the block that is below and to the right of block 1	block that is below block 1 and that is right of block 1	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string = ) en.block.block1 ) ( string right ) ( string = ) en.block.block1 ) )
find a block with the same length as block 1	block whose length is length of block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string length ) ( string = ) ( call SW.getProperty en.block.block1 ( string length ) ) ) )
block whose width is at least the width of block 1	block whose width is at least width of block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
blocks that have block 1 or block 2 at left	block that block 1 or block 2 is left of	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.concat en.block.block1 en.block.block2 ) ) )
find me all blocks that has less than 2 blocks to the left	block that is right of less than two block	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string right ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
block that at least two block is below	block that at least two block is below	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string below ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
left of block 1	block that block 1 is right of	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
find a block that is below block 1	block that is below block that block 1 is above	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ) )
select a pyramid or cube shaped block	a pyramid or a cube	( call SW.listValue ( call SW.concat en.shape.pyramid en.shape.cube ) )
find me all special blocks with length less than 3 inches	block that is special and whose length is 3 inches	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string is_special ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
which block has at least two blocks above it	block that at least two block is above	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string above ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
block that is below block 1 and that is special	block that is below block 1 and that is special	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string = ) en.block.block1 ) ( string is_special ) ) )
find me the block whose shape is a pyramid	block that block whose shape is a pyramid is above	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ) )
choose a smallest block than block 1	block whose width is smaller than width of block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
select the tallest block	block that has the largest height	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string max ) ( call SW.ensureNumericProperty ( string height ) ) ) )
find me a block with at most two blocks below it	block that is above at most two block	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string above ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
find me the special block to the right of block 1	block that is special and that is right of block 1	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string is_special ) ) ( string right ) ( string = ) en.block.block1 ) )
which brick is no wider than brick 1 is tall	block whose width is at most height of block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
which special brick is to the left of brick 1	block that is left of block 1 and that is special	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string = ) en.block.block1 ) ( string is_special ) ) )
find the block on the right side of the block on the right side of block 1	block that block that block 1 is right of is right of	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ) )
select the block that has a height of 3 inches and is above block 1	block whose height is 3 inches and that block 1 is below	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
which brick is at least as long as brick 1	block whose length is at least length of block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
block that is left of block which is below block 1	block that is left of block that is below block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string = ) en.block.block1 ) ) )
left of 3 inch block	block that block whose height is 3 inches is right of	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ) )
which block is furthest to the right	block that is right of the most number of block	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string max ) ( string right ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
what 3inch wide brick is pyramidshaped	block whose shape is a pyramid and whose width is 3 inches	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
choose a block that is no higher than 2 blocks	block that is above at most two block	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string above ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
find a special block above block 1 	block that is special and that block 1 is below	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string is_special ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
what is the color of block 1	color of block 1	( call SW.listValue ( call SW.getProperty en.block.block1 ( string color ) ) )
what is the length of brick 1	length of block 1	( call SW.listValue ( call SW.getProperty en.block.block1 ( string length ) ) )
find me all the 3 inch tall pyramid blocks	block whose height is 3 inches and whose shape is a pyramid	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( string shape ) ( string = ) en.shape.pyramid ) )
what pyramidshaped blocks are below block 1	block that is below block 1 and whose shape is a pyramid	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string = ) en.block.block1 ) ( string shape ) ( string = ) en.shape.pyramid ) )
find me all 3 inch long blocks above block 1	block that is above block 1 and whose length is 3 inches	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string above ) ( string = ) en.block.block1 ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
find me all blocks above 2 blocks	block that is above two block	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string above ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
find the block with a height and length of 3 inches	block whose height is 3 inches and whose length is 3 inches	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
what is the average width of a block	average width of block	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string width ) ) ) )
find a special pyramidshaped block	block that is special and whose shape is a pyramid	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string is_special ) ) ( string shape ) ( string = ) en.shape.pyramid ) )
block right of 3 inches long block 1	block that is right of block 1 and whose length is 3 inches	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string right ) ( string = ) en.block.block1 ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
what block has the least blocks to the left of it	block that is right of the least number of block	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string min ) ( string right ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
is there a block under one or two blocks at most	block that is below at most two block	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
above block to right of block 1	block that is above block that block 1 is left of	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ) )
block whose width is 3 inches and whose length is 3 inches	block whose width is 3 inches and whose length is 3 inches	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
right of and above block 1	block that block 1 is below and that block 1 is left of	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
select the block that is 3 inches long and to the right of block 1	block whose length is 3 inches and that is right of block 1	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( string right ) ( string = ) en.block.block1 ) )
block that is below block whose shape is a pyramid	block that is below block whose shape is a pyramid	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ) )
find me all 3 inch high and 3 inch wide blocks	block whose height is 3 inches and whose width is 3 inches	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
find me a block thicker than the length of block 1	block whose width is larger than length of block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
is there a block to the right of just one block only	block that less than two block is left of	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string left ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
block that not is left of block 1	block that not is left of block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string != ) en.block.block1 ) )
find the block to the left of the block that is 3 inches in diameter	block that is left of block whose width is 3 inches	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ) )
find the block that is 3 inches wide	block whose width is 3 inches and whose width is 3 inches	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
what blocks length is greater than 3 to 6 inches	block whose length is larger than 3 inches or 6 inches	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
select the block on the left corner	block that is left of two block	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
find me a block that is below any block that is 3 inches	block that block whose height is 3 inches is below	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ) )
find the block that is left of block 1	block that is left of block 1 and that block 1 is right of	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string = ) en.block.block1 ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
block below either block 1 or block 2	block that is below block 1 or block 2	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string = ) ( call SW.concat en.block.block1 en.block.block2 ) ) )
choose a block that is under the least number of bricks	block that is below the least number of block	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string min ) ( string below ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
right of block one with pyramid shape	block that block 1 is left of and whose shape is a pyramid	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( string shape ) ( string = ) en.shape.pyramid ) )
block block a 3 inch long block	block that block whose length is 3 inches is below	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ) )
which brick is below the brick below brick 1	block that is below block that is below block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string = ) en.block.block1 ) ) )
what block is 3 inches wide and 3 inches tall	block whose width is 3 inches and whose height is 3 inches	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
find me all blocks with width less than 3 inches	block whose width is smaller than 3 inches	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
which brick is to the right of less than two bricks	block that is right of less than two block	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string right ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
which block of 3 inches height is above the block 1 	block whose height is 3 inches and that block 1 is below	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
find me all 3 inch wide blocks left of block 1	block that is left of block 1 and whose width is 3 inches	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string = ) en.block.block1 ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
select the block that is above block 1	block that block 1 is above and that block 1 is above	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
find me the block that is to the left of block 1 and special	block that block 1 is right of and that is special	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( string is_special ) ) )
find me all the special blocks	block that is special	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string is_special ) ) )
select block 1 and all of the blocks below it	block that block 1 is above and that is below block 1	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ( string below ) ( string = ) en.block.block1 ) )
what is the width of block 1	width of block 1	( call SW.listValue ( call SW.getProperty en.block.block1 ( string width ) ) )
block that is special and whose shape is a pyramid	block that is special and whose shape is a pyramid	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string is_special ) ) ( string shape ) ( string = ) en.shape.pyramid ) )
which block is above the special block	block that is above block that is special	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string is_special ) ) ) )
find me all the blocks that have 2 blocks to the right of it	block that at least two block is left of	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string left ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
which brick has a length shorter than the height of brick 1	block whose length is smaller than height of block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
find me the block that has a height of 3 inches	block that block whose height is 3 inches is below	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ) )
block left of block 1 thats 3 inches high	block that is left of block 1 and whose height is 3 inches	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string = ) en.block.block1 ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
which brick is 3 inches wide and below brick 1	block whose width is 3 inches and that is below block 1	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( string below ) ( string = ) en.block.block1 ) )
find me all blocks left of block 1	block that block that is left of block 1 is right of	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string = ) en.block.block1 ) ) )
which block has at least two blocks below it	block that at least two block is below	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string below ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
3 inch block above block 1	block that block 1 is below and whose length is 3 inches	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
find me all blocks which block 1 is not above	block that block 1 not is above	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string above ) ) ( string != ) en.block.block1 ) )
find blocks that are at least 3 inches high or 6 inches high	block whose height is at least 3 inches or 6 inches	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
block not longer than block 1	block whose length is at most length of block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
find the 3 inches in length block that is on the left side  of block 1	block whose length is 3 inches and that block 1 is right of	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
color of block 1	color of block 1	( call SW.listValue ( call SW.getProperty en.block.block1 ( string color ) ) )
which brick is the same width as brick 1	block whose width is width of block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string width ) ( string = ) ( call SW.getProperty en.block.block1 ( string width ) ) ) )
what blocks have a width larger than the height of block 1	block whose width is larger than height of block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
find me all the blocks that is as long as block 1 is tall	block whose length is height of block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string length ) ( string = ) ( call SW.getProperty en.block.block1 ( string height ) ) ) )
find the block below the block that is 3 inches in width	block that block whose width is 3 inches is above	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ) )
which brick is not shaped like a pyramid	block whose shape is not a pyramid	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string shape ) ( string != ) en.shape.pyramid ) )
block below block which is below block 1	block that is below block that is below block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string = ) en.block.block1 ) ) )
find me all blocks that block 1 is belo	block that block that block 1 is below is below	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ) )
find the block above 2 blocks	block that at most two block is below	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string below ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
what block is below two or more blocks	block that is below at least two block	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
find 3 inch block left of block 1	block that block 1 is right of and whose width is 3 inches	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
choose a block that is the same length as block 1	block whose length is at least length of block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
what block is special and left of block 1	block that is special and that block 1 is left of	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string is_special ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
which brick is longer than 3 or 6 inches	block whose length is larger than 3 inches or 6 inches	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
block that is special and whose height is 3 inches	block that is special and whose height is 3 inches	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string is_special ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
which brick is at least as wide as brick 1	block whose width is at least width of block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
find me all blocks 2 blocks to the right of block 1	block that is right of block that is right of block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string right ) ( string = ) en.block.block1 ) ) )
average length of block	average length of block	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string length ) ) ) )
find me the block that has a height of 3 inches and is above block 1	block whose height is 3 inches and that is above block 1	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( string above ) ( string = ) en.block.block1 ) )
what block is special and is to the left of block 1	block that is special and that block 1 is left of	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string is_special ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
3 inch block above block 1	block that is above block 1 and whose width is 3 inches	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string above ) ( string = ) en.block.block1 ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
find the block that block 1 is below and that has a shape of a pyramid	block that block 1 is below and whose shape is a pyramid	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( string shape ) ( string = ) en.shape.pyramid ) )
what block is above and to the right of block 1 	block that block that block 1 is above is right of	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ) )
select the block that is block 1 is left of and that is special	block that block 1 is left of and that is special	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( string is_special ) ) )
select the brick with the most blocks above it	block that the most number of block is above	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string max ) ( call SW.reverse ( string above ) ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
block with two or more shapes	block that has at least two shape	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string shape ) ( string >= ) ( number 2 ) ) )
select the block that is right of the block that block 1 is to the left of	block that block that is right of block 1 is left of	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string right ) ( string = ) en.block.block1 ) ) )
find a block that is not below block 1	block that not is below block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string != ) en.block.block1 ) )
3 inch block below block 1	block whose width is 3 inches and that block 1 is above	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
what blocks are above more than two blocks	block that is above more than two block	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string above ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
find me all pyramid blocks left of block 1	block that is left of block 1 and whose shape is a pyramid	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string = ) en.block.block1 ) ( string shape ) ( string = ) en.shape.pyramid ) )
choose a block that is 3 inches tall	block that is left of block whose length is 3 inches	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ) )
find the block with the greatest number of colors on it	block that has the most number of color	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string max ) ( string color ) ) )
which brick is the widest	block that has the largest width	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string max ) ( call SW.ensureNumericProperty ( string width ) ) ) )
find the 3 inch tall special block	block that is special and whose height is 3 inches	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string is_special ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
what block has block 1 above and below	block that is below block 1 and that block 1 is below	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string = ) en.block.block1 ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
block that is left of at most two block	block that is left of at most two block	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
find me all 3 inch long blocks that block 1 is below	block that block 1 is below and whose length is 3 inches	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
choose a block that is special and shaped like a pyramid	block whose shape is a pyramid and that is special	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string is_special ) ) )
find the widest block	block that has the largest width	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string max ) ( call SW.ensureNumericProperty ( string width ) ) ) )
what is the average length of a block	average length of block	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string length ) ) ) )
which brick has two bricks to its right	block that two block is right of	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
what block has the least number of colors	block that has the least number of color	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string min ) ( string color ) ) )
block whose length is 3 inches and whose width is 3 inches	block whose length is 3 inches and whose width is 3 inches	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
below and to the right of block 1	block that is below block 1 and that block 1 is left of	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string = ) en.block.block1 ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
select all which is less than the width of block 1	block whose length is smaller than width of block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
find me all 3 inch long blocks right of block 1	block that is right of block 1 and whose length is 3 inches	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string right ) ( string = ) en.block.block1 ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
what block has below it a block in the shape of a pyramid	block that block whose shape is a pyramid is below	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ) )
find a pyramidshaped block	block whose shape is a pyramid and whose shape is a pyramid	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string shape ) ( string = ) en.shape.pyramid ) )
find me all blocks as wide as block 1 is tall	block whose width is height of block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string width ) ( string = ) ( call SW.getProperty en.block.block1 ( string height ) ) ) )
what block has two color	block that has two color	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string color ) ( string = ) ( number 2 ) ) )
find me all special blocks below block 1	block that is special and that is below block 1	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string is_special ) ) ( string below ) ( string = ) en.block.block1 ) )
find a block that is not 3 inches wide	block whose width is not 3 inches	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string width ) ( string != ) ( number 3 en.inch ) ) )
select the block that is 3 inches and is left of block 1	block that block 1 is left of and whose height is 3 inches	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
find me all blocks at block 1	block that block that is right of block 1 is left of	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string right ) ( string = ) en.block.block1 ) ) )
find a 3inch long block located to the left of block 1	block that is left of block 1 and whose length is 3 inches	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string = ) en.block.block1 ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
which pyramidshaped brick is below brick 1	block that is below block 1 and whose shape is a pyramid	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string = ) en.block.block1 ) ( string shape ) ( string = ) en.shape.pyramid ) )
find the block whose width is 3 inches and is on the right side of block 1	block whose width is 3 inches and that block 1 is left of	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
find me the block that is to the right of block 1	block that block 1 is right of and that block 1 is left of	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
choose the block to the right of the other block	block that at least two block is right of	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string right ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
block whose height is not more than block 1	block whose height is at most length of block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
find me a block with block 1 above it	block that is below block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string = ) en.block.block1 ) )
find a block with block 1 below it	block that is above block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string above ) ( string = ) en.block.block1 ) )
which block is wider than 3 or 6 inches	block whose width is larger than 3 inches or 6 inches	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
choose the block to the right of the unique block	block that is right of block that is special	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string is_special ) ) ) )
find me a block at least 3 inches long	block whose length is at least 3 inches	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
which 3 inch brick is below brick 1	block that is below block 1 and whose height is 3 inches	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string = ) en.block.block1 ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
find a block that is to the left and below block 1	block that block 1 is left of and that is below block 1	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( string below ) ( string = ) en.block.block1 ) )
which is the least colorful block	block that has the least number of color	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string min ) ( string color ) ) )
which brick is longer than brick 1 is tall	block whose length is larger than height of block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
find me all blocks at the same level as block 1	block that is below block that is above block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string above ) ( string = ) en.block.block1 ) ) )
find the block that is to the right of and below block 1	block that is right of block 1 and that is below block 1	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string right ) ( string = ) en.block.block1 ) ( string below ) ( string = ) en.block.block1 ) )
2 blocks below block 1	block that is below block that block 1 is above	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ) )
select the brick with the least number of blocks to the right	block that the least number of block is right of	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string min ) ( call SW.reverse ( string right ) ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
find me all blocks left of what block 1 is right of	block that is left of block that block 1 is right of	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ) )
find me a block that is to the right of the block that is below block 1	block that is right of block that is below block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string = ) en.block.block1 ) ) )
what block is above two other blocks	block that is above two block	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string above ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
block whose height is less than width of block 1	block whose height is smaller than width of block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
what brick is 3 inches long and 3 inches wide	block whose length is 3 inches and whose width is 3 inches	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
find me all special blocks right of something	block that block that is special is right of	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string is_special ) ) ) )
block whose height is 3 inches	block whose height is 3 inches	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
pyramid to right of block 1	block whose shape is a pyramid and that is right of block 1	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string right ) ( string = ) en.block.block1 ) )
what brick is above brick 1	block that is above block 1 and that is above block 1	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string above ) ( string = ) en.block.block1 ) ( string above ) ( string = ) en.block.block1 ) )
which block has the largest length	block that has the largest length	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string max ) ( call SW.ensureNumericProperty ( string length ) ) ) )
select the block to the right of the block that is 3 inches long	block that is right of block whose width is 3 inches	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ) )
find me all blocks that block 1 is left and above of	block that block 1 is left of and that block 1 is above	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
what is the total length of the brick	total length of block	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string length ) ) ) )
select the block that block 1 is above	block that block 1 is above	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
block whose shape is shape of block 1	block whose shape is shape of block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string shape ) ( string = ) ( call SW.getProperty en.block.block1 ( string shape ) ) ) )
block whose length is smaller than 3 inches or 6 inches	block whose length is smaller than 3 inches or 6 inches	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
find the block that is to the left of block 1 whose shape is that of a pyramid	block that is left of block 1 and whose shape is a pyramid	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string = ) en.block.block1 ) ( string shape ) ( string = ) en.shape.pyramid ) )
pyramid block above block 1	block whose shape is a pyramid and that is above block 1	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string above ) ( string = ) en.block.block1 ) )
a special block below block 1	block that is below block 1 and that is special	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string = ) en.block.block1 ) ( string is_special ) ) )
what block is above at two or more blocks	block that is above at least two block	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string above ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
block whose width is 3 inches	block whose width is 3 inches	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
find me all the blocks at least as tall as block 1	block whose height is at least height of block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
what block has less than two blocks below it	block that is above less than two block	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string above ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
what block that is not block 1 is below	block that block 1 not is below	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string below ) ) ( string != ) en.block.block1 ) )
what block is at least as tall as block 1	block whose height is at most height of block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
select the blocks that are left of and below block 1	block that is left of block 1 and that is below block 1	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string = ) en.block.block1 ) ( string below ) ( string = ) en.block.block1 ) )
select the special block right to block 1	block that is right of block 1 and that is special	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string right ) ( string = ) en.block.block1 ) ( string is_special ) ) )
select the 3 inch long block that is left of block 1	block that block 1 is right of and whose length is 3 inches	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
block above and left from block 1	block that block 1 is below and that block 1 is right of	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
3 inch block right of block 1	block that block 1 is left of and whose length is 3 inches	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
locate a block that is longer tha block 1 is tall	block whose length is larger than height of block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
find me all the blocks above 3 inch tall blocks	block that is above block whose height is 3 inches	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ) )
special block right of block 1	block that is right of block 1 and that is special	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string right ) ( string = ) en.block.block1 ) ( string is_special ) ) )
find me all blocks right and below block 1	block that block 1 is right of and that block 1 is below	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
what block is below the fewest blocks	block that the least number of block is above	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string min ) ( call SW.reverse ( string above ) ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
what block has block 1 below and left	block that block 1 is right of and that is above block 1	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( string above ) ( string = ) en.block.block1 ) )
what block is below the block that block 1 is above	block that block that is below block 1 is above	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string = ) en.block.block1 ) ) )
find me all the 3 inches long blocks and below block 1	block whose length is 3 inches and that is below block 1	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( string below ) ( string = ) en.block.block1 ) )
3 inch tall block left of block 1	block whose height is 3 inches and that is left of block 1	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( string left ) ( string = ) en.block.block1 ) )
what block is below the 3 inch wide block	block that is below block whose width is 3 inches	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ) )
block above 3 inch wide block	block that block whose width is 3 inches is below	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ) )
select the block whose length is 3 inches and that is to the left of block 1	block whose length is 3 inches and that block 1 is left of	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
what block has block 1 below and to the left	block that block 1 is below and that block 1 is left of	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
find me the block that is below and to the right of block 1	block that block that is below block 1 is right of	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string = ) en.block.block1 ) ) )
left of block 1	block that block 1 not is right of	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string right ) ) ( string != ) en.block.block1 ) )
find a block that has the length of block 1	block whose width is length of block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string width ) ( string = ) ( call SW.getProperty en.block.block1 ( string length ) ) ) )
find the 3 inch wide block below block 1	block that is below block 1 and whose width is 3 inches	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string = ) en.block.block1 ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
what block is at least as long as block 1	block whose length is at least length of block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
find me all blocks that block 1 is right and above of	block that block that block 1 is above is right of	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ) )
is there a block that is as long as block 1 is high	block whose length is height of block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string length ) ( string = ) ( call SW.getProperty en.block.block1 ( string height ) ) ) )
find me all the blocks shorter than 3 inches	block whose height is smaller than 3 inches	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
select the block that to the left of the most blocks	block that is left of the most number of block	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string max ) ( string left ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
block above and right from block 1	block that block that block 1 is left of is above	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ) )
find the block on top of at least two other blocks	block that at least two block is below	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string below ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
choose a block that is above the most bricks	block that the most number of block is above	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string max ) ( call SW.reverse ( string above ) ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
find the blocks that are not to the right of block 1	block that not is right of block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string right ) ( string != ) en.block.block1 ) )
what pyramid shaped block above block 1	block that block 1 is below and whose shape is a pyramid	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( string shape ) ( string = ) en.shape.pyramid ) )
look left for block 1 and get the pyramid block	block whose shape is a pyramid and that block 1 is right of	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
find me the block that is above block 1 and is in the shape of a pyramid	block that is above block 1 and whose shape is a pyramid	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string above ) ( string = ) en.block.block1 ) ( string shape ) ( string = ) en.shape.pyramid ) )
find me all blocks with more than 2 blocks to its left	block that is right of at least two block	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string right ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
block as wide as height of block 1	block whose width is height of block 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string width ) ( string = ) ( call SW.getProperty en.block.block1 ( string height ) ) ) )
choose a brick 3 inches long that is shaped like a pyramid	block whose shape is a pyramid and whose length is 3 inches	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
