which meetings end later than 10 in the morning or 3 in the afternoon	meeting whose end time is larger than 10am or 3pm	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( time 10 0 ) ( time 15 0 ) ) ) ) )
important meeting with three hour duration	meeting that is important and whose length is three hours	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string is_important ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) )
meeting that has duration of lesser than three hour	meeting whose length is smaller than three hours	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 en.hour ) ) ) )
meetings that start earlier than or at the same time as the weekly standup meeting	meeting whose start time is at most end time of weekly standup	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) ) )
show me the meetings that are scheduled for longest length of time	meeting that has the largest length	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string max ) ( call SW.ensureNumericProperty ( string length ) ) ) )
what meeting is alice not attending	meeting whose attendee is not alice	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string attendee ) ( string != ) en.person.alice ) )
which january 2nd meeting is three hours long	meeting whose date is jan 2 and whose length is three hours	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) )
who has attended the most meetings	person that is attendee of the most number of meeting	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string max ) ( call SW.reverse ( string attendee ) ) ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ) )
meeting is no later than january 2nd or 3rd	meeting whose date is at least jan 2 or jan 3	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2015 1 2 ) ( date 2015 1 3 ) ) ) ) )
show me all three hour meetings that begin at 10am	meeting whose length is three hours and whose start time is 10am	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) )
meetings in greenberg cafe that start at 10am	meeting whose start time is 10am and whose location is greenberg cafe	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) )
show me meetings on jan 2	meeting whose date is jan 2 and whose date is jan 2	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) )
show me all meetings scheduled to be longer than the weekly standup meeting	meeting whose length is larger than length of weekly standup	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string length ) ) ) ) )
meetings after january 2 or after january 3	meeting whose date is larger than jan 2 or jan 3	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2015 1 2 ) ( date 2015 1 3 ) ) ) ) )
meeting which is on jan 3 or before	meeting whose date is at most jan 2 or jan 3	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2015 1 2 ) ( date 2015 1 3 ) ) ) ) )
show me meetings shorter than three hours	meeting whose length is at most three hours or one hour	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.hour ) ( number 1 en.hour ) ) ) ) )
what meeting ends at 10am or earlier	meeting whose end time is at most 10am	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( time 10 0 ) ) ) )
show me all meetings marked important beginning at 10 am	meeting that is important and whose start time is 10am	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string is_important ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) )
what is the longest meeting	meeting that has the largest length	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string max ) ( call SW.ensureNumericProperty ( string length ) ) ) )
meetings that end at or before 10am or at or before 3pm	meeting whose end time is at most 10am or 3pm	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( time 10 0 ) ( time 15 0 ) ) ) ) )
meetings that start at the same time or after the weekly standup meeting ends	meeting whose start time is at least end time of weekly standup	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) ) )
what is the location of the weekly standup	location that is location of weekly standup	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string !type ) ) ( call SW.reverse ( string location ) ) ( string = ) en.meeting.weekly_standup ) )
people that attend the weekly standup meeting or the annual review meeting	person that is attendee of weekly standup or annual review	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) ( call SW.concat en.meeting.weekly_standup en.meeting.annual_review ) ) )
what meeting has the longest length	meeting that has the largest length	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string max ) ( call SW.ensureNumericProperty ( string length ) ) ) )
what meetings are located at greenberg cafe	meeting whose location is greenberg cafe and whose location is greenberg cafe	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) ( string location ) ( string = ) en.location.greenberg_cafe ) )
meeting that starts when the weekly standup meeting ends	meeting whose start time is end time of weekly standup	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string start_time ) ( string = ) ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) )
meetings in greenberg cafe that end at 10am	meeting whose location is greenberg cafe and whose end time is 10am	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) ( string end_time ) ( string = ) ( time 10 0 ) ) )
show me all meetings happening on january 2nd	meeting whose date is jan 2 and whose date is jan 2	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) )
what meeting doesnt end at 10am	meeting whose end time is not 10am	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string end_time ) ( string != ) ( time 10 0 ) ) )
show me all meeting that will end by 10am	meeting whose end time is at most 10am	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( time 10 0 ) ) ) )
meetings that start before 10am	meeting whose start time is smaller than 10am	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string < ) ( call SW.ensureNumericEntity ( time 10 0 ) ) ) )
meeting starts before end time of weekly standup	meeting whose start time is smaller than end time of weekly standup	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) ) )
three hour meeting on january 2nd	meeting whose length is three hours and whose date is jan 2	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) )
which people are attending meetings on january 2	person that is attendee of meeting whose date is jan 2	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) ) )
meetings that start at or after 10am	meeting whose start time is at least 10am	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( time 10 0 ) ) ) )
location of more than two meetings	location that is location of more than two meeting	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.location ) ( string !type ) ) ( call SW.reverse ( string location ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ) )
show me all meetings in greenberg cafe on jan 2	meeting whose date is jan 2 and whose location is greenberg cafe	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) )
show me any meetings labeled as important which are also three hours long	meeting that is important and whose length is three hours	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string is_important ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) )
show me all locations which have meetings ending at 10 am	location that is location of meeting whose end time is 10am	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string !type ) ) ( call SW.reverse ( string location ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) ) )
show me the meeting that has the latest end time	meeting that has the largest end time	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string max ) ( call SW.ensureNumericProperty ( string end_time ) ) ) )
who is attending the 10sm meeting	person that is attendee of meeting whose start time is 10am	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) ) )
show me meetings ending after 10am	meeting whose end time is larger than 10am	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string > ) ( call SW.ensureNumericEntity ( time 10 0 ) ) ) )
show me all meetings attended by alice beginning at 10 am	meeting whose attendee is alice and whose start time is 10am	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string attendee ) ( string = ) en.person.alice ) ( string start_time ) ( string = ) ( time 10 0 ) ) )
what meeting has and end time the same as weekly startup	meeting whose end time is end time of weekly standup	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string end_time ) ( string = ) ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) )
show me meetings that take three hours in greenberg cafe	meeting whose length is three hours and whose location is greenberg cafe	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) )
which meeting has the fewest attendees	meeting that has the least number of attendee	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string min ) ( string attendee ) ) )
meeting ends before 10am or 3pm	meeting whose end time is smaller than 10am or 3pm	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( time 10 0 ) ( time 15 0 ) ) ) ) )
meeting which starts at 1000 am or 300 pm	meeting whose start time is 10am or 3pm	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string start_time ) ( string = ) ( call SW.concat ( time 10 0 ) ( time 15 0 ) ) ) )
meetings attended by alice in greenberg cafe	meeting whose location is greenberg cafe and whose attendee is alice	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) ( string attendee ) ( string = ) en.person.alice ) )
show me meetings shorter than 3 hours	meeting whose length is at most three hours	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 en.hour ) ) ) )
what location is the three hour meeting	location that is location of meeting whose length is three hours	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string !type ) ) ( call SW.reverse ( string location ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) ) )
which january 2nd meetings is alice attenting	meeting whose date is jan 2 and whose attendee is alice	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) ( string attendee ) ( string = ) en.person.alice ) )
show me all meetings that begin at 10am	meeting whose start time is 10am	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) )
find the meeting with alice at greenberg cafe	meeting whose attendee is alice and whose location is greenberg cafe	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string attendee ) ( string = ) en.person.alice ) ( string location ) ( string = ) en.location.greenberg_cafe ) )
what meeting has a date of jan 2 or jan 3	meeting whose date is at least jan 2 or jan 3	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2015 1 2 ) ( date 2015 1 3 ) ) ) ) )
meeting ends at 10 am or 3 pm	meeting whose end time is 10am or 3pm	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string end_time ) ( string = ) ( call SW.concat ( time 10 0 ) ( time 15 0 ) ) ) )
show me all meetings marked important which are also attended by alice	meeting that is important and whose attendee is alice	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string is_important ) ) ( string attendee ) ( string = ) en.person.alice ) )
show me important meetings at greenberg cafe	meeting whose location is greenberg cafe and that is important	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) ( string is_important ) ) )
what is the end time of weekly standup	end time of weekly standup	( call SW.listValue ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) )
meeting with no more than 2 locations	meeting that has at most two location	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string location ) ( string <= ) ( number 2 ) ) )
meeting which starts at or before 10 am	meeting whose start time is at most 10am	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( time 10 0 ) ) ) )
show me all meetings at greenberg cafe ending at 10 am	meeting whose location is greenberg cafe and whose end time is 10am	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) ( string end_time ) ( string = ) ( time 10 0 ) ) )
what meeting is at greenberg cafe	location that is location of meeting whose location is greenberg cafe	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string !type ) ) ( call SW.reverse ( string location ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) ) )
location is same as the location of meeting on jan 2	location that is location of meeting whose date is jan 2	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string !type ) ) ( call SW.reverse ( string location ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) ) )
what meetings are scheduled to run for three hours on jan 2	meeting whose date is jan 2 and whose length is three hours	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) )
show me all important meetings on jan 2	meeting whose date is jan 2 and that is important	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) ( string is_important ) ) )
show me all meetings alice has attended at the greenberg cafe	meeting whose attendee is alice and whose location is greenberg cafe	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string attendee ) ( string = ) en.person.alice ) ( string location ) ( string = ) en.location.greenberg_cafe ) )
show me all meetings after january 2nd	meeting whose date is larger than jan 2	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2015 1 2 ) ) ) )
person attending least number of meetings	person that is attendee of the least number of meeting	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string min ) ( call SW.reverse ( string attendee ) ) ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ) )
what meeting has the earliest date	meeting that has the smallest date	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string min ) ( call SW.ensureNumericProperty ( string date ) ) ) )
what meeting ends no earlier than 10am	meeting whose end time is smaller than 10am	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string < ) ( call SW.ensureNumericEntity ( time 10 0 ) ) ) )
what meetings occur on the same day as weekly standup	meeting whose date is date of weekly standup	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string date ) ( string = ) ( call SW.getProperty en.meeting.weekly_standup ( string date ) ) ) )
what meetings take place in greenbug cafe	meeting whose location is greenberg cafe and whose location is greenberg cafe	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) ( string location ) ( string = ) en.location.greenberg_cafe ) )
what meeting has a length smaller than three hours	meeting whose length is smaller than three hours	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 en.hour ) ) ) )
show me the meetings with the most attendees	meeting that has the most number of attendee	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string max ) ( string attendee ) ) )
what meeting is starting the same time as weekly standup	meeting whose start time is start time of weekly standup	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string start_time ) ( string = ) ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) )
show me meetings starting at 10am that take 3 horus	meeting whose start time is 10am and whose length is three hours	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) )
location same as weekly meeting or annual review	location that is location of weekly standup or annual review	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string !type ) ) ( call SW.reverse ( string location ) ) ( string = ) ( call SW.concat en.meeting.weekly_standup en.meeting.annual_review ) ) )
meeting in which alice is attending and ends at 10 am	meeting whose end time is 10am and whose attendee is alice	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) ( string attendee ) ( string = ) en.person.alice ) )
what meeting start time is later than 10am	meeting whose start time is larger than 10am	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string > ) ( call SW.ensureNumericEntity ( time 10 0 ) ) ) )
meetings that are not attended by alice	meeting whose attendee is not alice	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string attendee ) ( string != ) en.person.alice ) )
what meeting has the fewest locations	meeting that has the least number of location	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string min ) ( string location ) ) )
show me all meetings ending after the weekly standup ends	meeting whose start time is larger than end time of weekly standup	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) ) )
what meeting is at greenberg cafe and ends at 10am	meeting whose location is greenberg cafe and whose end time is 10am	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) ( string end_time ) ( string = ) ( time 10 0 ) ) )
meeting is not at greenberg cafe	meeting whose location is not greenberg cafe	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string location ) ( string != ) en.location.greenberg_cafe ) )
what meetings have a length of three hours and alice is attending	meeting whose length is three hours and whose attendee is alice	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) ( string attendee ) ( string = ) en.person.alice ) )
what meetings are scheduled for a date no earlier than jan 2	meeting whose date is at least jan 2	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2015 1 2 ) ) ) )
locations of meetings that end at 10am	location that is location of meeting whose end time is 10am	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string !type ) ) ( call SW.reverse ( string location ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) ) )
what meetings end no later then the weekly standup meeting ends	meeting whose end time is at least end time of weekly standup	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) ) )
what meeting is in either greenberg cage or central office	meeting whose location is greenberg cafe or central office	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string location ) ( string = ) ( call SW.concat en.location.greenberg_cafe en.location.central_office ) ) )
show me all meetings happening at greenberg cafe or central office	greenberg cafe or central office	( call SW.listValue ( call SW.concat en.location.greenberg_cafe en.location.central_office ) )
what is the average length of all meetings	average length of meeting	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string length ) ) ) )
who is attending the three hour meeting	person that is attendee of meeting whose length is three hours	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) ) )
what are some important meetings	meeting that is important	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string is_important ) ) )
show me all meetings which start at the same time or later than the weekly standup	meeting whose start time is at least start time of weekly standup	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) ) )
meeting on jan 2 which ends at 10 am	meeting whose date is jan 2 and whose end time is 10am	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) )
what meeting starts earlier than 10am or 3pm	meeting whose start time is smaller than 10am or 3pm	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( time 10 0 ) ( time 15 0 ) ) ) ) )
show me all meetings that end at 10am in greenberg cafe	meeting whose location is greenberg cafe and whose end time is 10am	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) ( string end_time ) ( string = ) ( time 10 0 ) ) )
tell me the all meetings begins after 10am or 3pm	meeting whose start time is at least 10am or 3pm	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( time 10 0 ) ( time 15 0 ) ) ) ) )
people that attend important meetings	person that is attendee of meeting that is important	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string is_important ) ) ) )
how many locations house meetings	number of location	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.location ) ( string !type ) ) ) )
show me all meetings happening before january 2nd	meeting whose date is smaller than jan 2	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2015 1 2 ) ) ) )
what is the date of weekly standup	date of weekly standup	( call SW.listValue ( call SW.getProperty en.meeting.weekly_standup ( string date ) ) )
create a meeting for jan 2nd until 10am	meeting whose date is jan 2 and whose end time is 10am	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) )
what meeting is on jan 2	meeting whose date is jan 2 and whose date is jan 2	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) )
show me important meetings at greenberg cafe	meeting that is important and whose location is greenberg cafe	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string is_important ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) )
meeting starting at time of weekly standup	meeting whose start time is start time of weekly standup	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string start_time ) ( string = ) ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) )
meetings held in the same location as the weekly standup meeting	meeting whose location is location of weekly standup	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string location ) ( string = ) ( call SW.getProperty en.meeting.weekly_standup ( string location ) ) ) )
show me all meetings which are either shorter or longer than three hours	meeting whose length is not three hours	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string length ) ( string != ) ( number 3 en.hour ) ) )
what meeting lasts from one to three hours	meeting whose length is three hours or one hour	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string length ) ( string = ) ( call SW.concat ( number 3 en.hour ) ( number 1 en.hour ) ) ) )
what meeting has alice attending on jan 2	meeting whose attendee is alice and whose date is jan 2	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string attendee ) ( string = ) en.person.alice ) ( string date ) ( string = ) ( date 2015 1 2 ) ) )
show me all meetings alice has attended marked as important	meeting whose attendee is alice and that is important	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string attendee ) ( string = ) en.person.alice ) ( string is_important ) ) )
meetings that are longer than the weekly startup meeting	meeting whose length is larger than length of weekly standup	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string length ) ) ) ) )
show me the important meetings that last three hours	meeting that is important and whose length is three hours	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string is_important ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) )
what meeting begins latest	meeting that has the largest start time	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string max ) ( call SW.ensureNumericProperty ( string start_time ) ) ) )
show me all meetings marked important ending at 10 am	meeting that is important and whose end time is 10am	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string is_important ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) )
what meeting ends at the same time as weekly standup or later	meeting whose end time is at least end time of weekly standup	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) ) )
show me all meetings that alice is attending on jan 2	meeting whose attendee is alice and whose date is jan 2	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string attendee ) ( string = ) en.person.alice ) ( string date ) ( string = ) ( date 2015 1 2 ) ) )
what meeting ends at the start time of weekly standup	meeting whose end time is start time of weekly standup	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string end_time ) ( string = ) ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) )
meetings held in less than two locations	meeting that has less than two location	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string location ) ( string < ) ( number 2 ) ) )
what important meeting has an end time of 10am	meeting whose end time is 10am and that is important	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) ( string is_important ) ) )
meetings that are on or before january 3	meeting whose date is at least jan 2 or jan 3	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2015 1 2 ) ( date 2015 1 3 ) ) ) ) )
what meeting has the same end time as that of weekly standup	meeting whose end time is at most end time of weekly standup	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) ) )
show me meetings before 10am	meeting whose end time is smaller than 10am	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string < ) ( call SW.ensureNumericEntity ( time 10 0 ) ) ) )
what meeting has the most attendees	meeting that has the most number of attendee	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string max ) ( string attendee ) ) )
show me all meetings that run either three hours or one hour	meeting whose length is three hours or one hour	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string length ) ( string = ) ( call SW.concat ( number 3 en.hour ) ( number 1 en.hour ) ) ) )
show me the meeting that starts and ends at 10 am	meeting whose start time is 10am and whose end time is 10am	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) )
show me all meetings that end earlier than the week standup meeting ends	meeting whose end time is smaller than end time of weekly standup	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) ) )
which meeting has the most people scheduled to attend	meeting that has the most number of attendee	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string max ) ( string attendee ) ) )
what person is attending a meeting that ends at 10am	person that is attendee of meeting whose end time is 10am	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) ) )
meetings on january 2 or january 3	meeting whose date is jan 2 or jan 3	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string date ) ( string = ) ( call SW.concat ( date 2015 1 2 ) ( date 2015 1 3 ) ) ) )
show me meetings that take 3 hours and start at 10am	meeting whose length is three hours and whose start time is 10am	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) )
alice or bob is an attendee at the meeting	meeting whose attendee is alice or bob	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string attendee ) ( string = ) ( call SW.concat en.person.alice en.person.bob ) ) )
show me all meetings which are scheduled no later than january 3	meeting whose date is at most jan 2 or jan 3	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2015 1 2 ) ( date 2015 1 3 ) ) ) ) )
who attends the weekly standup meeting	attendee of weekly standup	( call SW.listValue ( call SW.getProperty en.meeting.weekly_standup ( string attendee ) ) )
show me all meetings starting at 10 am or after	meeting whose start time is at least 10am	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( time 10 0 ) ) ) )
meetings that end later than 10am	meeting whose end time is larger than 10am	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string > ) ( call SW.ensureNumericEntity ( time 10 0 ) ) ) )
show me all meetings which have only one location	meeting that has less than two location	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string location ) ( string < ) ( number 2 ) ) )
who has attended the weekly standup meeting	attendee of weekly standup	( call SW.listValue ( call SW.getProperty en.meeting.weekly_standup ( string attendee ) ) )
who are the people attending at least two different meetings	person that is attendee of at least two meeting	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string attendee ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ) )
what meeting who starts right right after weekly standup	meeting whose start time is at least end time of weekly standup	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) ) )
show me all meetings that have two or fewer attendees	meeting that has at most two attendee	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string attendee ) ( string <= ) ( number 2 ) ) )
what meeting ends before 3pm or 10am	meeting whose end time is smaller than 10am or 3pm	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( time 10 0 ) ( time 15 0 ) ) ) ) )
what meetings have no more than two different locations	meeting that has at most two location	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string location ) ( string <= ) ( number 2 ) ) )
meetings that are longer than three hours or longer than an hour	meeting whose length is larger than three hours or one hour	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.hour ) ( number 1 en.hour ) ) ) ) )
show me all the meetings that have two or more participants	meeting that has at least two attendee	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string attendee ) ( string >= ) ( number 2 ) ) )
show me all meetings beginning at 10 am which are three hours long	meeting whose start time is 10am and whose length is three hours	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) )
meeting with fewest locations	meeting that has the least number of location	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string min ) ( string location ) ) )
what three hour meeting is at greenberg cafe	meeting whose location is greenberg cafe and whose length is three hours	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) ( string length ) ( string = ) ( number 3 en.hour ) ) )
show me all attendees of the weekly standup meeting	person that is attendee of weekly standup	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) en.meeting.weekly_standup ) )
show me all meetings on january 2nd which are three hours long	meeting whose date is jan 2 and whose length is three hours	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) )
which important meeting starts at 10 in the morning	meeting whose start time is 10am and that is important	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) ( string is_important ) ) )
show me all meetings which end at the same time or later than the weekly standup meeting begins	meeting whose end time is at least start time of weekly standup	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) ) )
show me meeting happening after the day of weekly standup	meeting whose date is larger than date of weekly standup	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string date ) ) ) ) )
find me a meeting that ends 10am or later	meeting whose end time is at least 10am	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( time 10 0 ) ) ) )
what meeting starts at 10am and ends at 10am q	meeting whose start time is 10am and whose end time is 10am	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) )
what meeting was on or before jan 2	meeting whose date is at most jan 2	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2015 1 2 ) ) ) )
who is the person attending  more than two meetings	person that is attendee of more than two meeting	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string attendee ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ) )
meeting at greenberg cafe ends at 1000 am	meeting whose location is greenberg cafe and whose end time is 10am	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) ( string end_time ) ( string = ) ( time 10 0 ) ) )
show me all meetings ending at or after 10 am	meeting whose end time is at least 10am	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( time 10 0 ) ) ) )
what important meeting has a start time at 10am	meeting whose start time is 10am and that is important	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) ( string is_important ) ) )
show me all meetings with alice	meeting whose attendee is alice	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string attendee ) ( string = ) en.person.alice ) )
show me meetings after the weekly standup day	meeting whose date is at least date of weekly standup	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string date ) ) ) ) )
location of meetings that start at 10am	location that is location of meeting whose start time is 10am	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string !type ) ) ( call SW.reverse ( string location ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) ) )
what meeting has length shorter than one to three hours	meeting whose length is smaller than three hours or one hour	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.hour ) ( number 1 en.hour ) ) ) ) )
what meeting has less than two locations	meeting that has less than two location	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string location ) ( string < ) ( number 2 ) ) )
what meeting has a date earlier than weekly startup	meeting whose date is smaller than date of weekly standup	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string date ) ) ) ) )
show me all three hour meetings that alice is attending	meeting whose attendee is alice and whose length is three hours	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string attendee ) ( string = ) en.person.alice ) ( string length ) ( string = ) ( number 3 en.hour ) ) )
