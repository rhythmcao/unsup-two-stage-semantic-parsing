(example
  (utterance "employee who left after alice started")
  (original "employee whose end date is larger than start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find employees with end dates that are no greater than employee alice")
  (original "employee whose end date is at most end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "who is alices employer since 2004")
  (original "employer of employee alice whose start date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date) (string =) (date 2004 -1 -1)) (string employer)))

  )
)
(example
  (utterance "what city has a birthplace of a person who is at least 180 cm")
  (original "city that is birthplace of person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "people born on or after the date alice started working")
  (original "person whose birthdate is at least start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date)))))

  )
)
(example
  (utterance "find all single people born in 2004")
  (original "person whose relationship status is single and whose birthdate is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) en.relationship_status.single) (string birthdate) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "employees whose last day is before alice")
  (original "employee whose end date is smaller than birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find friends of students whose last day is before 2004")
  (original "person that student whose end date is smaller than 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "people born before alice")
  (original "person whose birthdate is smaller than birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate)))))

  )
)
(example
  (utterance "which employees start date is the same as alice")
  (original "employee whose start date is start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "which employeess last day was no earlier than alices first day")
  (original "employee whose end date is at least start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what is alices end date when she was a student")
  (original "end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date)))

  )
)
(example
  (utterance "who is friends with students who start date is 2004")
  (original "person that student whose start date is at least 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what gender is the employee who started in 2004")
  (original "gender that is gender of employee whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "where were the people that started working after 2004 born")
  (original "city that is birthplace of employee whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what employee has a end date that is before the end date of alice")
  (original "employee whose end date is smaller than end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "people who work at mckinsey or google")
  (original "mckinsey or google")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.company.mckinsey en.company.google))

  )
)
(example
  (utterance "which city were at least two people born in")
  (original "city that is birthplace of at least two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string >=) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "find me the friends of the employee who started before 2004")
  (original "person that is friends with employee whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "gender of employee whose start date is not 2004")
  (original "gender that is gender of employee whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "when did alice join at brown university")
  (original "start date of student alice whose university is brown university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string university) (string =) en.university.brown) (string education_start_date)))

  )
)
(example
  (utterance "find the birthplace city of students who have a start date later than 2004")
  (original "city that is birthplace of student whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find people with a height of 180 cm who are the same gender as alice")
  (original "person whose height is 180 cm and that is gender of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) en.person.alice))

  )
)
(example
  (utterance "alices friends who are singles")
  (original "person that alice is friends with and whose relationship status is single")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice) (string relationship_status) (string =) en.relationship_status.single))

  )
)
(example
  (utterance "employees who started before 2004")
  (original "employee whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "2004 graduates friends")
  (original "person that student whose end date is at most 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "an employee ending before or when alice ends")
  (original "employee whose end date is at most end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "birth city of employee whose end date is not after 2004")
  (original "city that is birthplace of employee whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "people who were born in the same city as alice")
  (original "person whose birthplace is city that is birthplace of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) en.person.alice)))

  )
)
(example
  (utterance "people that work for less than two employers")
  (original "employee that has less than two employer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string employer) (string <) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "who is born in a city where alice is born")
  (original "person whose birthplace is city that is birthplace of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) en.person.alice)))

  )
)
(example
  (utterance "who has more than two genders")
  (original "person that has more than two gender")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string >) (number 2)))

  )
)
(example
  (utterance "friends of alice")
  (original "person that alice is friends with and that alice is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice))

  )
)
(example
  (utterance "students who did not graduate before 2004")
  (original "student whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find birthplaces of students whose last day was in 2004 or later")
  (original "city that is birthplace of student whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "all people currently online")
  (original "person that is logged in")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in)))

  )
)
(example
  (utterance "gender which is gender of less than three persons")
  (original "gender that is gender of at most two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string <=) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "what person is a 180 cm tall male")
  (original "person whose height is 180 cm and whose gender is male")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string gender) (string =) en.gender.male))

  )
)
(example
  (utterance "what students have a start date that is the same as student alice")
  (original "student whose start date is start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "people who have friends and started working after 2004")
  (original "person that employee whose start date is larger than 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "who is friends with the person who isnt a software engineer")
  (original "person that employee whose job title is not software engineer is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string !=) en.job_title.software_engineer)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "where were working people that did not stop in 2004 born")
  (original "city that is birthplace of employee whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "males that alice is friends with")
  (original "person that alice is friends with and whose gender is male")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice) (string gender) (string =) en.gender.male))

  )
)
(example
  (utterance "a student who started before 2004 or 2010")
  (original "student whose start date is larger than 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which employee ended earlier than 2004")
  (original "employee whose end date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find me all the relationship statuses of employees who started job after 2004")
  (original "relationship status that is relationship status of employee whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "birthplaces of people who quit their jobs after 2004")
  (original "city that is birthplace of employee whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "employees whose end date is later than alices start date")
  (original "employee whose end date is larger than start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what gender has the most people")
  (original "gender that is gender of the most number of person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "which city were people who are 180 cm tall born in")
  (original "city that is birthplace of person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "name an employee who quit before alice was born")
  (original "employee whose end date is at most birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what sex are the employees who did not start in 2004")
  (original "gender that is gender of employee whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "when did alice start attending school")
  (original "start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date)))

  )
)
(example
  (utterance "find students starting on or after alices last day")
  (original "student whose start date is at least end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which students started before the day alice graduated")
  (original "student whose start date is smaller than end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "list the relationship status of people who quit their jobs before 2005")
  (original "relationship status that is relationship status of employee whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what people have an end date of 2004 and height of 180 cm")
  (original "person whose height is 180 cm and whose end date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string education_end_date) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "what employee has the same birthday as alice")
  (original "employee whose start date is at most birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find employees who have a start date that is at least the same as employee alices end date")
  (original "employee whose start date is at least end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "people that started school after alice started working")
  (original "student whose start date is larger than start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "people that are friends with someone that started working in or before 2004")
  (original "person that is friends with employee whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "relationship status of employee whose start date is not after 2004")
  (original "relationship status that is relationship status of employee whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "gender of student whose end date is at least 2004")
  (original "gender that is gender of student whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "employees whose last day was before or on alices last day")
  (original "employee whose end date is at most end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what is the students relationship status who ended earlier than 2004")
  (original "relationship status that is relationship status of student whose end date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "students who did not start in 2004")
  (original "student whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find friends of people who were born in 2004")
  (original "person that person whose birthdate is 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1))))

  )
)
(example
  (utterance "person with the most friends")
  (original "person that is friends with the most number of person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string max) (string friend) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "person born after alice graduated")
  (original "person whose birthdate is at least end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date)))))

  )
)
(example
  (utterance "find all of alices friends who are currently online")
  (original "person that is logged in and that is friends with alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in)) (string friend) (string =) en.person.alice))

  )
)
(example
  (utterance "what employee was hired last")
  (original "employee that has the smallest start date")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "online male member")
  (original "person that is logged in and whose gender is male")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in)) (string gender) (string =) en.gender.male))

  )
)
(example
  (utterance "student who finishes before 2004 or 2010")
  (original "student whose end date is smaller than 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "name a person born in 2004 who is friends with alice")
  (original "person that alice is friends with and whose birthdate is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice) (string birthdate) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "is the person single")
  (original "relationship status that is relationship status of person whose relationship status is single")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) en.relationship_status.single)))

  )
)
(example
  (utterance "people that have the least number of relationship statuses")
  (original "person that has the least number of relationship status")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string min) (string relationship_status)))

  )
)
(example
  (utterance "what employee has a start date that is the same as the end date of alice")
  (original "employee whose start date is end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what are the relationship statuses of people that are currently online")
  (original "relationship status that is relationship status of person that is logged in")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in))))

  )
)
(example
  (utterance "find employees who have a start day at the same time as alices birthdate")
  (original "employee whose start date is birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "which people are friends with employees who strated before 2004")
  (original "person that is friends with employee whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "the person logged in who is born in 2004")
  (original "person whose birthdate is 2004 and that is logged in")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1)) (string logged_in)))

  )
)
(example
  (utterance "what is the employees relationship status who ended in 2004")
  (original "relationship status that is relationship status of employee whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "all 180 cm tall people who studied computer science")
  (original "person whose height is 180 cm and whose field of study is computer science")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string field_of_study) (string =) en.field.computer_science))

  )
)
(example
  (utterance "people who went to brown university and are single")
  (original "person whose height is 180 cm and whose university is brown university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string university) (string =) en.university.brown))

  )
)
(example
  (utterance "find birthplaces of students starting in 2004 and later")
  (original "city that is birthplace of student whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find me the gender of students who did not attend brown university")
  (original "gender that is gender of student whose university is not brown university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string university) (string !=) en.university.brown)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what did alice study when she graduated in 2004")
  (original "field of study of student alice whose end date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date) (string =) (date 2004 -1 -1)) (string field_of_study)))

  )
)
(example
  (utterance "students who started on the same date as alice")
  (original "student whose start date is start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "person who has a birthday before alice graduates")
  (original "person whose birthdate is larger than end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date)))))

  )
)
(example
  (utterance "person who is friends with students who joined in and after 2004")
  (original "person that is friends with student whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "who was hired after alice quit")
  (original "employee whose start date is smaller than end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "a friend of someone emplyed after 2004")
  (original "person that employee whose start date is larger than 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "people that stopped work after 2004 or after 2010")
  (original "employee whose end date is larger than 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find students whose last day is after alices first day")
  (original "student whose end date is larger than start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "when did alice start the job she left in 2004")
  (original "start date of employee alice whose end date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date) (string =) (date 2004 -1 -1)) (string employment_start_date)))

  )
)
(example
  (utterance "what gender is the online person")
  (original "gender that is gender of person that is logged in")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in))))

  )
)
(example
  (utterance "find me the student who left school before alice started")
  (original "student whose end date is larger than start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "where were the students of any field but computer science born")
  (original "city that is birthplace of student whose field of study is not computer science")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string !=) en.field.computer_science)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "employees starting before or contemporaneous to alice")
  (original "employee whose start date is at most start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "which employees started no later than alices graduation day")
  (original "employee whose start date is at most end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "who is born before 2004")
  (original "person whose birthdate is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1))))

  )
)
(example
  (utterance "people that started school in or before 2004 or in or before 2010")
  (original "student whose start date is at most 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "people that started school before alice stopped working")
  (original "student whose start date is smaller than end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "people that stopped working when alice stopped school or before")
  (original "employee whose end date is at most end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what employees have an end date that is later than either 2004 or 2010")
  (original "employee whose end date is larger than 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "where were people that stopped working after 2004 born")
  (original "city that is birthplace of employee whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what city is the birthplace of employees before 2004")
  (original "city that is birthplace of employee whose end date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what are the start and end employment dates of alice")
  (original "student whose end date is smaller than start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what is the relationship status of person not employed by mckinsey")
  (original "relationship status that is relationship status of employee whose employer is not mckinsey")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employer) (string !=) en.company.mckinsey)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "which employee has the most job titles")
  (original "employee that has the most number of job title")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string max) (string job_title))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find birthplace of student not studying computer science")
  (original "city that is birthplace of student whose field of study is not computer science")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string !=) en.field.computer_science)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what gender do at least two people have")
  (original "gender that is gender of at least two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string >=) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "students that will begin after 2004 and no later than 2010")
  (original "student whose start date is at least 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what person has a relationship status the same as alice")
  (original "person whose relationship status is relationship status of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string relationship_status))))

  )
)
(example
  (utterance "which men are 180 cm tall")
  (original "person whose height is 180 cm and whose gender is male")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string gender) (string =) en.gender.male))

  )
)
(example
  (utterance "employees that are not employed by mckinsey")
  (original "employee whose employer is not mckinsey")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employer) (string !=) en.company.mckinsey)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "people that stopped working before 2004")
  (original "employee whose end date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "which people are friends with students who graduated no earlier than 2004")
  (original "person that student whose end date is at least 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "which students graduate after 2004")
  (original "student whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "gender of student whose university of not brown university")
  (original "gender that is gender of student whose university is not brown university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string university) (string !=) en.university.brown)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find employees friend with a last day in 2004 or before")
  (original "person that is friends with employee whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "which people that alice is friends with are friends with alice")
  (original "person that is friends with alice and that alice is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) en.person.alice) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice))

  )
)
(example
  (utterance "what person born in 2004 is 180 cm tall")
  (original "person whose height is 180 cm and whose birthdate is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string birthdate) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "what students completed school the same year alice began")
  (original "student whose end date is start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "friends of employees finishing in or after 2004")
  (original "person that is friends with employee whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "who is friends with the employee who started no later than 2004")
  (original "person that employee whose start date is at least 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find the relationship status of employees whom have an end date that is bigger than 2004")
  (original "relationship status that is relationship status of employee whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "people that stopped school on or before the day alice started school")
  (original "student whose end date is at most start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which student has at least 2 university to go to")
  (original "student that has at most two university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string university) (string <=) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "friends of alice who are 180 cm tall")
  (original "person whose height is 180 cm and that alice is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice))

  )
)
(example
  (utterance "which people are friends with alice and is 180 cm tall")
  (original "person that is friends with alice and whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) en.person.alice) (string height) (string =) (number 180 en.cm)))

  )
)
(example
  (utterance "what is the relationship status of people that started working in or after 2004")
  (original "relationship status that is relationship status of employee whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what is the gender of the employee who started after 2004")
  (original "gender that is gender of employee whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "employees who start before or when alice finishes")
  (original "employee whose start date is at most end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what is the relationship status of people that started school in or after 2004")
  (original "relationship status that is relationship status of student whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "where was the person born who is 180 cm tall")
  (original "city that is birthplace of person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "employee who left on or after alice joinde")
  (original "employee whose end date is at least start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "employees whose start date is before or on alices end date")
  (original "employee whose end date is at most end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "who was born in 2004")
  (original "person whose birthdate is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1))))

  )
)
(example
  (utterance "what is the employees relationship status who started no later than 2004")
  (original "relationship status that is relationship status of employee whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what employees have a end date that is no greater than the start date of student alice")
  (original "employee whose end date is at most start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "whats the gender of students who started school before 2004")
  (original "gender that is gender of student whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "fine me employees that are leaving before alices birthday")
  (original "employee whose end date is smaller than birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "employees leaving the company no earlier than alices start date")
  (original "employee whose end date is at least start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "people who are friends with somebody who did not start in 2004")
  (original "person that is friends with employee whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what is the university of a person whose height is 180 cm")
  (original "university that is university of person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.university) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string university)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "employees who quit after alice quit school")
  (original "employee whose end date is larger than end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "students who started school on the same day as or before alive started")
  (original "student whose end date is at most start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "students whose end date is on alices end date or later")
  (original "student whose end date is at least end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "people that started school before alice stopped")
  (original "student whose start date is smaller than end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which students go to brown university or ucla")
  (original "student whose university is brown university or ucla")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string university) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.university.brown en.university.ucla))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "who was the first person to start working")
  (original "employee that has the smallest start date")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "students whose start date is no later than alices")
  (original "student whose start date is at most start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "in what city was the employee who is not a software engineer born")
  (original "city that is birthplace of employee whose job title is not software engineer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string !=) en.job_title.software_engineer)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "the birthplace of an employee not ending in 2004")
  (original "city that is birthplace of employee whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "genders of employees starting in or after 2004")
  (original "gender that is gender of employee whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what student graduated the same day as alice")
  (original "student whose end date is end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "employees who started on the day that alice graduated")
  (original "employee whose start date is end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "students finishing on alices birthday")
  (original "student whose end date is birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which of alices friends were born in new york")
  (original "person that is friends with alice and whose birthplace is new york")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) en.person.alice) (string birthplace) (string =) en.city.new_york))

  )
)
(example
  (utterance "which people are friends with alices friends")
  (original "person that person that alice is friends with is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice)))

  )
)
(example
  (utterance "student who started the same day as alices birthday")
  (original "student whose start date is birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "people who are friends with students who do not graudate in 2004")
  (original "person that is friends with student whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "relationship status of student whose start date is before 2004")
  (original "relationship status that is relationship status of student whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find the birthdplaces of new employees we have starting by 2004")
  (original "city that is birthplace of employee whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "who stopped working after 2004  and has connections to me")
  (original "person that employee whose end date is larger than 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find people with a height of 180 cm who also have a birthdate of 2004")
  (original "person whose height is 180 cm and whose birthdate is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string birthdate) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "find people who are friends with alice and are single")
  (original "person that alice is friends with and whose relationship status is single")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice) (string relationship_status) (string =) en.relationship_status.single))

  )
)
(example
  (utterance "find someone who was born before alice")
  (original "person whose birthdate is smaller than birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate)))))

  )
)
(example
  (utterance "what employees have a start date of either 2004 or 2010")
  (original "employee whose start date is 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "birth city of alices friend")
  (original "city that is birthplace of person that alice is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice)))

  )
)
(example
  (utterance "which employee started right when alice quit her job")
  (original "employee whose start date is end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what is the relationship status of employees whose last day was no earlier than 2004")
  (original "relationship status that is relationship status of employee whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "relationship status of all students whos end date is 2004 on")
  (original "relationship status that is relationship status of student whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what students graduated in 2004 or 2010")
  (original "student whose end date is at least 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find the field of study of all persons with a height of 180 cm")
  (original "field that is field of study of person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.field) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string field_of_study)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "people that are friends with either alice or bob")
  (original "person that is friends with alice or bob")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.person.alice en.person.bob)))

  )
)
(example
  (utterance "a student who left on the day alice did or before")
  (original "student whose end date is at most end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "person who was born before alice start date")
  (original "person whose birthdate is smaller than start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date)))))

  )
)
(example
  (utterance "what employees who are not software engineers")
  (original "employee whose job title is not software engineer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string !=) en.job_title.software_engineer)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what people have a birthplace of new york who are also friends with alice")
  (original "person whose birthplace is new york and that alice is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) en.city.new_york) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice))

  )
)
(example
  (utterance "people who is not friend with alice")
  (original "person that not is friends with alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string !=) en.person.alice))

  )
)
(example
  (utterance "find people with friends that started school before 2004")
  (original "person that student whose start date is smaller than 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what people have a height of 180 cm and field of study that is computer science")
  (original "person whose height is 180 cm and whose field of study is computer science")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string field_of_study) (string =) en.field.computer_science))

  )
)
(example
  (utterance "what gender is the person who 180 cm tall")
  (original "gender that is gender of person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "students who graduate no sooner than the day alice started")
  (original "student whose end date is at least start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "birthplaces of alices friends")
  (original "city that is birthplace of person that alice is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice)))

  )
)
(example
  (utterance "name the city where an employee was born who started no later than 2004")
  (original "city that is birthplace of employee whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "students whose end date is before alices start date")
  (original "student whose end date is smaller than start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "a student that doesnt attend brown university")
  (original "student whose university is not brown university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string university) (string !=) en.university.brown)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "students finishing before or in 2004")
  (original "student whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what students have a start date that is 2004 or later and who are their friends")
  (original "person that student whose start date is at least 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "people born in the same city as alice")
  (original "person whose birthplace is city that is birthplace of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) en.person.alice)))

  )
)
(example
  (utterance "find students whose last day was 2004 or later")
  (original "student whose end date is at least 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "employees who began working before alice finished school")
  (original "employee whose start date is smaller than end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what cities were the single people born in")
  (original "city that is birthplace of person whose relationship status is single")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) en.relationship_status.single)))

  )
)
(example
  (utterance "employees who quit their job the same day or after alice started school")
  (original "employee whose end date is at least start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what cities are the birthplace of students later than 2004")
  (original "city that is birthplace of student whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "which of alices friends are male")
  (original "person that alice is friends with and whose gender is male")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice) (string gender) (string =) en.gender.male))

  )
)
(example
  (utterance "name all students who quit before alice")
  (original "student whose end date is smaller than end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find the relationship statuses of students with a start date later than 2004")
  (original "relationship status that is relationship status of student whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "birthplace of only one person")
  (original "city that is birthplace of less than two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string <) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "find all the relationship statuses of the students that started in 2004 and before")
  (original "relationship status that is relationship status of student whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find people who have at least two genders")
  (original "person that has at least two gender")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string >=) (number 2)))

  )
)
(example
  (utterance "an employee ending before 2004")
  (original "employee whose end date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what is the relationship status of people that started school after 2004")
  (original "relationship status that is relationship status of student whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "who is a person whose field of study is computer science and whose height is 180 cm")
  (original "person whose height is 180 cm and whose field of study is computer science")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string field_of_study) (string =) en.field.computer_science))

  )
)
(example
  (utterance "people who are friends with alice whose height is 180 cm")
  (original "person that is friends with alice and whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) en.person.alice) (string height) (string =) (number 180 en.cm)))

  )
)
(example
  (utterance "what employee was terminated after alice started working")
  (original "employee whose end date is larger than start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "number of cities people are from")
  (original "number of city")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call .size (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type))))

  )
)
(example
  (utterance "find friends of people who did not start school in 2004")
  (original "person that student whose start date is not 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "which students graduated no later than alices last day of work")
  (original "student whose end date is at most end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "students who ended school after alice started working")
  (original "student whose end date is larger than start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which employees strated after 2004 or 2010")
  (original "employee whose start date is larger than 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "employees who started working in or before 2010")
  (original "employee whose start date is at most 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "employees who started working after alice quit her job")
  (original "employee whose start date is larger than end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "name a single person who is friends with alice")
  (original "person whose relationship status is single and that is friends with alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) en.relationship_status.single) (string friend) (string =) en.person.alice))

  )
)
(example
  (utterance "what is the relationship status of students who did not start in 2004")
  (original "relationship status that is relationship status of student whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find the birth city of employees with a start date later than 2004")
  (original "city that is birthplace of employee whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "which employee quit first")
  (original "employee that has the smallest end date")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find one of alices friends who was born in new york")
  (original "person that is friends with alice and whose birthplace is new york")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) en.person.alice) (string birthplace) (string =) en.city.new_york))

  )
)
(example
  (utterance "friends of students before 2004")
  (original "person that student whose start date is smaller than 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "gender of an employee starting before 2004")
  (original "gender that is gender of employee whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find people who have the same birthplace as alice")
  (original "person whose birthplace is birthplace of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthplace))))

  )
)
(example
  (utterance "what student has fewer than two fields of study")
  (original "student that has less than two field of study")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string field_of_study) (string <) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "who was born before alices last day of employment")
  (original "person whose birthdate is smaller than end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date)))))

  )
)
(example
  (utterance "what is the relationship status of the student who is not studying computer science")
  (original "relationship status that is relationship status of student whose field of study is not computer science")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string !=) en.field.computer_science)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "student whose end date is not after birth date of alice")
  (original "student whose end date is at most birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "people that have a friend that stopped school in or after 2004")
  (original "person that is friends with student whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "people that started working before alice stopped school")
  (original "employee whose start date is smaller than end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find singlestatus people who are alices friend")
  (original "person whose relationship status is single and that alice is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) en.relationship_status.single) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice))

  )
)
(example
  (utterance "people who are friends with student that didnt end in 2004")
  (original "person that is friends with student whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "people that started working after 2004")
  (original "employee whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "which people were born in the same place as alice")
  (original "person whose birthplace is birthplace of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthplace))))

  )
)
(example
  (utterance "what is the birthplace of students who are not brown university students")
  (original "city that is birthplace of student whose university is not brown university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string university) (string !=) en.university.brown)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find alices friend who is logged in")
  (original "person that alice is friends with and that is logged in")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice) (string logged_in)))

  )
)
(example
  (utterance "employees who quit as late as alice")
  (original "employee whose end date is at most end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "person who is a friend of an employee that has worked since 2004")
  (original "person that is friends with employee whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "who is friends with the employee that is leaving the company by 2004")
  (original "person that is friends with employee whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find the names of all students who graduated between 2004 and 2010")
  (original "student whose end date is 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "employees who did not start in 2004")
  (original "employee whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "which person is friends with a student who started earlier than 2004")
  (original "person that is friends with student whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what city is the birthplace of the student who ended school before 2004")
  (original "city that is birthplace of student whose end date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find people that have two relationship statuses")
  (original "person that has two relationship status")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) (number 2)))

  )
)
(example
  (utterance "student who joined on or before the day alice left")
  (original "student whose start date is at most end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what is the birthplace of employees whose last day was not in 2004")
  (original "city that is birthplace of employee whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "when did alice start working for mckinsey")
  (original "start date of employee alice whose employer is mckinsey")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employer) (string =) en.company.mckinsey) (string employment_start_date)))

  )
)
(example
  (utterance "person named alice who studies computer science at a university")
  (original "university of student alice whose field of study is computer science")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string field_of_study) (string =) en.field.computer_science) (string university)))

  )
)
(example
  (utterance "what is the relationship status of an employee who quit in 2004 or later")
  (original "relationship status that is relationship status of employee whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what is the birthplace city of student that was enrolled by 2004")
  (original "city that is birthplace of student whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "which employee quit recently")
  (original "employee that has the largest end date")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "employees who share a workplace with alive")
  (original "employee whose employer is employer of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employer) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employer)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what students are part of two universities")
  (original "student that has at most two university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string university) (string <=) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find me all people named alice who quit during 2004")
  (original "end date of student alice whose end date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date) (string =) (date 2004 -1 -1)) (string education_end_date)))

  )
)
(example
  (utterance "what students have the earliest start date")
  (original "student that has the smallest start date")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find birthplaces of nonmckinsey employees")
  (original "city that is birthplace of employee whose employer is not mckinsey")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employer) (string !=) en.company.mckinsey)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "city where the least number of people were born")
  (original "city that is birthplace of the least number of person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "employee whose employer is not mckinsey")
  (original "employee whose employer is not mckinsey")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employer) (string !=) en.company.mckinsey)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find me all people with the same gender as alice or bob")
  (original "gender that is gender of alice or bob")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.person.alice en.person.bob)))

  )
)
(example
  (utterance "gender of employees who left before 2004")
  (original "gender that is gender of employee whose end date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "who is born is 2004 and is a male")
  (original "person whose gender is male and whose birthdate is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) en.gender.male) (string birthdate) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "who is friends with alice and is male")
  (original "person that alice is friends with and whose gender is male")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice) (string gender) (string =) en.gender.male))

  )
)
(example
  (utterance "people who started working on the day alice quit her job")
  (original "employee whose start date is end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "who has least number of friends")
  (original "person that the least number of person is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "employees who quit after alice started her job")
  (original "employee whose end date is at least start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "employees not starting in 2004")
  (original "employee whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "which people were born after alice left her job")
  (original "person whose birthdate is larger than end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date)))))

  )
)
(example
  (utterance "what is the gender that is the gender of at most two people")
  (original "gender that is gender of at most two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string <=) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "who is friends with the single person")
  (original "person that person whose relationship status is single is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) en.relationship_status.single)))

  )
)
(example
  (utterance "find employees starting on or after alices birthdate")
  (original "employee whose start date is at least birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what is the relationship status of students with an end date that is not 2004")
  (original "relationship status that is relationship status of student whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what students have an end date that is earlier than the start date of alice")
  (original "student whose end date is smaller than start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which student is in the same field of study as alice")
  (original "student whose field of study is field of study of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string field_of_study)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "people with friends who started university in 2004 or later")
  (original "person that student whose start date is at least 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "friend of employee whose start date is before 2004")
  (original "person that is friends with employee whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "people that are not friends with alice")
  (original "person that not is friends with alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string !=) en.person.alice))

  )
)
(example
  (utterance "gender of students starting contemporaneous to or before 2004")
  (original "gender that is gender of student whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find people who are employees with an end date no later than 2004 and their friends")
  (original "person that employee whose end date is at most 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "people that stopped school after alice started school")
  (original "student whose end date is larger than start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "gender of employees who start before or in 2004")
  (original "gender that is gender of employee whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "people who are 180 cm tall and are single")
  (original "person whose height is 180 cm and whose relationship status is single")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string relationship_status) (string =) en.relationship_status.single))

  )
)
(example
  (utterance "anyone single born in 2004")
  (original "person whose birthdate is 2004 and whose relationship status is single")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1)) (string relationship_status) (string =) en.relationship_status.single))

  )
)
(example
  (utterance "find me all students that will start at the same time or after alice starts")
  (original "student whose start date is at most start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find university of people who are 180cm tall")
  (original "university that is university of person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.university) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string university)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "person who works at mckinsey or google")
  (original "employee whose employer is mckinsey or google")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employer) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.company.mckinsey en.company.google))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "which employee ended after 2004")
  (original "employee whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "employees who finish when or before alice starts")
  (original "employee whose end date is at most start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "who is in the most relationships")
  (original "relationship status that is relationship status of the most number of person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "what is the gender of employees who started after 2004")
  (original "gender that is gender of employee whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "who is the employee whose start date was at least 2004 friends with")
  (original "person that employee whose start date is at most 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find employees with a start date earlier than the end date of student alice")
  (original "employee whose start date is smaller than end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "people who were born the same day alice started school")
  (original "person whose birthdate is start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))

  )
)
(example
  (utterance "find the birth cities of students who have a start date in 2004 or greater")
  (original "city that is birthplace of student whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "who is a person whose university is not brown university friends with")
  (original "person that student whose university is not brown university is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string university) (string !=) en.university.brown)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "whats the relationship status of employees who started work before 2004")
  (original "relationship status that is relationship status of employee whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "people who were born after 2004")
  (original "person whose birthdate is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1))))

  )
)
(example
  (utterance "find employees friends with last day after 2004")
  (original "person that is friends with employee whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "who has over two genders")
  (original "person that has more than two gender")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string >) (number 2)))

  )
)
(example
  (utterance "is alice employed by mckinsey")
  (original "employer of employee alice whose employer is mckinsey")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employer) (string =) en.company.mckinsey) (string employer)))

  )
)
(example
  (utterance "find employees whose end date is the same as that of student alice")
  (original "employee whose end date is end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what are the relationships statuses of students who started school before 2004")
  (original "relationship status that is relationship status of student whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "students friend whose university is not brown university")
  (original "person that student whose university is not brown university is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string university) (string !=) en.university.brown)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "which friends stopped working in 2004")
  (original "person that employee whose end date is at most 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "people who are friends with someone that did not start in 2004")
  (original "person that student whose start date is not 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what employees have an end date that is later than that of employee alice")
  (original "employee whose end date is larger than end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "gender of a student not attending brown university")
  (original "gender that is gender of student whose university is not brown university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string university) (string !=) en.university.brown)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "gender that has less than two people")
  (original "gender that is gender of less than two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string <) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "relationship status of students who are not studying at brown university")
  (original "relationship status that is relationship status of student whose university is not brown university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string university) (string !=) en.university.brown)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "gender of student whose start date is not 2004")
  (original "gender that is gender of student whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "student with start date not after end date of student alice")
  (original "student whose start date is at most end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "is the person single or married")
  (original "single or married")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.relationship_status.single en.relationship_status.married))

  )
)
(example
  (utterance "when did alice stop working for mckinsey")
  (original "end date of employee alice whose employer is mckinsey")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employer) (string =) en.company.mckinsey) (string employment_end_date)))

  )
)
(example
  (utterance "find everybody who has two genders")
  (original "person that has two gender")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) (number 2)))

  )
)
(example
  (utterance "what is the alices 2004 end date")
  (original "end date of student alice whose end date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date) (string =) (date 2004 -1 -1)) (string education_end_date)))

  )
)
(example
  (utterance "who are people who are employees with a start date not of 2004 friends with")
  (original "person that employee whose start date is not 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what students have a end date that is after the start date of student alice")
  (original "student whose end date is larger than start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "gender of employees that do not work as software engineers")
  (original "gender that is gender of employee whose job title is not software engineer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string !=) en.job_title.software_engineer)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "when did alice begin as an employee")
  (original "start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date)))

  )
)
(example
  (utterance "who is shorter than alice")
  (original "person whose height is smaller than height of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string height)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string height)))))

  )
)
(example
  (utterance "what is the relationship status of people that started school before 2004")
  (original "relationship status that is relationship status of student whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "how many job titles are there")
  (original "number of job title")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call .size (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.job_title) (string !type))))

  )
)
(example
  (utterance "which student is not from brown university")
  (original "student whose university is not brown university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string university) (string !=) en.university.brown)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "who works for someone other than mckinsey")
  (original "employee whose employer is not mckinsey")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employer) (string !=) en.company.mckinsey)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "students who started before or on alices last day")
  (original "student whose start date is at most end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "who was born on or after alices last day of school")
  (original "person whose birthdate is at least end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date)))))

  )
)
(example
  (utterance "people with less than two friends")
  (original "person that is friends with less than two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string <) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "find employees with the same last day as student alice")
  (original "employee whose end date is end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "which employees started after alice did")
  (original "employee whose start date is larger than start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "students who start before alice finishes")
  (original "student whose start date is smaller than end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "people that were born on the day alice started work")
  (original "person whose birthdate is start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))

  )
)
(example
  (utterance "what city was the student born in that has 2004 as end date")
  (original "city that is birthplace of student whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "which person is friends with an employee who was here in 2004")
  (original "person that is friends with employee whose end date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "birthplace of students whose end date is before 2004")
  (original "city that is birthplace of student whose end date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "which people are 180 cm tall")
  (original "person whose height is 180 cm and whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string height) (string =) (number 180 en.cm)))

  )
)
(example
  (utterance "find me students whose start date is either 2004 or 2010")
  (original "student whose start date is 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find me the student who started before alice")
  (original "student whose start date is larger than start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which employee ended no later than 2004")
  (original "employee whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what is the relationship status of an employee whose start date is later than 2004")
  (original "relationship status that is relationship status of employee whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what students have an end date no earlier than 2004")
  (original "student whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "how tall is alice")
  (original "height of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string height)))

  )
)
(example
  (utterance "name an employee who started before alice quit")
  (original "employee whose start date is at most end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "which of alices friends is 180 cm tall")
  (original "person that is friends with alice and whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) en.person.alice) (string height) (string =) (number 180 en.cm)))

  )
)
(example
  (utterance "employee whose end date is not after 2004")
  (original "employee whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what employees have a start date that is the same as student alice or later")
  (original "employee whose start date is at least start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "where is the birthplace of the student who started before 2004")
  (original "city that is birthplace of student whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "which students have no more than two majors")
  (original "student that has at most two field of study")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string field_of_study) (string <=) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "who is friends with students who started before 2004")
  (original "person that is friends with student whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "people with relationship status of at least two people")
  (original "relationship status that is relationship status of at least two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string >=) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "which students graduate no later than 2004 or 2010")
  (original "student whose end date is at most 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find all people who are not in a relationship and were born in 2004")
  (original "person whose birthdate is 2004 and whose relationship status is single")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1)) (string relationship_status) (string =) en.relationship_status.single))

  )
)
(example
  (utterance "find students who have fewer than two field of study")
  (original "student that has less than two field of study")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string field_of_study) (string <) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what cities in new york were people born in")
  (original "city that is birthplace of person whose birthplace is new york")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) en.city.new_york)))

  )
)
(example
  (utterance "friends of students who began earlier than 2004")
  (original "person that student whose start date is smaller than 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "student who has 2004 as a date")
  (original "student whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "sex of students who didnt start school in 2004")
  (original "gender that is gender of student whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "friend of employee whose job title is not software engineer")
  (original "person that is friends with employee whose job title is not software engineer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string !=) en.job_title.software_engineer)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "people who have friends that are currently online")
  (original "person that is friends with person that is logged in")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in))))

  )
)
(example
  (utterance "find me a person born in either 2004 or 2010")
  (original "person whose birthdate is 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))

  )
)
(example
  (utterance "gender of students who are not studying computer science")
  (original "gender that is gender of student whose field of study is not computer science")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string !=) en.field.computer_science)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what employee has a start date that is earlier than the birthdate of alice")
  (original "employee whose start date is smaller than birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what person was born earlier than that of alice")
  (original "person whose birthdate is smaller than birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate)))))

  )
)
(example
  (utterance "people born before 2004")
  (original "person whose birthdate is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1))))

  )
)
(example
  (utterance "which students graduate before alice does")
  (original "student whose end date is smaller than end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what is the relationship status of people born in new york")
  (original "relationship status that is relationship status of person whose birthplace is new york")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) en.city.new_york)))

  )
)
(example
  (utterance "who are friends with connection who started school before 2004")
  (original "person that student whose start date is smaller than 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "gender of employee whose end date is before 2004")
  (original "gender that is gender of employee whose end date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "which employees start date is not 2004")
  (original "person that employee whose start date is not 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "employee starting the soonest")
  (original "employee that has the smallest start date")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find students who have no more than two fields of study")
  (original "student that has at most two field of study")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string field_of_study) (string <=) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "people that study or studied anywhere but brown university")
  (original "student whose university is not brown university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string university) (string !=) en.university.brown)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "whose friend is logged in")
  (original "person that is friends with person that is logged in")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in))))

  )
)
(example
  (utterance "any male who is logged in")
  (original "person whose gender is male and that is logged in")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) en.gender.male) (string logged_in)))

  )
)
(example
  (utterance "what person is friends with the employee that was hired before 2004")
  (original "person that is friends with employee whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "employees who finish before alice")
  (original "employee whose end date is smaller than end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what is relationship status of employees with start dates other than 2004")
  (original "relationship status that is relationship status of employee whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "a friend of alice that is logged in")
  (original "person that alice is friends with and that is logged in")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice) (string logged_in)))

  )
)
(example
  (utterance "list the birthplaces of people who completed their studies before 2004")
  (original "city that is birthplace of student whose end date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "studens with the fewest fields of study")
  (original "student that has the least number of field of study")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string min) (string field_of_study))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "persons born before 2004")
  (original "person whose birthdate is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1))))

  )
)
(example
  (utterance "which employees last day was after alices last day")
  (original "employee whose end date is larger than end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "employee who shares same employer with employee alice")
  (original "employee whose employer is employer of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employer) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employer)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "who doesnt work for mckinsey")
  (original "employee whose employer is not mckinsey")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employer) (string !=) en.company.mckinsey)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "people who are male and born in 2004")
  (original "person whose gender is male and whose birthdate is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) en.gender.male) (string birthdate) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "find me all employees that start on the same day as alice")
  (original "employee whose start date is start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what people are friends with students that have a start date of 2004 or later")
  (original "person that is friends with student whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what are the birthplaces of people logged in")
  (original "city that is birthplace of person that is logged in")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in))))

  )
)
(example
  (utterance "what person has less than two friends")
  (original "person that less than two person is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string <) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "relationship status of nonsoftware engineers")
  (original "relationship status that is relationship status of employee whose job title is not software engineer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string !=) en.job_title.software_engineer)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "who is alice friends with that also have relationship statuses of single")
  (original "person that alice is friends with and whose relationship status is single")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice) (string relationship_status) (string =) en.relationship_status.single))

  )
)
(example
  (utterance "people who work at mckinsey and are 180 cm tall")
  (original "person whose height is 180 cm and whose employer is mckinsey")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string employer) (string =) en.company.mckinsey))

  )
)
(example
  (utterance "which software engineer is 180 cm tall")
  (original "person whose height is 180 cm and whose job title is software engineer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string job_title) (string =) en.job_title.software_engineer))

  )
)
(example
  (utterance "which students graduate after alice starts her new job")
  (original "student whose end date is larger than start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find people who are logged in who are alices friends")
  (original "person that is logged in and that alice is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice))

  )
)
(example
  (utterance "which students major in computer science or history")
  (original "student whose field of study is computer science or history")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.field.computer_science en.field.history))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "students finishing after alice")
  (original "student whose end date is larger than end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which employee quit their job first")
  (original "employee that has the smallest end date")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "relationship status of employee finishing contemporaneous to or after 2004")
  (original "relationship status that is relationship status of employee whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "who is the student whose start date is at least 2004 friends with")
  (original "person that student whose start date is at least 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "gender of only one person")
  (original "gender that is gender of less than two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string <) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "employees with two job titles at most")
  (original "employee that has at most two job title")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string job_title) (string <=) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what is the average height of everyone")
  (original "average height of person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.aggregate (string avg) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height))))

  )
)
(example
  (utterance "what is gender of employees with last days other than 2004")
  (original "gender that is gender of employee whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "employees starting the latest")
  (original "employee that has the largest start date")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "employees who quit their job before alice started working")
  (original "employee whose end date is smaller than start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find students whom have a start date of 2004 or later")
  (original "student whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "a student that starts before alice finishes")
  (original "student whose start date is smaller than end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "where were the people that started work in or after 2004 born")
  (original "city that is birthplace of employee whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find friends of people who started their job before 2004")
  (original "person that employee whose start date is smaller than 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what is the relationship status of everyone who is not a software engineer")
  (original "relationship status that is relationship status of employee whose job title is not software engineer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string !=) en.job_title.software_engineer)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "people born anywhere but new york")
  (original "person whose birthplace is not new york")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string !=) en.city.new_york))

  )
)
(example
  (utterance "who is the person that is 180 cm friends with")
  (original "person that person whose height is 180 cm is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "find employees whose end date is the start date of student alice or later")
  (original "employee whose end date is at least start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what is the birthplace city of a student who started during or before 2004")
  (original "city that is birthplace of student whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "which employee started earlier than alices birthdate")
  (original "employee whose start date is smaller than birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "singles who were born in 2004")
  (original "person whose birthdate is 2004 and whose relationship status is single")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1)) (string relationship_status) (string =) en.relationship_status.single))

  )
)
(example
  (utterance "who started working after the student alice did")
  (original "student whose start date is larger than start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which students end date is greater than alices start date")
  (original "student whose end date is larger than start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "people that have two or less birthplaces")
  (original "person that has at most two birthplace")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string <=) (number 2)))

  )
)
(example
  (utterance "what person was born in new york and is friends with alice")
  (original "person whose birthplace is new york and that is friends with alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) en.city.new_york) (string friend) (string =) en.person.alice))

  )
)
(example
  (utterance "one worker who is a software engineer or program manager")
  (original "employee whose job title is software engineer or program manager")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.job_title.software_engineer en.job_title.program_manager))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "can not parapharase")
  (original "gender that is gender of two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "employee with not more than two employers")
  (original "employee that has at most two employer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string employer) (string <=) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find all single people that are friends with alice")
  (original "person whose relationship status is single and that alice is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) en.relationship_status.single) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice))

  )
)
(example
  (utterance "students who graduated on or after alices birthdate")
  (original "student whose end date is at least birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what sex are the employees who did not quit in 2004")
  (original "gender that is gender of employee whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what is the relationship status of an employee who is not a software engineer")
  (original "relationship status that is relationship status of employee whose job title is not software engineer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string !=) en.job_title.software_engineer)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "employee with one job title")
  (original "employee that has less than two job title")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string job_title) (string <) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what is the relationship status of students who have an end date that is from 2004 or greater")
  (original "relationship status that is relationship status of student whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find the friends of people who are currently online")
  (original "person that person that is logged in is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in))))

  )
)
(example
  (utterance "who is friend of alice")
  (original "person that is friends with alice and that is friends with alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) en.person.alice) (string friend) (string =) en.person.alice))

  )
)
(example
  (utterance "relationship status of employees whose end date is no earlier than 2004")
  (original "relationship status that is relationship status of employee whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "friend of someone who quit before 2004")
  (original "person that employee whose end date is smaller than 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "the birthplace of a student not starting in 2004")
  (original "city that is birthplace of student whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "who was born in new york in 2004")
  (original "person whose birthplace is new york and whose birthdate is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) en.city.new_york) (string birthdate) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "find me people born in 2004")
  (original "person whose birthdate is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "find the relation status of people who are 180 cm tall")
  (original "relationship status that is relationship status of person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "find students with one or two fields of study")
  (original "student that has at most two field of study")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string field_of_study) (string <=) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "people with only one friend")
  (original "person that is friends with less than two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string <) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "which employee started no greater than alices")
  (original "employee whose start date is at most start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "which student ended at most on alices birthdate")
  (original "student whose end date is at most birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "relationship status as most of the persons")
  (original "relationship status that is relationship status of the most number of person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "how many genders are there")
  (original "number of gender")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call .size (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type))))

  )
)
(example
  (utterance "who is software engineer or program manager")
  (original "employee whose job title is software engineer or program manager")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.job_title.software_engineer en.job_title.program_manager))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what cities are the birthplace of students who did not start in 2004")
  (original "city that is birthplace of student whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "students finishing contemporaneous to alice")
  (original "student whose end date is end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "people that started working the same time or after alice did")
  (original "employee whose start date is at least start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find the people who quit their job before alice joined her study")
  (original "employee whose end date is smaller than start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what employees have an end date of 2004 or later and who are their friends")
  (original "person that employee whose end date is at least 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "employee who works as a software engineer or manager")
  (original "employee whose job title is software engineer or program manager")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.job_title.software_engineer en.job_title.program_manager))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "which students ended school in 2004 and 2010")
  (original "student whose end date is at least 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what gender is the student that graduated by 2004")
  (original "gender that is gender of student whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "employee who left on the same day or later as alice")
  (original "employee whose end date is at least end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "employee with largest end date")
  (original "employee that has the largest end date")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "either alice or bob")
  (original "alice or bob")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.person.alice en.person.bob))

  )
)
(example
  (utterance "which employee ended on the same date as alice")
  (original "employee whose end date is at least end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "persons presently logged in who were born in new york")
  (original "person that is logged in and whose birthplace is new york")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in)) (string birthplace) (string =) en.city.new_york))

  )
)
(example
  (utterance "what student started the job before alice quit")
  (original "student whose start date is smaller than end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what employees have a end date that is the same as the start date of employee alice")
  (original "employee whose end date is start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "student that has no less than one field of study")
  (original "student that has the least number of field of study")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string min) (string field_of_study))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "employee whose start date is after 2004")
  (original "employee whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find students with a start date the same as employee alices end date")
  (original "student whose start date is end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "employee whose end date is not 2004")
  (original "employee whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find the relationship statuses of employees who have an end date that is no more that 2004")
  (original "relationship status that is relationship status of employee whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find people who are male")
  (original "gender that is gender of person whose gender is male")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) en.gender.male)))

  )
)
(example
  (utterance "find employees starting before alices last day")
  (original "employee whose start date is smaller than end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "employee whose start date is not before start date of employee alice")
  (original "employee whose start date is at least start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what is the relationship status of students with an end date earlier than 2004")
  (original "relationship status that is relationship status of student whose end date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "people who are friends with employees that are not software engineers")
  (original "person that employee whose job title is not software engineer is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string !=) en.job_title.software_engineer)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what students have an end date that is greater than that of student alice")
  (original "student whose end date is larger than end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what is number of a person")
  (original "number of person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call .size (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "what is the identifying gender of the transgendered person")
  (original "gender that is gender of two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "friends of students who joined in years except 2004")
  (original "person that is friends with student whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "people born between 2004 and 2010")
  (original "person whose birthdate is smaller than 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1)))))

  )
)
(example
  (utterance "what online person is alice friends with")
  (original "person that alice is friends with and that is logged in")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice) (string logged_in)))

  )
)
(example
  (utterance "what is the birthplace of students who did not graduate in 2004")
  (original "city that is birthplace of student whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what student has a start date no later than 2004")
  (original "student whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what is the relationship status of people that finished school before 2004")
  (original "relationship status that is relationship status of student whose end date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "genders of students not finishing in 2004")
  (original "gender that is gender of student whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find students starting the same day as alice")
  (original "student whose start date is start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what is relationship status of students starting in 2003 or before")
  (original "relationship status that is relationship status of student whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "people born in new york or beijing")
  (original "person whose birthplace is new york or beijing")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.city.new_york en.city.bejing)))

  )
)
(example
  (utterance "what relationship status is listed by the least number of people")
  (original "relationship status that is relationship status of the least number of person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "where were the people online born")
  (original "city that is birthplace of person that is logged in")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in))))

  )
)
(example
  (utterance "people that stopped working the same day alice started school")
  (original "employee whose end date is start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "the gender of a student ending before 2004")
  (original "gender that is gender of student whose end date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find relationship statuses of students who have a start date no later than 2004")
  (original "relationship status that is relationship status of student whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "who is male and is friends with alice")
  (original "person whose gender is male and that alice is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) en.gender.male) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice))

  )
)
(example
  (utterance "employee whose start date is before start date of student alice")
  (original "employee whose start date is smaller than start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "is this person single or married")
  (original "single or married")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.relationship_status.single en.relationship_status.married))

  )
)
(example
  (utterance "employees with the same job title as alice")
  (original "employee whose job title is job title of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string job_title)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "which employee started at the same time as alice")
  (original "employee whose start date is at least start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what students have an end date that is no sooner than alcies birthday")
  (original "student whose end date is at most birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "who is friends with the student who graduates in 2004 or later")
  (original "person that is friends with student whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what is the birth city of all employees who have an end date less than 2004")
  (original "city that is birthplace of employee whose end date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "employee with at most two jobs")
  (original "employee that has at most two job title")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string job_title) (string <=) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "which student started school on the last day alice worked")
  (original "student whose start date is end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which employee has worked for the fewest employers")
  (original "employee that has the least number of employer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string min) (string employer))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find me friends of students graduating before 2004")
  (original "person that student whose end date is smaller than 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what students have an end date that is no greater than employee alices start date")
  (original "student whose end date is at most start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what male is single")
  (original "person whose relationship status is single and whose gender is male")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) en.relationship_status.single) (string gender) (string =) en.gender.male))

  )
)
(example
  (utterance "who is friends with an employee who does not work for mckinsey")
  (original "person that is friends with employee whose employer is not mckinsey")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employer) (string !=) en.company.mckinsey)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what employees have a start date that is no later than the birthdate of alice")
  (original "employee whose start date is at most birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find students with an end date the same as employee alices start date")
  (original "student whose end date is start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which person has a relationship status of single")
  (original "person whose relationship status is single")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) en.relationship_status.single))

  )
)
(example
  (utterance "which employees last day is no earlier than 2004")
  (original "employee whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what is the gender of people that started school before 2004")
  (original "gender that is gender of student whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "students whose end date is before the birthdate of alice")
  (original "student whose end date is smaller than birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what genders are the people that started school in or before 2004")
  (original "gender that is gender of student whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find people who are 180 cm tall and attend brown university")
  (original "person whose height is 180 cm and whose university is brown university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string university) (string =) en.university.brown))

  )
)
(example
  (utterance "start date of alices employment which ended in 2004")
  (original "start date of employee alice whose end date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date) (string =) (date 2004 -1 -1)) (string employment_start_date)))

  )
)
(example
  (utterance "locate the gender of employees whom are not employeed by mickinsey")
  (original "gender that is gender of employee whose employer is not mckinsey")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employer) (string !=) en.company.mckinsey)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "gender of alices friend")
  (original "gender that is gender of person that is friends with alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) en.person.alice)))

  )
)
(example
  (utterance "find student whose last day is after alices birthday")
  (original "student whose end date is larger than birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what is the birthdate of people who are 180 cm tall")
  (original "person whose birthdate is person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "what employee started the earliest")
  (original "employee that has the smallest start date")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find alices friends born in 2004")
  (original "person that is friends with alice and whose birthdate is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) en.person.alice) (string birthdate) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "find company employing those who are 180 cm tall")
  (original "company that is employer of person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.company) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employer)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "find all people who were born before alice started")
  (original "person whose birthdate is at least start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date)))))

  )
)
(example
  (utterance "people that are friends with a working person that isnt a software engineer")
  (original "person that is friends with employee whose job title is not software engineer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string !=) en.job_title.software_engineer)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "which student studied computer science or history")
  (original "student whose field of study is computer science or history")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.field.computer_science en.field.history))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "who is friends with the student who is not studying computer science")
  (original "person that student whose field of study is not computer science is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string !=) en.field.computer_science)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "gender of people whose height is 180cm")
  (original "person whose gender is person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "people who joined study after 2003")
  (original "student whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "persons who were born on or after start date of alices study")
  (original "person whose birthdate is at least start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date)))))

  )
)
(example
  (utterance "people that are taller than 200 cm")
  (original "person whose height is larger than 180 cm or 200 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string height)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (number 180 en.cm) (number 200 en.cm)))))

  )
)
(example
  (utterance "people born in new york and currently online")
  (original "person whose birthplace is new york and that is logged in")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) en.city.new_york) (string logged_in)))

  )
)
(example
  (utterance "show me all students that will leave in 2004 or oe 2010")
  (original "student whose end date is larger than 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find employees starting in 2004 and later")
  (original "employee whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "people that are friends with someone that stopped working after 2004")
  (original "person that is friends with employee whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "employees who start with or after alice")
  (original "employee whose start date is at least start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find employees who have an end date later than 2004 and their friends")
  (original "person that employee whose end date is larger than 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what is alice and bobs gender")
  (original "gender that is gender of alice or bob")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.person.alice en.person.bob)))

  )
)
(example
  (utterance "which people are friends with students who started no earlier than 2004")
  (original "person that is friends with student whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "employees who did not start in 2004")
  (original "employee whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what is the gender of an individual")
  (original "gender that is gender of less than two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string <) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "where do my friends who are 180 cm stud for university")
  (original "university that is university of person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.university) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string university)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "what are alice and bobs relationship statuses")
  (original "relationship status that is relationship status of alice or bob")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.person.alice en.person.bob)))

  )
)
(example
  (utterance "people that stopped school in 2004 or 2010")
  (original "student whose end date is 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "employees who dont finish in 2004")
  (original "employee whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what is the relationship status of the employee that did not start in 2004")
  (original "relationship status that is relationship status of employee whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what employee has the same or bigger end date of employee alice")
  (original "employee whose end date is larger than birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what is the phone number of a company")
  (original "number of company")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call .size (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.company) (string !type))))

  )
)
(example
  (utterance "find me an employee who has worked at two or less jobs")
  (original "employee that has less than two employer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string employer) (string <) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "people that started school in or after 2004")
  (original "student whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "person whose birthplace is same as person 180 cm tall")
  (original "person whose birthplace is person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "which student has the same relationship as the student who started after 2004")
  (original "relationship status that is relationship status of student whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what employees have a start date after the start date of employee alice")
  (original "employee whose start date is larger than start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what is alices gender")
  (original "gender of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string gender)))

  )
)
(example
  (utterance "what is birthplace of students who started after 2004")
  (original "city that is birthplace of student whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what people are friends with those who are friends with alice")
  (original "person that is friends with person that is friends with alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) en.person.alice)))

  )
)
(example
  (utterance "who was born in two places")
  (original "person that has two birthplace")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) (number 2)))

  )
)
(example
  (utterance "people who were born in the same place as alice")
  (original "person whose birthplace is birthplace of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthplace))))

  )
)
(example
  (utterance "when is the end date of alice")
  (original "student whose end date is end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what is the gender of a student who did not begin in 2004")
  (original "gender that is gender of student whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what university do those that are 180 cm tall go to")
  (original "university that is university of person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.university) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string university)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "find relationship status of students not studying computer science field")
  (original "relationship status that is relationship status of student whose field of study is not computer science")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string !=) en.field.computer_science)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "student whose end date is before start date of employee alice")
  (original "student whose end date is smaller than start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "who is friends with the person from new york")
  (original "person that person whose birthplace is new york is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) en.city.new_york)))

  )
)
(example
  (utterance "where were the working people that are not software engineers born")
  (original "city that is birthplace of employee whose job title is not software engineer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string !=) en.job_title.software_engineer)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what is the last date of alice who is a student of brown university")
  (original "end date of student alice whose university is brown university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string university) (string =) en.university.brown) (string education_end_date)))

  )
)
(example
  (utterance "working person with the least job titles")
  (original "employee that has the least number of job title")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string min) (string job_title))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "people who completed education before alice joined work")
  (original "student whose end date is smaller than start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find student who started first")
  (original "student that has the smallest start date")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find employees who have an employer different from that of alice")
  (original "employee whose employer is employer of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employer) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employer)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "people alice is friends with that were also born in 2004")
  (original "person that is friends with alice and whose birthdate is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) en.person.alice) (string birthdate) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "what gender has the fewest people")
  (original "gender that is gender of the least number of person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "what people have a height of 180 cm and the same relationship status as alice")
  (original "person whose height is 180 cm and that is relationship status of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) en.person.alice))

  )
)
(example
  (utterance "where were the people that started working in or before 2004 born")
  (original "city that is birthplace of employee whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "gender of all employees who did not quit in 2004")
  (original "gender that is gender of employee whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "who is a person whose field of study is not computer science friends with")
  (original "person that student whose field of study is not computer science is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string !=) en.field.computer_science)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "a student ending after alice starts")
  (original "student whose end date is larger than start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "is alices job title software engineer")
  (original "job title of employee alice whose job title is software engineer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string job_title) (string =) en.job_title.software_engineer) (string job_title)))

  )
)
(example
  (utterance "people who are single and currently online")
  (original "relationship status that is relationship status of person that is logged in")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in))))

  )
)
(example
  (utterance "gender of employee who left before 2005")
  (original "gender that is gender of employee whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find people who are 180 cm tall who are alices gender")
  (original "person whose height is 180 cm and that is gender of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) en.person.alice))

  )
)
(example
  (utterance "relationship status of two or less persons")
  (original "relationship status that is relationship status of at most two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string <=) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "student who left with or after alice")
  (original "student whose end date is at least end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "employee whose last day was also alices last day")
  (original "employee whose end date is end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "a friend of a student that starts in 2004 or before")
  (original "person that is friends with student whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what student started earliest")
  (original "student that has the largest start date")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "alices friends who are logged in")
  (original "person that is logged in and that alice is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice))

  )
)
(example
  (utterance "singles who are 180 cm tall")
  (original "person whose height is 180 cm and whose relationship status is single")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string relationship_status) (string =) en.relationship_status.single))

  )
)
(example
  (utterance "people that started working before 2004 or before 2010")
  (original "employee whose start date is smaller than 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "people born in new york that are currently online")
  (original "person that is logged in and whose birthplace is new york")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in)) (string birthplace) (string =) en.city.new_york))

  )
)
(example
  (utterance "which employees started before 2004 or 2010")
  (original "employee whose start date is smaller than 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "who has friends with a start date after 2004")
  (original "person that employee whose start date is larger than 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "the person who has the most genders")
  (original "person that has the most number of gender")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string max) (string gender)))

  )
)
(example
  (utterance "which employees last day was no later than 2004 or 2010")
  (original "employee whose end date is smaller than 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "employees starting before alices birthday")
  (original "employee whose start date is smaller than birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "person who first quit hisher job")
  (original "employee that has the smallest end date")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what student started after alices end date")
  (original "student whose start date is larger than end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "who is not friends with alice")
  (original "person that alice not is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string !=) en.person.alice))

  )
)
(example
  (utterance "employee who left before 2004 or in 2010")
  (original "employee whose end date is at most 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what employee quit their job the same day or after alice")
  (original "employee whose end date is at least end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find the gender of employees who have an end date that is 2004 or later")
  (original "gender that is gender of employee whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "employee with same start date as that of employee alice")
  (original "employee whose start date is start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find the height of a person")
  (original "total height of person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.aggregate (string sum) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height))))

  )
)
(example
  (utterance "who has lowest number of friends")
  (original "person that is friends with the least number of person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string min) (string friend) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "find me all employees whore start date is either 2004 or 2010")
  (original "employee whose start date is at most 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what person is friends with a student that has an end date of 2004 or later")
  (original "person that is friends with student whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "people who are at least 180 cm tall")
  (original "person whose height is at least 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string height)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 180 en.cm))))

  )
)
(example
  (utterance "birth city of employee whose job title is not software engineer")
  (original "city that is birthplace of employee whose job title is not software engineer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string !=) en.job_title.software_engineer)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "people who have the same birthday as alice")
  (original "person whose birthdate is birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))

  )
)
(example
  (utterance "what people are logged in and whom are they friends with")
  (original "person that person that is logged in is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in))))

  )
)
(example
  (utterance "employee whose start date is birth date of alice")
  (original "employee whose start date is birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what university did alice graduate from in 2004")
  (original "university of student alice whose end date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date) (string =) (date 2004 -1 -1)) (string university)))

  )
)
(example
  (utterance "whose relationship status is unique")
  (original "relationship status that is relationship status of the least number of person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "who is friends with the person who started working in 2004")
  (original "person that employee whose start date is at least 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "people with three or more friends")
  (original "person that is friends with more than two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string >) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "this student who finishes school at al most the same time as alice")
  (original "student whose end date is at most end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "friends of people who started their studies in an year other than 2004")
  (original "person that student whose start date is not 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what are genders of students not studying computer science field")
  (original "gender that is gender of student whose field of study is not computer science")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string !=) en.field.computer_science)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what is the gender of students who did not graduate in 2004")
  (original "gender that is gender of student whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "who finished school the earliest")
  (original "student that has the smallest end date")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which employee ended no greater than alices start date")
  (original "employee whose end date is larger than start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find people with a start date of 2004 and height of 180 cm")
  (original "person whose height is 180 cm and whose start date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string education_start_date) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "find me all employees who will have starte by alices birthday")
  (original "employee whose start date is at most birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what is the 180 cm tall persons job title")
  (original "job title that is job title of person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.job_title) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string job_title)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "people who quit their job before alice joined")
  (original "employee whose end date is start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "which emloyees had their last no earlier than 2004 or 2010")
  (original "employee whose end date is at least 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "which students starte before 2004 or 2010")
  (original "student whose start date is smaller than 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "name the friend of an employee who did not quit in 2004")
  (original "person that employee whose end date is not 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what people are friends with alice and have a height of 180 cm")
  (original "person that is friends with alice and whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) en.person.alice) (string height) (string =) (number 180 en.cm)))

  )
)
(example
  (utterance "who measures 180 cm and quit in 2004")
  (original "person whose height is 180 cm and whose end date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string education_end_date) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "find people 180 cm tall")
  (original "person whose height is 180 cm and whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string height) (string =) (number 180 en.cm)))

  )
)
(example
  (utterance "find me all employees who started in 2004 or 2010")
  (original "employee whose start date is 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "who is friends with the student who began school no later than 2004")
  (original "person that student whose start date is at least 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "gender of students joining before 2004")
  (original "gender that is gender of student whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "this employee has an ending date that is almost the same as alices")
  (original "employee whose end date is at least end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "the gender of a student that isnt in computer science")
  (original "gender that is gender of student whose field of study is not computer science")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string !=) en.field.computer_science)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what is relationship status of employees starting after 2004")
  (original "relationship status that is relationship status of employee whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find students with last day in 2004 or 2010")
  (original "student whose end date is 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find friends that have friends that are 180 cm tall")
  (original "person that is friends with person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "students who finish after 2004")
  (original "student whose end date is larger than 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "one employee who left in 2004 or before")
  (original "employee whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what is the relationship status of employees who strated before 2004")
  (original "relationship status that is relationship status of employee whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "which student started on or before alices birthdate")
  (original "student whose start date is at most birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find me all students with a single major")
  (original "student that has less than two field of study")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string field_of_study) (string <) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find people born in new york that are friends with alice")
  (original "person whose birthplace is new york and that is friends with alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) en.city.new_york) (string friend) (string =) en.person.alice))

  )
)
(example
  (utterance "find me all people who has a friend born in new york")
  (original "person that is friends with person whose birthplace is new york")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) en.city.new_york)))

  )
)
(example
  (utterance "name a person who is friends with alice")
  (original "person that alice is friends with and that is friends with alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice) (string friend) (string =) en.person.alice))

  )
)
(example
  (utterance "employee whose end date is not before end date of employee alice")
  (original "employee whose end date is at least end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "who was born on or before alices final day of employment")
  (original "person whose birthdate is at most end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date)))))

  )
)
(example
  (utterance "people who stated working in 2004 or after")
  (original "employee whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what is the gender of employees whose start date is earlier than 2004")
  (original "gender that is gender of employee whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "employees who finish on alices birthday")
  (original "employee whose end date is birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what is the gender of a person who started before 2004")
  (original "gender that is gender of student whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "whats the relationship status of the student leaving prior to 2004")
  (original "relationship status that is relationship status of student whose end date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "name someone who is 180 cm tall")
  (original "person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)))

  )
)
(example
  (utterance "what student has a start date later than the end date of alice")
  (original "student whose start date is larger than end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "people that started work after alice stopped school")
  (original "employee whose start date is larger than end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "students that didnt finish in 2004")
  (original "student whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "people who are 180 cm tall and are software engineers")
  (original "person whose height is 180 cm and whose job title is software engineer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string job_title) (string =) en.job_title.software_engineer))

  )
)
(example
  (utterance "students who graduated before alices birthday")
  (original "student whose end date is at most birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "employees who did not stop working before alice was born")
  (original "employee whose end date is at least birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "who is friends with an employee whos end date is 2004")
  (original "person that employee whose end date is at least 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what student has an end date that is before the end date of alice")
  (original "student whose end date is smaller than end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find friends of students who started in 2004 and after")
  (original "person that student whose start date is at least 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what is the citys number")
  (original "number of city")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call .size (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type))))

  )
)
(example
  (utterance "which people are friends with employees who started working after 2004")
  (original "person that employee whose start date is larger than 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "who has most friends")
  (original "person that is friends with the most number of person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string max) (string friend) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "which employees last day is the same as alices birth date")
  (original "employee whose end date is birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find the person with the most friends")
  (original "person that the most number of person is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "which employee ended their job on the same day as alices brithday")
  (original "employee whose end date is birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "show me the students starting at the same time or after alice")
  (original "student whose start date is at most start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "name a person 180 cm tall who started working in 2004")
  (original "person whose height is 180 cm and whose start date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string education_start_date) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "find friends of people who graduated school but not in 2004")
  (original "person that student whose end date is not 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what person is friends with an employee who has a start date no later than 2004")
  (original "person that is friends with employee whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "who has maximum 2 friends")
  (original "person that at most two person is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string <=) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "find people with a gender of male and their friends")
  (original "person that person whose gender is male is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) en.gender.male)))

  )
)
(example
  (utterance "find people who do not have more than two friends")
  (original "person that is friends with at most two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string <=) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "relationship status of students finishing after 2004")
  (original "relationship status that is relationship status of student whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "employee whose start date is not after start date of student alice")
  (original "employee whose start date is at most start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "people who quit their job before 2004")
  (original "employee whose end date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what employee has a start date earlier than the start date of alice")
  (original "employee whose start date is smaller than start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what status is the relationship status of less than two people")
  (original "relationship status that is relationship status of less than two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string <) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "what students began school either after 2004 or 2010")
  (original "student whose start date is larger than 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "when did alice start studying computer science")
  (original "start date of student alice whose field of study is computer science")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string field_of_study) (string =) en.field.computer_science) (string education_start_date)))

  )
)
(example
  (utterance "students who began school the same day alice quit her job")
  (original "student whose start date is end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which employee has an end date earlier than alice")
  (original "employee whose end date is smaller than end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find the gender of no more than two people")
  (original "gender that is gender of at most two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string <=) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "friends of people who joined their jobs in years other than 2004")
  (original "person that employee whose start date is not 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "alices friends who were born in new york")
  (original "person that alice is friends with and whose birthplace is new york")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice) (string birthplace) (string =) en.city.new_york))

  )
)
(example
  (utterance "people that started work before alice started school")
  (original "employee whose start date is smaller than start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find alices friends")
  (original "person that is friends with alice and that alice is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) en.person.alice) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice))

  )
)
(example
  (utterance "what is the persons number")
  (original "number of person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call .size (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "whos 180 cm tall and in the same sort of relationship situaiton as alice")
  (original "person whose height is 180 cm and that is relationship status of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) en.person.alice))

  )
)
(example
  (utterance "which employee started after the employee alice")
  (original "employee whose start date is larger than start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find someone of any gender")
  (original "person whose gender is male or female")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.gender.male en.gender.female)))

  )
)
(example
  (utterance "who is friends with students starting before on in 2004")
  (original "person that is friends with student whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "which student has the fewest fields of study")
  (original "student that has the least number of field of study")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string min) (string field_of_study))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "one student who started in or after 2004")
  (original "student whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find the person that is 180 cm tall and was born in new york")
  (original "person whose height is 180 cm and whose birthplace is new york")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string birthplace) (string =) en.city.new_york))

  )
)
(example
  (utterance "who has the same relationship status as alice and is 180 cm tall")
  (original "person whose height is 180 cm and that is relationship status of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) en.person.alice))

  )
)
(example
  (utterance "people who are friends with the employees leaving the company after 2004")
  (original "person that is friends with employee whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find the employee whose last day was on alices birthdate")
  (original "employee whose end date is birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "friends of students starting on or after 2004")
  (original "person that is friends with student whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what is thre relationship status of students who graduated after 2004")
  (original "relationship status that is relationship status of student whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "people who started after alice quit her job")
  (original "employee whose start date is at least end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what is the relationship status of a student with an end date of 2004 or later")
  (original "relationship status that is relationship status of student whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "name the friend of a student who began prior to 2004")
  (original "person that student whose start date is smaller than 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what person is 180 cm tall")
  (original "person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)))

  )
)
(example
  (utterance "find the birth city of employees whose start date is less than 2004")
  (original "city that is birthplace of employee whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what sex are the students who did not start in 2004")
  (original "gender that is gender of student whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "180 cm tall people joined in 2004")
  (original "person whose height is 180 cm and whose start date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string education_start_date) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "find students starting on alices last day")
  (original "student whose start date is end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what is the job title of people who are 180 cm tall")
  (original "job title that is job title of person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.job_title) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string job_title)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "people born after alices first day of school")
  (original "person whose birthdate is at most start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date)))))

  )
)
(example
  (utterance "is alice male or female")
  (original "gender of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string gender)))

  )
)
(example
  (utterance "find all people with friends that finished school in 2004")
  (original "person that student whose end date is at least 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "people with relationship status as alice")
  (original "person whose relationship status is relationship status of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string relationship_status))))

  )
)
(example
  (utterance "when did alice stop working as a software engineer")
  (original "end date of employee alice whose job title is software engineer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string job_title) (string =) en.job_title.software_engineer) (string employment_end_date)))

  )
)
(example
  (utterance "180 cm tall persons who share birthdate with alice")
  (original "person whose height is 180 cm and that is birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthdate)) (string =) en.person.alice))

  )
)
(example
  (utterance "who has friends that are online")
  (original "person that person that is logged in is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in))))

  )
)
(example
  (utterance "what person has only two friends")
  (original "person that two person is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "what city was the student that started after 2004 born in")
  (original "city that is birthplace of student whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "place of birth for the fewest people")
  (original "city that is birthplace of the least number of person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "find me people who have the same relationship status of people who are 180 cm tall")
  (original "person whose relationship status is person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "what is the gender of most")
  (original "gender that is gender of the most number of person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "find the relationship statuses of employees who do not have the job title of software engineer")
  (original "relationship status that is relationship status of employee whose job title is not software engineer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string !=) en.job_title.software_engineer)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "where were the graduates of 2004 born")
  (original "city that is birthplace of student whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what gender is more than two people")
  (original "gender that is gender of more than two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string >) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "an employee starting before 2004 or 2010")
  (original "employee whose start date is smaller than 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "which employer has the least number of employees")
  (original "employee that has the least number of employer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string min) (string employer))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "which students started school after 2004 or 2010")
  (original "student whose start date is at least 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "who is the person whose birthplace is new york and whose height is 180 cm")
  (original "person whose height is 180 cm and whose birthplace is new york")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string birthplace) (string =) en.city.new_york))

  )
)
(example
  (utterance "find me all people are are taller than 180 cm")
  (original "person whose height is larger than 180 cm or 200 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string height)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (number 180 en.cm) (number 200 en.cm)))))

  )
)
(example
  (utterance "birth city of employee whose end date is not 2004")
  (original "city that is birthplace of employee whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what is the gender of a student whose end date is not 2004")
  (original "gender that is gender of student whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "who is the oldest person")
  (original "person that has the largest birthdate")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate))))

  )
)
(example
  (utterance "people from new york that are friends with alice")
  (original "person whose birthplace is new york and that alice is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) en.city.new_york) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice))

  )
)
(example
  (utterance "what students have an end date that is lower than the start date of alice")
  (original "student whose end date is smaller than start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find students who started no later than 2004 or 2010")
  (original "student whose start date is at most 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what city was the male born")
  (original "city that is birthplace of person whose gender is male")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) en.gender.male)))

  )
)
(example
  (utterance "find friends of people who quit their jobs in 2004")
  (original "person that employee whose end date is at least 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what city were at least two people born in")
  (original "city that is birthplace of at least two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string >=) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "who is alice friends with thats 180 cm tall")
  (original "person whose height is 180 cm and that is friends with alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string friend) (string =) en.person.alice))

  )
)
(example
  (utterance "people who are friends with employees who started work before 2004")
  (original "person that is friends with employee whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "who is born in 2004 at new york")
  (original "person whose birthdate is 2004 and whose birthplace is new york")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1)) (string birthplace) (string =) en.city.new_york))

  )
)
(example
  (utterance "person who is friends with an employee who retired at least 2004")
  (original "person that employee whose end date is at least 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find me all people whose height is 180 cm and born in 2004")
  (original "person whose height is 180 cm and whose start date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string education_start_date) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "find me the student whose start date is on alices birthday")
  (original "student whose start date is at least birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find people with a height of 180 cm")
  (original "person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)))

  )
)
(example
  (utterance "which employee has the fewest jobs")
  (original "employee that has the least number of employer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string min) (string employer))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find the relationship statuses of students whom do not study computer science")
  (original "relationship status that is relationship status of student whose field of study is not computer science")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string !=) en.field.computer_science)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "people that stopped working the same day as alice")
  (original "employee whose end date is end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "which student stopped before student alice started")
  (original "student whose end date is smaller than start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "student who started on birthdate of alice")
  (original "student whose start date is birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what is the gender of employees with an end date greater than 2004")
  (original "gender that is gender of employee whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what people are friens with students that have a start date not equal to 2004")
  (original "person that is friends with student whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "people who are th gender of alices friends")
  (original "gender that is gender of person that alice is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice)))

  )
)
(example
  (utterance "people that started working when alice stopped working")
  (original "employee whose start date is end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what is the relationship status of employees who are not employed by mckinsey")
  (original "relationship status that is relationship status of employee whose employer is not mckinsey")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employer) (string !=) en.company.mckinsey)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "which employee has no more than two employers")
  (original "employee that has at most two employer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string employer) (string <=) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "people who are single and born in new york")
  (original "person whose relationship status is single and whose birthplace is new york")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) en.relationship_status.single) (string birthplace) (string =) en.city.new_york))

  )
)
(example
  (utterance "find a person born before alice started working")
  (original "person whose birthdate is smaller than start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date)))))

  )
)
(example
  (utterance "who is in the same type of relationship as alice and is 180 cm tall")
  (original "person whose height is 180 cm and that is relationship status of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) en.person.alice))

  )
)
(example
  (utterance "find people born before the employment end date of alice")
  (original "person whose birthdate is smaller than end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date)))))

  )
)
(example
  (utterance "find cities that are the birthplaces of employees with an end date no later than 2004")
  (original "city that is birthplace of employee whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "a student who left before student alice did")
  (original "student whose end date is smaller than end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "whats the relationship status of the student leaving his job by 2004")
  (original "relationship status that is relationship status of student whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what is the status of the two peoples relationship")
  (original "relationship status that is relationship status of two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "who has maximum two friends")
  (original "person that is friends with at most two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string <=) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "who studied at only one university")
  (original "student that has less than two university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string university) (string <) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find people with less than two genders")
  (original "person that has less than two gender")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string <) (number 2)))

  )
)
(example
  (utterance "find someone shorter than 200 cm")
  (original "person whose height is smaller than 180 cm or 200 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string height)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (number 180 en.cm) (number 200 en.cm)))))

  )
)
(example
  (utterance "find students with end date in 2004 or 2010")
  (original "student whose end date is at most 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which relationship status do less than two people have")
  (original "relationship status that is relationship status of less than two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string <) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "where were two people both born")
  (original "city that is birthplace of two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "what was alices last day of her job from 2004")
  (original "end date of employee alice whose start date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date) (string =) (date 2004 -1 -1)) (string employment_end_date)))

  )
)
(example
  (utterance "name the friend of an employee who quit after 2004")
  (original "person that employee whose end date is at least 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "when did alice finish studying computer science")
  (original "end date of student alice whose field of study is computer science")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string field_of_study) (string =) en.field.computer_science) (string education_end_date)))

  )
)
(example
  (utterance "what male is friends with alice")
  (original "person that is friends with alice and whose gender is male")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) en.person.alice) (string gender) (string =) en.gender.male))

  )
)
(example
  (utterance "which people are mutual friends of alice")
  (original "person that is friends with alice and that alice is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) en.person.alice) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice))

  )
)
(example
  (utterance "people who are friends with the employee thats leaving before 2004")
  (original "person that is friends with employee whose end date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find students with last day on or after alices first day")
  (original "student whose end date is at least start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what date did alice leave her job in 2004")
  (original "end date of employee alice whose end date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date) (string =) (date 2004 -1 -1)) (string employment_end_date)))

  )
)
(example
  (utterance "which employees last day is no later than alices birthdate")
  (original "employee whose end date is at most birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "students who began school after 2004")
  (original "student whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "person who is friend of a student who starts at most by 2004")
  (original "person that is friends with student whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find employees starting other than in 2004")
  (original "employee whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find people born after the employment of alice")
  (original "person whose birthdate is at least start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date)))))

  )
)
(example
  (utterance "person born on or after end of alices employment")
  (original "person whose birthdate is at least end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date)))))

  )
)
(example
  (utterance "which employees has the least recent start date")
  (original "employee that has the smallest start date")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "which person has the fewest number of friends")
  (original "person that is friends with the least number of person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string min) (string friend) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "find people with friends that finished school in 2004 at the latest")
  (original "person that student whose end date is at most 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find all people born in 2004 that are friends with alice")
  (original "person whose birthdate is 2004 and that is friends with alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1)) (string friend) (string =) en.person.alice))

  )
)
(example
  (utterance "people who were born the same day as or after alice")
  (original "person whose birthdate is at least birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate)))))

  )
)
(example
  (utterance "birthplace of two or less persons")
  (original "city that is birthplace of at most two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string <=) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "what person who ended in 2004 is 180 cm tall")
  (original "person whose height is 180 cm and whose end date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string education_end_date) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "what students have an end date later than 2004")
  (original "student whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "who is the student whose start date was at least 2004 friends with")
  (original "person that student whose start date is at most 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "people that started working after alice stopped working")
  (original "employee whose start date is larger than end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "which person is friends with someone who goes to somewhere besides brown university")
  (original "person that is friends with student whose university is not brown university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string university) (string !=) en.university.brown)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find students whose last day was before 2010")
  (original "student whose end date is smaller than 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find me friends of single people")
  (original "person that person whose relationship status is single is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) en.relationship_status.single)))

  )
)
(example
  (utterance "person who is friends with someone whose end date is after 2004")
  (original "person that student whose end date is larger than 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "a friend of an employee that ends after 2004")
  (original "person that is friends with employee whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "employees finishing contemporaneous to or before alice")
  (original "employee whose end date is at most end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what person is 180 cm tall and is currently online")
  (original "person whose height is 180 cm and that is logged in")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string logged_in)))

  )
)
(example
  (utterance "which employee started no earlier than alices end date")
  (original "employee whose start date is smaller than end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find alices friends that were born in 2004")
  (original "person whose birthdate is 2004 and that alice is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice))

  )
)
(example
  (utterance "find people with only one or two friends")
  (original "person that at most two person is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string <=) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "how many people are there")
  (original "number of person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call .size (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "which employee quit their job after 2004")
  (original "employee whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "180 cm tall friends of alice")
  (original "person whose height is 180 cm and that is friends with alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string friend) (string =) en.person.alice))

  )
)
(example
  (utterance "employee whose end date is not after start date of employee alice")
  (original "employee whose end date is larger than start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "employee whose end date is before 2004 or 2010")
  (original "employee whose end date is smaller than 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "who are alices friends from her hometown")
  (original "city that is birthplace of person that alice is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice)))

  )
)
(example
  (utterance "a friend of alice or bob")
  (original "person that alice or bob is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.person.alice en.person.bob)))

  )
)
(example
  (utterance "a person whose employee friend didnt leave in 2004")
  (original "person that is friends with employee whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "an employee that started before 2004")
  (original "employee whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "who is alices boss at her software engineer job")
  (original "employer of employee alice whose job title is software engineer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string job_title) (string =) en.job_title.software_engineer) (string employer)))

  )
)
(example
  (utterance "find an employee who left after 2010")
  (original "employee whose end date is larger than 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find the gender of students who have a start date after 2004")
  (original "gender that is gender of student whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find the genders of employees who have an end date no later than 2004")
  (original "gender that is gender of employee whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "which employee has the same relationship status as the employee who started earlier than 2004")
  (original "relationship status that is relationship status of employee whose end date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find the genders of students with end dates later than 2004")
  (original "gender that is gender of student whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "relationship status of people that are friends with alice")
  (original "relationship status that is relationship status of person that alice is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice)))

  )
)
(example
  (utterance "name the relationships status of an employee who started no later than 2004")
  (original "relationship status that is relationship status of employee whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "students who ended school after the day alice ended school")
  (original "student whose end date is larger than end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "who was born before alice left")
  (original "person whose birthdate is at most end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date)))))

  )
)
(example
  (utterance "find people who are between 180 cm and 200 cm tall")
  (original "180 cm or 200 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (number 180 en.cm) (number 200 en.cm)))

  )
)
(example
  (utterance "180 cm tall person who is logged in")
  (original "person that is logged in and whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in)) (string height) (string =) (number 180 en.cm)))

  )
)
(example
  (utterance "either 180cm or 200cm")
  (original "180 cm or 200 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (number 180 en.cm) (number 200 en.cm)))

  )
)
(example
  (utterance "what is the relationship status of a male")
  (original "relationship status that is relationship status of person whose gender is male")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) en.gender.male)))

  )
)
(example
  (utterance "which student started earlier than 2004")
  (original "student whose start date is smaller than 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "students finishing before 2004")
  (original "student whose end date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "how many relationship statuses are there")
  (original "number of relationship status")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call .size (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type))))

  )
)
(example
  (utterance "what person was born in new york and single")
  (original "person whose birthplace is new york and whose relationship status is single")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) en.city.new_york) (string relationship_status) (string =) en.relationship_status.single))

  )
)
(example
  (utterance "people born in 2004 who are 180 cm")
  (original "person whose height is 180 cm and whose birthdate is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string birthdate) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "a friend of alice who is 180 cm tall")
  (original "person that alice is friends with and whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice) (string height) (string =) (number 180 en.cm)))

  )
)
(example
  (utterance "what employees have an end date that is later than the start date of student alice")
  (original "employee whose end date is larger than start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "who has two friends")
  (original "person that is friends with two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "birthplaces of employees who started after 2004")
  (original "city that is birthplace of employee whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "gender of students who started in or after 2004")
  (original "gender that is gender of student whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find employees starting the same day as student alice")
  (original "employee whose start date is start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "who is friends with someone born in new york")
  (original "person that person whose birthplace is new york is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) en.city.new_york)))

  )
)
(example
  (utterance "find students with a start date that is the same or greater than student alice")
  (original "student whose start date is at least end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find birthplaces of students whose last day was 2004 or before")
  (original "city that is birthplace of student whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find people born in 2004 who are 180 cm tall")
  (original "person whose birthdate is 2004 and whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1)) (string height) (string =) (number 180 en.cm)))

  )
)
(example
  (utterance "people that are friends with someone that started school before 2004")
  (original "person that is friends with student whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "a student starting after alice was born")
  (original "student whose start date is larger than birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "relationship status that is the same as a person born in 2004")
  (original "relationship status that is relationship status of person whose birthdate is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1))))

  )
)
(example
  (utterance "birth city of person whose height is 180 cm")
  (original "city that is birthplace of person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "find friends of people who started work in 2004 at the earliest")
  (original "person that employee whose start date is at least 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "employee whose start date is not after end date of student alice")
  (original "employee whose start date is at most end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "who has the most friends")
  (original "person that the most number of person is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "find the birthplace of employees whose last day is not in 2004")
  (original "city that is birthplace of employee whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what single person is friends with alice")
  (original "person that is friends with alice and whose relationship status is single")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) en.person.alice) (string relationship_status) (string =) en.relationship_status.single))

  )
)
(example
  (utterance "people who completed their study before alice was born")
  (original "student whose end date is smaller than birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find people who were born after alice quit her job")
  (original "person whose birthdate is larger than end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date)))))

  )
)
(example
  (utterance "which student goes to the same university as student alice")
  (original "student whose university is university of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string university) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string university)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find people with no birthplaces")
  (original "person that has the least number of birthplace")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string min) (string birthplace)))

  )
)
(example
  (utterance "what day in 2004 did alice start working")
  (original "start date of employee alice whose start date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date) (string =) (date 2004 -1 -1)) (string employment_start_date)))

  )
)
(example
  (utterance "what is the relationship status of a person born in 2004")
  (original "relationship status that is relationship status of person whose birthdate is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1))))

  )
)
(example
  (utterance "friends of people who quit their jobs after 2003")
  (original "person that employee whose end date is at least 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "name the employees who quit the job when alice was born ")
  (original "employee whose end date is at least start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "whats the relationship status of students who joined after 2004")
  (original "relationship status that is relationship status of student whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what employee has an end date later than the start date of alice")
  (original "employee whose end date is larger than start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what is a person who has two genders called")
  (original "person that has two gender")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) (number 2)))

  )
)
(example
  (utterance "student whose end date is same as that of employee alice")
  (original "student whose end date is end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find employees who quit the job after 2004 ")
  (original "employee whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "employee whose start date is before the end date of employee alice")
  (original "employee whose start date is smaller than end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find people with employment end date as 2004")
  (original "end date of employee alice whose end date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date) (string =) (date 2004 -1 -1)) (string employment_end_date)))

  )
)
(example
  (utterance "people who are born in new york and are 180cm tall")
  (original "person whose birthplace is new york and whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) en.city.new_york) (string height) (string =) (number 180 en.cm)))

  )
)
(example
  (utterance "friend of student whose start date is after 2004")
  (original "person that is friends with student whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find students who have an end date that is greater than alices birthday")
  (original "student whose end date is larger than birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "students who started after alices end date")
  (original "student whose start date is larger than end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "did alice study computer science")
  (original "field of study of student alice whose field of study is computer science")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string field_of_study) (string =) en.field.computer_science) (string field_of_study)))

  )
)
(example
  (utterance "people that stopped school before alice started working")
  (original "student whose end date is smaller than start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which people have less than two relationship statuses")
  (original "person that has less than two relationship status")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string <) (number 2)))

  )
)
(example
  (utterance "what persons birthday is in 2004")
  (original "person whose birthdate is 2004 and whose birthdate is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1)) (string birthdate) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "gender of alices friends")
  (original "gender that is gender of person that alice is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice)))

  )
)
(example
  (utterance "person that is a friend of student who will graduate by 2004")
  (original "person that is friends with student whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "students who start with alice")
  (original "student whose start date is start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "friends of people who quit their jobs before 2005")
  (original "person that employee whose end date is at most 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find the people who are friends with males")
  (original "person that person whose gender is male is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) en.gender.male)))

  )
)
(example
  (utterance "find students whose start date is less than that of student alice")
  (original "student whose start date is smaller than start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what students have a start date that is either 2004 or 2010")
  (original "student whose start date is at least 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what person is friends with an employee who had an end date no later than 2004")
  (original "person that is friends with employee whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "students who started at or after the end date of alice")
  (original "student whose start date is at least end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what is the end date of alices job as software engineer")
  (original "end date of employee alice whose job title is software engineer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string job_title) (string =) en.job_title.software_engineer) (string employment_end_date)))

  )
)
(example
  (utterance "what is the relationship status of fewer than two of the people")
  (original "relationship status that is relationship status of less than two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string <) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "which person is friends with the employee whos end date isnt 2004")
  (original "person that is friends with employee whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "birthplace of employees who are not employed by mckinsey")
  (original "city that is birthplace of employee whose employer is not mckinsey")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employer) (string !=) en.company.mckinsey)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "name a persons friend who was born in 2004")
  (original "person that person whose birthdate is 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1))))

  )
)
(example
  (utterance "people that are friends with someone that finished school in any year but 2004")
  (original "person that is friends with student whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "who is friends with bob or alice")
  (original "person that alice or bob is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.person.alice en.person.bob)))

  )
)
(example
  (utterance "what is the students birthplace city who started at the most in 2004")
  (original "city that is birthplace of student whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "person that went to the most universities")
  (original "student that has the most number of university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string max) (string university))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "employee who is a software engineer or program manager")
  (original "employee whose job title is software engineer or program manager")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.job_title.software_engineer en.job_title.program_manager))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "a 180 cm tall person born in same place as alice")
  (original "person whose height is 180 cm and that is birthplace of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) en.person.alice))

  )
)
(example
  (utterance "person who joined study on the day alice was born")
  (original "student whose start date is birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "someone who has studied at less than two universities")
  (original "student that has less than two university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string university) (string <) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "people that stopped working before alice started school")
  (original "employee whose end date is smaller than start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find students with the most fields of study")
  (original "student that has the most number of field of study")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string max) (string field_of_study))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what persons height is shorter than 180 to 200 cm")
  (original "person whose height is smaller than 180 cm or 200 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string height)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (number 180 en.cm) (number 200 en.cm)))))

  )
)
(example
  (utterance "what are genders of students starting after 2004")
  (original "gender that is gender of student whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "who has the most relationship statuses")
  (original "person that has the most number of relationship status")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string max) (string relationship_status)))

  )
)
(example
  (utterance "find single people who are friends with alice")
  (original "person whose relationship status is single and that is friends with alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) en.relationship_status.single) (string friend) (string =) en.person.alice))

  )
)
(example
  (utterance "people that stopped working after alice started school")
  (original "employee whose end date is larger than start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "which student started the day alice left her job")
  (original "student whose start date is at least end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find the tallest person")
  (original "person that has the largest height")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string height))))

  )
)
(example
  (utterance "birth place of two persons")
  (original "city that is birthplace of two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "is alices job title software engineer")
  (original "job title of employee alice whose job title is software engineer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string job_title) (string =) en.job_title.software_engineer) (string job_title)))

  )
)
(example
  (utterance "what is the birth city of no more than two people")
  (original "city that is birthplace of at most two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string <=) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "what is the relationship status of a student whose end date is no later than 2004")
  (original "relationship status that is relationship status of student whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "males who are online")
  (original "person that is logged in and whose gender is male")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in)) (string gender) (string =) en.gender.male))

  )
)
(example
  (utterance "who was born in 2004 and is 180 cm tall")
  (original "person whose birthdate is 2004 and whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1)) (string height) (string =) (number 180 en.cm)))

  )
)
(example
  (utterance "people that started school when alice started working or before")
  (original "student whose start date is at most start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which employee quit after alices birthday")
  (original "employee whose end date is larger than birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "which guys are also 180 cm tall")
  (original "person whose gender is male and whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) en.gender.male) (string height) (string =) (number 180 en.cm)))

  )
)
(example
  (utterance "find employee with latest last day")
  (original "employee that has the largest end date")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find the birthplaces of people who are 180 cm tall")
  (original "city that is birthplace of person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "find me all males that are currently online")
  (original "person that is logged in and whose gender is male")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in)) (string gender) (string =) en.gender.male))

  )
)
(example
  (utterance "find employees who have a start date of 2004 or later and their friends")
  (original "person that employee whose start date is at least 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "which person has two friends")
  (original "person that is friends with two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "people that stopped school after alice did")
  (original "student whose end date is larger than end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "who has two or more genders")
  (original "person that has at least two gender")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string >=) (number 2)))

  )
)
(example
  (utterance "person whose name is alive or bob")
  (original "alice or bob")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.person.alice en.person.bob))

  )
)
(example
  (utterance "where were the people that started school after 2004 born")
  (original "city that is birthplace of student whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "friend of employee whose start date is at most 2004")
  (original "person that is friends with employee whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "who started school before alice")
  (original "student whose start date is smaller than start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which employee started their job on alices birthday")
  (original "employee whose start date is at least birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "student with same field of study as that of student alice")
  (original "student whose field of study is field of study of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string field_of_study)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "people born on the same day as alice")
  (original "person whose birthdate is birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))

  )
)
(example
  (utterance "which students quit outside of 2004")
  (original "student whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find people with a height of 180 cm and the same birthplace as alice")
  (original "person whose height is 180 cm and that is birthplace of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) en.person.alice))

  )
)
(example
  (utterance "birth city of student whose end date is not after 2004")
  (original "city that is birthplace of student whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "people who are male and born in new york")
  (original "person whose gender is male and whose birthplace is new york")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) en.gender.male) (string birthplace) (string =) en.city.new_york))

  )
)
(example
  (utterance "friend of student whose start date is before 2004")
  (original "person that is friends with student whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "students who started before alices start date")
  (original "student whose start date is smaller than start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what relationship statuses are claimed by alices friends")
  (original "relationship status that is relationship status of person that is friends with alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) en.person.alice)))

  )
)
(example
  (utterance "who is friends with a person that is friends with alice")
  (original "person that is friends with person that alice is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice)))

  )
)
(example
  (utterance "person with more then two people")
  (original "person that is friends with at least two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string >=) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "friend of someone born in 2004")
  (original "person that is friends with person whose birthdate is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1))))

  )
)
(example
  (utterance "students who have the same end date as the start date of student alice")
  (original "student whose end date is start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what did alice study")
  (original "field of study of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string field_of_study)))

  )
)
(example
  (utterance "whats the birthplace of alice")
  (original "person whose birthplace is birthplace of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthplace))))

  )
)
(example
  (utterance "what is the birthplace of student who joined before 2004")
  (original "city that is birthplace of student whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find someone born in the same city as alice")
  (original "person whose birthplace is city that is birthplace of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) en.person.alice)))

  )
)
(example
  (utterance "what gender are the two people")
  (original "gender that is gender of two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "friend of emmployee whose end date is after 2004")
  (original "person that is friends with employee whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "employee ending before or when alice was born")
  (original "employee whose end date is at most birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "people born after alice")
  (original "person whose birthdate is larger than birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate)))))

  )
)
(example
  (utterance "who are some of my noncomputer science major connections friends with")
  (original "person that student whose field of study is not computer science is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string !=) en.field.computer_science)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "which students started school before alice started school")
  (original "student whose start date is smaller than start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what genders are the people that finished school after 2004")
  (original "gender that is gender of student whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "who is friends with the male")
  (original "person that person whose gender is male is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) en.gender.male)))

  )
)
(example
  (utterance "what student has an end date that is later than the start date of alice")
  (original "student whose end date is larger than start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find employees who have a start date the same as employee alice")
  (original "employee whose start date is at most end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what company employs an 180 cm tall person")
  (original "company that is employer of person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.company) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employer)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "what person has the same relationship status as that of the majority")
  (original "relationship status that is relationship status of the most number of person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "a student ending after or when alice starts")
  (original "student whose end date is at least start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find all people who are 180 cm tall")
  (original "person whose height is person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "what people have two relationship statuses")
  (original "person that has two relationship status")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) (number 2)))

  )
)
(example
  (utterance "find students friends with last days other than 2004")
  (original "person that is friends with student whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "student whose start date is after start date of employee alice")
  (original "student whose start date is larger than start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "an employee who left before alice was born")
  (original "employee whose end date is smaller than birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what is the gender of people that started school after 2004")
  (original "gender that is gender of student whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "which employees dont have the job title software engineer")
  (original "employee whose job title is not software engineer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string !=) en.job_title.software_engineer)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "people that are software engineers or program managers")
  (original "software engineer or program manager")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.job_title.software_engineer en.job_title.program_manager))

  )
)
(example
  (utterance "employee who joined before 2004")
  (original "employee whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "name the student who was born after alice ")
  (original "student whose start date is larger than start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which employee started after alices birthdate")
  (original "employee whose start date is larger than birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "gender of someone who is single")
  (original "gender that is gender of person whose relationship status is single")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) en.relationship_status.single)))

  )
)
(example
  (utterance "start date of alices study which ended in 2004")
  (original "start date of student alice whose end date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date) (string =) (date 2004 -1 -1)) (string education_start_date)))

  )
)
(example
  (utterance "people who are friends with employees who started working in or before 2004")
  (original "person that is friends with employee whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find people who are students with a field of study that is not computer science and their friends")
  (original "person that student whose field of study is not computer science is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string !=) en.field.computer_science)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "person born after alice started school")
  (original "person whose birthdate is larger than start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date)))))

  )
)
(example
  (utterance "find people shorter than alice")
  (original "person whose height is smaller than height of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string height)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string height)))))

  )
)
(example
  (utterance "alices male friends")
  (original "person whose gender is male and that is friends with alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) en.gender.male) (string friend) (string =) en.person.alice))

  )
)
(example
  (utterance "the gender of one worker who left in 2004 or before")
  (original "gender that is gender of employee whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "students studying either computer science or history")
  (original "student whose field of study is computer science or history")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.field.computer_science en.field.history))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what is the relationship status of one employee whos not a software engineer")
  (original "relationship status that is relationship status of employee whose job title is not software engineer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string !=) en.job_title.software_engineer)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "who has friends that are students whos start date before 2004")
  (original "person that student whose start date is not 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what is the combined height of everyone in my network")
  (original "total height of person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.aggregate (string sum) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height))))

  )
)
(example
  (utterance "what is the relationship status of a student who began at 2004 or before")
  (original "relationship status that is relationship status of student whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "which students have the same birthrate and start date of alice")
  (original "student whose start date is at most birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find friends of students with end dates other than 2004")
  (original "person that student whose end date is not 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "which is the university of studen alice who finished in 2004")
  (original "university of student alice whose end date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date) (string =) (date 2004 -1 -1)) (string university)))

  )
)
(example
  (utterance "what is the relationship status of employees whose job title is not software engineer")
  (original "relationship status that is relationship status of employee whose job title is not software engineer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string !=) en.job_title.software_engineer)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what is the gender of working people that did not start in 2004")
  (original "gender that is gender of employee whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "relationship status of employee whose end date is before 2004")
  (original "relationship status that is relationship status of employee whose end date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find the birth city for students whom have a start date other than 2004")
  (original "city that is birthplace of student whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "which people are 180 cm at brown university")
  (original "person whose height is 180 cm and whose university is brown university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string university) (string =) en.university.brown))

  )
)
(example
  (utterance "friend of student whose end date is not before 2004")
  (original "person that is friends with employee whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find people that have more than two birthplaces")
  (original "person that has more than two birthplace")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string >) (number 2)))

  )
)
(example
  (utterance "name a friend of alice who was born in new york")
  (original "person whose birthplace is new york and that alice is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) en.city.new_york) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice))

  )
)
(example
  (utterance "which student left most recently")
  (original "student that has the largest end date")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "people who completed the study after 2004")
  (original "student whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what person has the same birthdate as alice")
  (original "person whose birthdate is birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))

  )
)
(example
  (utterance "what is the relationship status of the person who is 180 cm tall")
  (original "person whose relationship status is person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "people who are 180 cm tall and quit in 2004")
  (original "person whose height is 180 cm and whose end date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string education_end_date) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "relationship status of people whose height is 180cm")
  (original "relationship status that is relationship status of person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "find students who have an end date that is earlier than student alice")
  (original "student whose end date is smaller than end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "all single or married persons")
  (original "person whose relationship status is single or married")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.relationship_status.single en.relationship_status.married)))

  )
)
(example
  (utterance "find me all people who are not alices friends")
  (original "person that alice not is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string !=) en.person.alice))

  )
)
(example
  (utterance "who is alices employer")
  (original "employer of employee alice whose employer is mckinsey")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employer) (string =) en.company.mckinsey) (string employer)))

  )
)
(example
  (utterance "find the oldest person")
  (original "person that has the largest birthdate")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate))))

  )
)
(example
  (utterance "find student with end date after alices start date")
  (original "student whose end date is larger than start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what single person is friends with alice")
  (original "person that is friends with alice and whose relationship status is single")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) en.person.alice) (string relationship_status) (string =) en.relationship_status.single))

  )
)
(example
  (utterance "people that started school before 2004")
  (original "student whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "friend of alice")
  (original "person that alice is friends with and that is friends with alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice) (string friend) (string =) en.person.alice))

  )
)
(example
  (utterance "a student that ends the same time alice starts")
  (original "student whose end date is at most start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "people that stopped working when alice did or before")
  (original "employee whose end date is at most end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "people with friends who are single")
  (original "person that person whose relationship status is single is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) en.relationship_status.single)))

  )
)
(example
  (utterance "students who began school after alice was born")
  (original "student whose start date is larger than birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "birth city of student whose start date is before 2004")
  (original "city that is birthplace of employee whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "which relationship status is of at most two person")
  (original "relationship status that is relationship status of at most two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string <=) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "who is alices male friend")
  (original "person that alice is friends with and whose gender is male")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice) (string gender) (string =) en.gender.male))

  )
)
(example
  (utterance "what gender are the employees who left the company before 2004")
  (original "gender that is gender of employee whose end date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find people with a relationship status of single and a total height of 180 cm")
  (original "person whose height is 180 cm and whose relationship status is single")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string relationship_status) (string =) en.relationship_status.single))

  )
)
(example
  (utterance "which people are friends with the person currently logged in")
  (original "person that person that is logged in is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in))))

  )
)
(example
  (utterance "which employee has the most previous employers")
  (original "employee that has the most number of employer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string max) (string employer))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "ulca or brown univercity")
  (original "brown university or ucla")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.university.brown en.university.ucla))

  )
)
(example
  (utterance "employee whos last day was between 2004 and 2010")
  (original "employee whose end date is at most 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "name the employee who quit the job on the same date as employee alice")
  (original "employee whose end date is at least end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "birthplaces of all 180 cm tall people")
  (original "city that is birthplace of person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "people that stopped school before alice did")
  (original "student whose end date is smaller than end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which employee started before alice")
  (original "employee whose start date is smaller than start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what is the relationship status of people who stopped school in 2004 or later")
  (original "relationship status that is relationship status of student whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "students finishing contemporaneous or before alice")
  (original "student whose end date is at most end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what student has a start date that is later than that of student alice")
  (original "student whose start date is larger than start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "friend of a student starting before or during 2004")
  (original "person that is friends with student whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "birthplace of employees who started before 2004")
  (original "city that is birthplace of employee whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "person who studied in most fields")
  (original "student that has the most number of field of study")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string max) (string field_of_study))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "employees starting after 2004")
  (original "employee whose start date is at least 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "someone not friends with alice")
  (original "person that alice not is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string !=) en.person.alice))

  )
)
(example
  (utterance "employe that has a smaller start date than alice")
  (original "employee whose start date is smaller than start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find student with earliest last day")
  (original "student that has the smallest end date")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "who is a student that started after 2004")
  (original "student whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what company emplys a 180 cm tall person")
  (original "company that is employer of person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.company) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employer)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "students starting before alice finishes")
  (original "student whose start date is at most end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "an employee ending before alice starts")
  (original "employee whose end date is larger than start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "employees starting after alice")
  (original "employee whose start date is larger than start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "students who finish with or after alice")
  (original "student whose end date is at least end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "is there a gender less than two people have")
  (original "gender that is gender of less than two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string <) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "people born in new york that are single")
  (original "person whose relationship status is single and whose birthplace is new york")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) en.relationship_status.single) (string birthplace) (string =) en.city.new_york))

  )
)
(example
  (utterance "people who started in 2004 and are 180 cm tall")
  (original "person whose height is 180 cm and whose start date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string education_start_date) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "people that stopped working after alice was born")
  (original "employee whose end date is larger than birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "students who attended college the longest")
  (original "student that has the most number of university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string max) (string university))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "name a person who is online who is 180 cm tall")
  (original "person that is logged in and whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in)) (string height) (string =) (number 180 en.cm)))

  )
)
(example
  (utterance "people that started working when alice was born or before")
  (original "student whose start date is at most birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which employee start after alice leaves")
  (original "employee whose start date is at least end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what is the birthplace of those who are friends with alice")
  (original "city that is birthplace of person that alice is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice)))

  )
)
(example
  (utterance "people who are friends with alice and born in new york")
  (original "person whose birthplace is new york and that is friends with alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) en.city.new_york) (string friend) (string =) en.person.alice))

  )
)
(example
  (utterance "employee whose end date is after alices birth date")
  (original "employee whose end date is larger than birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what gender does the person born in 2004 have")
  (original "gender that is gender of person whose birthdate is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1))))

  )
)
(example
  (utterance "employees with one job title")
  (original "employee that has the least number of job title")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string min) (string job_title))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what person has a height of at least 180 cm")
  (original "person whose height is at least 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string height)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 180 en.cm))))

  )
)
(example
  (utterance "find me all of alices guy friends")
  (original "person whose gender is male and that is friends with alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) en.gender.male) (string friend) (string =) en.person.alice))

  )
)
(example
  (utterance "who stopped working in 2004 and is 180 cm tall")
  (original "person whose height is 180 cm and whose end date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string education_end_date) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "what employee quit their job on the day alice started")
  (original "employee whose end date is start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what employee has an end date that is before the end date of alice")
  (original "employee whose end date is smaller than end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what employees have a start date that is bigger than 2004 or 2010")
  (original "employee whose start date is larger than 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what is the birth city of a student who didnt stop in 2004")
  (original "city that is birthplace of student whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "friend of student whose end date is after 2004")
  (original "person that is friends with student whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "who is friends with alice and is 180 cm tall")
  (original "person that is friends with alice and whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) en.person.alice) (string height) (string =) (number 180 en.cm)))

  )
)
(example
  (utterance "find employees friends with last day other than 2004")
  (original "person that is friends with employee whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what is the birthplace of employees whose job title isnt software engineer")
  (original "city that is birthplace of employee whose job title is not software engineer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string !=) en.job_title.software_engineer)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what is the person born in new yorks relationship status")
  (original "relationship status that is relationship status of person whose birthplace is new york")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) en.city.new_york)))

  )
)
(example
  (utterance "people who were born before alice started school")
  (original "person whose birthdate is smaller than start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date)))))

  )
)
(example
  (utterance "where was the employee born who does not work for mckinsey")
  (original "city that is birthplace of employee whose employer is not mckinsey")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employer) (string !=) en.company.mckinsey)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "whats the relationship status of the employee with an end date no later than 2004")
  (original "relationship status that is relationship status of employee whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find someone who lists 2 birthplaces")
  (original "person that has at least two birthplace")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string >=) (number 2)))

  )
)
(example
  (utterance "employee whose end date is before after end date of employee alice")
  (original "employee whose end date is larger than end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "who is from new york and logged in")
  (original "person that is logged in and whose birthplace is new york")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in)) (string birthplace) (string =) en.city.new_york))

  )
)
(example
  (utterance "which software engineer has employed alice")
  (original "employer of employee alice whose job title is software engineer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string job_title) (string =) en.job_title.software_engineer) (string employer)))

  )
)
(example
  (utterance "people who are friends with employees whose last day was in or before 2004")
  (original "person that is friends with employee whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "employees with the fewest employers")
  (original "employee that has the least number of employer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string min) (string employer))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "a 180 cm tall person")
  (original "person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)))

  )
)
(example
  (utterance "people with friends who started work in 2004 at the latest")
  (original "person that employee whose start date is at most 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "who is studying computer science or history")
  (original "student whose field of study is computer science or history")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.field.computer_science en.field.history))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "who is friends with someone who graduated after 2004")
  (original "person that student whose end date is larger than 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find employee with last day same as or before alices")
  (original "employee whose end date is at most end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "people that stopped working after alice did")
  (original "employee whose end date is larger than end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "people who have friends who are not software engineers")
  (original "person that is friends with employee whose job title is not software engineer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string !=) en.job_title.software_engineer)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find employee starting on alices first day or later")
  (original "employee whose start date is at least start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "which student goes to another university besides brown")
  (original "student whose university is not brown university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string university) (string !=) en.university.brown)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which of alices friends is online")
  (original "person that is logged in and that alice is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice))

  )
)
(example
  (utterance "find me all employees that will start at the company before alice leaves")
  (original "employee whose start date is at least end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "single people that are currently online")
  (original "person that is logged in and whose relationship status is single")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in)) (string relationship_status) (string =) en.relationship_status.single))

  )
)
(example
  (utterance "what is the relationship status of people going to any university but brown")
  (original "relationship status that is relationship status of student whose university is not brown university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string university) (string !=) en.university.brown)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what student has the most majors")
  (original "student that has the most number of field of study")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string max) (string field_of_study))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "who are people who are students with an end date no greater than 2004 friends with")
  (original "person that student whose end date is at most 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "friend of alice who was born in new york")
  (original "person that is friends with alice and whose birthplace is new york")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) en.person.alice) (string birthplace) (string =) en.city.new_york))

  )
)
(example
  (utterance "find all males who have friends")
  (original "person that person whose gender is male is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) en.gender.male)))

  )
)
(example
  (utterance "who is friends with the student that started after 2004")
  (original "person that is friends with student whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "people who joined after alice was born")
  (original "employee whose start date is larger than birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "whats the relationship status of all students except those from brown university")
  (original "relationship status that is relationship status of student whose university is not brown university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string university) (string !=) en.university.brown)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "which singles are 180 cm tall")
  (original "person whose height is 180 cm and whose relationship status is single")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string relationship_status) (string =) en.relationship_status.single))

  )
)
(example
  (utterance "student who joined before 2004")
  (original "student whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find the friends of employees that quit in 2004 or later")
  (original "person that employee whose end date is at least 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what is the gender of employees with last day in 2004 or before")
  (original "gender that is gender of employee whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "employees that are starting their new job on alices birthday")
  (original "employee whose start date is birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what is the relationship status of employees who left before 2004")
  (original "relationship status that is relationship status of employee whose end date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "people that started school when alice did or before")
  (original "student whose start date is at most start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which employeess last day was least recently")
  (original "employee that has the smallest end date")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what is the average height of all the people in my network")
  (original "average height of person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.aggregate (string avg) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height))))

  )
)
(example
  (utterance "name an employee who started in 2004 but before 2011")
  (original "employee whose start date is at most 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "which employees started after alices birthdate")
  (original "employee whose start date is larger than birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what is the gender of the student who started in 2004")
  (original "gender that is gender of student whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what is the relationship status of an employee that stopped working on or before 2004")
  (original "relationship status that is relationship status of employee whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "people who are friends with students who dont major in computer sience")
  (original "person that is friends with student whose field of study is not computer science")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string !=) en.field.computer_science)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "person who stopped school before alice stopped working")
  (original "student whose end date is smaller than end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which people with an end date of 2004 are 180 cm tall")
  (original "person whose height is 180 cm and whose end date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string education_end_date) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "how many fields are there")
  (original "number of field")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call .size (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.field) (string !type))))

  )
)
(example
  (utterance "find people with the same height as alice or 180 cm")
  (original "person whose height is 180 cm and that is height of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string height)) (string =) en.person.alice))

  )
)
(example
  (utterance "gender of employees who finish after or in 2004")
  (original "gender that is gender of employee whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "a student starting when alice ends")
  (original "student whose start date is end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what student has an end date before 2004")
  (original "student whose end date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "people with the most friends")
  (original "person that is friends with the most number of person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string max) (string friend) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "students who began school in 2004 or 2010")
  (original "student whose start date is 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find students sharing alices field of study")
  (original "student whose field of study is field of study of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string field_of_study)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "people who were born after alice graduated school")
  (original "person whose birthdate is at most end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date)))))

  )
)
(example
  (utterance "people who studied in two or less fields")
  (original "student that has at most two field of study")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string field_of_study) (string <=) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which employees left prior to 2004")
  (original "employee whose end date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what friend of alice was born in new york")
  (original "person that alice is friends with and whose birthplace is new york")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice) (string birthplace) (string =) en.city.new_york))

  )
)
(example
  (utterance "find employees with last days on or after alices birthday")
  (original "employee whose end date is at least birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "which date did alice start who finished in 2004")
  (original "start date of student alice whose end date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date) (string =) (date 2004 -1 -1)) (string education_start_date)))

  )
)
(example
  (utterance "which students start date is on or before alices end date")
  (original "student whose start date is at most end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "students who started no later than the start date of alice")
  (original "student whose start date is at most start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what is the relationship status of alice or bob")
  (original "relationship status that is relationship status of alice or bob")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.person.alice en.person.bob)))

  )
)
(example
  (utterance "employee whose start date is not before end date of student alice")
  (original "employee whose start date is at least end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "people who are friends with a student that started no earlier than 2004")
  (original "person that is friends with student whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "people who are friends with an employee whose end date is no later than 2004")
  (original "person that is friends with employee whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what is relationship status of student with last day before 2004")
  (original "relationship status that is relationship status of student whose end date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "friend of alices friend who is from new york")
  (original "person that person whose birthplace is new york is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) en.city.new_york)))

  )
)
(example
  (utterance "friend of employee whose end date is after 2004")
  (original "person that employee whose end date is larger than 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "who is friends with employees that have an end date of 2004")
  (original "person that employee whose end date is at most 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what is the relationship status of working people that did not stop in 2004")
  (original "relationship status that is relationship status of employee whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "people that stopped school the day alice was born")
  (original "student whose end date is birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what is the job title of the person that is 180 cm")
  (original "job title that is job title of person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.job_title) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string job_title)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "what employees have a start date that is no later than alices birthday")
  (original "employee whose start date is at most birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "students who started on alices end date")
  (original "student whose start date is end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "who shares a birthday with alice and is 180 cm tall")
  (original "person whose height is 180 cm and that is birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthdate)) (string =) en.person.alice))

  )
)
(example
  (utterance "fine me all employees who start by 2004")
  (original "employee whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what is thre relationship status of students who started no sooner than 2004")
  (original "relationship status that is relationship status of student whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what is the most end date of student 2004 or 2010")
  (original "employee whose end date is at most 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "when did mckinseys employe alice start")
  (original "start date of employee alice whose employer is mckinsey")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employer) (string =) en.company.mckinsey) (string employment_start_date)))

  )
)
(example
  (utterance "which employees have the fewest job titles")
  (original "employee that has the least number of job title")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string min) (string job_title))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "which employee left their job after alice started")
  (original "employee whose end date is larger than start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "employees starting before alice")
  (original "employee whose start date is smaller than start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "employee whose end date is before 2004")
  (original "employee whose end date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "who is friends with over two people")
  (original "person that is friends with more than two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string >) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "gender of people who joined their study after 2004")
  (original "gender that is gender of student whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what is alices birthplace")
  (original "birthplace of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthplace)))

  )
)
(example
  (utterance "an employee that ends before alice starts")
  (original "employee whose end date is smaller than start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what employee has no more than two employers")
  (original "employee that has at most two employer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string employer) (string <=) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "people that finished school in or before 2004")
  (original "student whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "least common relationship status")
  (original "relationship status that is relationship status of the least number of person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "find all male singles")
  (original "person whose gender is male and whose relationship status is single")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) en.gender.male) (string relationship_status) (string =) en.relationship_status.single))

  )
)
(example
  (utterance "which students start no sooner than alices graduation day")
  (original "student whose start date is at least end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "where are the birth cities of employees who have a start date of no earlier than 2004")
  (original "city that is birthplace of employee whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what is thre relationship status of students who started no later than 2004")
  (original "relationship status that is relationship status of student whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "which employee started earlier than 2004 or 2010")
  (original "employee whose start date is smaller than 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "people that work for mckinsey or google")
  (original "employee whose employer is mckinsey or google")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employer) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.company.mckinsey en.company.google))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "where were the people that finished school before 2004 born")
  (original "city that is birthplace of student whose end date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "someone with multiple relationship statuses")
  (original "person that has more than two relationship status")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string >) (number 2)))

  )
)
(example
  (utterance "who is the employer of the person whose height is 180 cm")
  (original "company that is employer of person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.company) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employer)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "students who started in 2004 or before")
  (original "student whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "people that stopped working when alice stopped school")
  (original "employee whose end date is end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "who is friends with someone who didnt go to brown university")
  (original "person that student whose university is not brown university is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string university) (string !=) en.university.brown)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "who is 180 cm and from the same place as alice")
  (original "person whose height is 180 cm and that is birthplace of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) en.person.alice))

  )
)
(example
  (utterance "who is alices friend that is from new york")
  (original "person that alice is friends with and whose birthplace is new york")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice) (string birthplace) (string =) en.city.new_york))

  )
)
(example
  (utterance "which student ended no later than alice")
  (original "student whose end date is at most end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "name an employee whose end date is similar to that of alice")
  (original "employee whose end date is at least end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "which person has the birthdate of alice")
  (original "person whose birthdate is at most birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate)))))

  )
)
(example
  (utterance "find people born after alices last day of work")
  (original "person whose birthdate is end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))

  )
)
(example
  (utterance "what gender are the two people")
  (original "gender that is gender of two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "find students with last day before or the same as alices")
  (original "student whose end date is at most end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "whats the gender of the student that did not attend brown university")
  (original "gender that is gender of student whose university is not brown university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string university) (string !=) en.university.brown)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find employees who have a start date that is the same as employee alice")
  (original "employee whose start date is start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find students friends not studying computer science field")
  (original "person that is friends with student whose field of study is not computer science")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string !=) en.field.computer_science)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "birth city of student whose field of study is not computer science")
  (original "city that is birthplace of student whose field of study is not computer science")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string !=) en.field.computer_science)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "person who was born in 2004 or 2010")
  (original "person whose birthdate is 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))

  )
)
(example
  (utterance "people that have friends that alice is friends with")
  (original "person that person that alice is friends with is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice)))

  )
)
(example
  (utterance "employees starting before alice finishes")
  (original "employee whose start date is smaller than end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "people who joined their job after 2004")
  (original "employee whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what was the graduation date of alice in 2004")
  (original "end date of student alice whose end date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date) (string =) (date 2004 -1 -1)) (string education_end_date)))

  )
)
(example
  (utterance "what is gender of the student whose end date is before 2004")
  (original "gender that is gender of student whose end date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find me students whose  end date is no later than 2004")
  (original "student whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "employees who joined after alice")
  (original "employee whose start date is larger than end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what relationship statuses are meant for less than two people")
  (original "relationship status that is relationship status of less than two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string <) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "which students graduate in 2004 or 2010 or before")
  (original "student whose end date is at most 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "people that are friends with a student who started before 2004")
  (original "person that is friends with student whose end date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "people that stopped school in or after 2004")
  (original "student whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "people that started working on or after alice was born")
  (original "employee whose start date is at least birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "employees with the latest start date")
  (original "employee that has the largest start date")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what genders are the people that stopped working after 2004")
  (original "gender that is gender of employee whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "name a person who is 180 cm who started working in 2004")
  (original "person whose height is 180 cm and whose start date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string education_start_date) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "what genders are the people whom alice is friends with")
  (original "gender that is gender of person that alice is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice)))

  )
)
(example
  (utterance "person who is friends with someone whose start date is no later than 2004")
  (original "person that employee whose start date is at most 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "who is 180 cm tall and born in the same city as alice")
  (original "person whose height is 180 cm and that is birthplace of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) en.person.alice))

  )
)
(example
  (utterance "what is the start date of a student who started before alice")
  (original "student whose start date is larger than start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "people who started school on or before the day alice finished school")
  (original "student whose start date is at most end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "when did employee alice started")
  (original "start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date)))

  )
)
(example
  (utterance "which student has the greatest end date")
  (original "student that has the largest end date")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "people that are friends with someone that stopped working before 2004")
  (original "person that is friends with employee whose end date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "alices friends born in 2004")
  (original "person that is friends with alice and whose birthdate is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) en.person.alice) (string birthdate) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "what student graduates the earliest")
  (original "student that has the smallest end date")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find students who have a start date before either 2004 or 2010")
  (original "student whose start date is smaller than 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "employee whose job title is same job title as of employee alice")
  (original "employee whose job title is job title of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string job_title)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what city was alice or bob born in")
  (original "city that is birthplace of alice or bob")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.person.alice en.person.bob)))

  )
)
(example
  (utterance "the job title of a 180 cm tall person")
  (original "job title that is job title of person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.job_title) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string job_title)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "what is the birthplace of employee who ended after 2004")
  (original "city that is birthplace of employee whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "birthplaces of students who ended school in or after 2004")
  (original "city that is birthplace of student whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "students who finish before alice")
  (original "student whose end date is at most end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "gender of student whose end date is not 2004")
  (original "gender that is gender of student whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "who is friends with alice and was born on 2004")
  (original "person whose birthdate is 2004 and that alice is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice))

  )
)
(example
  (utterance "what student has a start date before the birthdate of alice")
  (original "student whose start date is smaller than birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find me all people who belong to one gender")
  (original "person that has less than two gender")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string <) (number 2)))

  )
)
(example
  (utterance "who is friends with someone who started working during or before 2004")
  (original "person that employee whose start date is at most 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "which employees last day was most recently")
  (original "employee that has the largest end date")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what is gender of students who started in 2004 and later")
  (original "gender that is gender of student whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find people who are 180 cm tall with 2004 start dates")
  (original "person whose height is 180 cm and whose start date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string education_start_date) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "what employees have a start date that is alices birthday or later")
  (original "employee whose start date is at least birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "name a person 180 cm tall who was born in 2004")
  (original "person whose height is 180 cm and whose birthdate is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string birthdate) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "person from same birth place as that of alice")
  (original "person whose birthplace is birthplace of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthplace))))

  )
)
(example
  (utterance "people that started working before alice stopped working")
  (original "employee whose start date is smaller than end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "people who are friends with students who started before 2004")
  (original "person that is friends with student whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what is the relationship status of the person that is 180 cm tall")
  (original "relationship status that is relationship status of person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "relationship history of a person")
  (original "person that has less than two relationship status")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string <) (number 2)))

  )
)
(example
  (utterance "people who studied in universities other than brown university")
  (original "student whose university is not brown university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string university) (string !=) en.university.brown)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "birth city of student whose university is not brown university")
  (original "city that is birthplace of student whose university is not brown university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string university) (string !=) en.university.brown)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find the birth city of students with an end date later than 2004")
  (original "city that is birthplace of student whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "an employee who left after alice was born")
  (original "employee whose end date is larger than birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "employee whose end date is before start date of student alice")
  (original "employee whose end date is smaller than start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find a student who left on alices birthday")
  (original "student whose end date is birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "people who quit their job in or after 2004")
  (original "employee whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find the relationship status of an employee who has an end date of 2004")
  (original "relationship status that is relationship status of employee whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "which person was born in more than 2 places")
  (original "person that has more than two birthplace")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string >) (number 2)))

  )
)
(example
  (utterance "whats the gender of the student that leaves before 2004")
  (original "gender that is gender of student whose end date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what person is the tallest")
  (original "person that has the largest height")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string height))))

  )
)
(example
  (utterance "which employee started after alice left")
  (original "employee whose start date is larger than end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "who are the friends of the new students that are starting by 2004")
  (original "person that is friends with student whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "relationship statuses of students who began school in or after 2004")
  (original "relationship status that is relationship status of student whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "an employee starting before 2004")
  (original "employee whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "who is 180 cm tall")
  (original "person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)))

  )
)
(example
  (utterance "who quit working most recently")
  (original "employee that has the largest end date")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "people born before alice finished school")
  (original "person whose birthdate is smaller than end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date)))))

  )
)
(example
  (utterance "students who ended school the same day that alice ended school")
  (original "student whose end date is end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what employee has the latest start date")
  (original "employee that has the largest start date")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "student whose start date is after start date of student alice")
  (original "student whose start date is larger than start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which students graduate no sooner than alices first day of work")
  (original "student whose end date is at least end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "one person whose friend started studies before 2004")
  (original "person that is friends with student whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "who was a student before or on 2004")
  (original "student whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "field of study of someone 180 cm tall")
  (original "field that is field of study of person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.field) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string field_of_study)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "find employees with fewer than two job titles")
  (original "employee that has less than two job title")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string job_title) (string <) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "people that started working in or after 2004 or in or after 2010")
  (original "employee whose start date is at least 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "someone 180 cm tall and same gender as alice")
  (original "person whose height is 180 cm and that is gender of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) en.person.alice))

  )
)
(example
  (utterance "when did software engineer alice left")
  (original "end date of employee alice whose job title is software engineer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string job_title) (string =) en.job_title.software_engineer) (string employment_end_date)))

  )
)
(example
  (utterance "what was alices job title from 2004")
  (original "job title of employee alice whose end date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date) (string =) (date 2004 -1 -1)) (string job_title)))

  )
)
(example
  (utterance "which people are friends with employees how started after 2004")
  (original "person that is friends with employee whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "employees starting contemporaneous to or before alice")
  (original "employee whose start date is at most start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find me students end date equal to student alice")
  (original "student whose end date is end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "who is online and is 180 cm tall")
  (original "person whose height is 180 cm and that is logged in")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string logged_in)))

  )
)
(example
  (utterance "what person has two or less friends")
  (original "person that at most two person is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string <=) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "name the friend of alice whose birthplace is new york")
  (original "person whose birthplace is new york and that alice is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) en.city.new_york) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice))

  )
)
(example
  (utterance "people who are male or female")
  (original "person whose gender is male or female")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.gender.male en.gender.female)))

  )
)
(example
  (utterance "friends of alice born in 2004")
  (original "person that is friends with alice and whose birthdate is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) en.person.alice) (string birthdate) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "what people are employees of a employer that is not mckinsey friends with")
  (original "person that employee whose employer is not mckinsey is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employer) (string !=) en.company.mckinsey)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "employees who started on or after alices last day")
  (original "employee whose start date is at least end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find the gender of students who were born after 2004")
  (original "gender that is gender of student whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "a friend of alice born in 2004")
  (original "person that is friends with alice and whose birthdate is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) en.person.alice) (string birthdate) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "people who are friends with a student whose end date is after 2004")
  (original "person that is friends with student whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what students have a start date that is the same as the end date of alice")
  (original "student whose start date is end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "who is friends with the employee who quit later than 2004")
  (original "person that employee whose end date is larger than 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what is the gender of the student who left by 2004")
  (original "gender that is gender of student whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what genders are the people that stopped school in any year but 2004")
  (original "gender that is gender of student whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "a 180 cm tall male")
  (original "person whose gender is male and whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) en.gender.male) (string height) (string =) (number 180 en.cm)))

  )
)
(example
  (utterance "where were the people that finished school in or before 2004 born")
  (original "city that is birthplace of student whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what person was born in new york")
  (original "person whose birthplace is new york")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) en.city.new_york))

  )
)
(example
  (utterance "what is the gender of students who did not graduate before 2004")
  (original "gender that is gender of student whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "name a person 180 cm in height who is friends with alice")
  (original "person whose height is 180 cm and that alice is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice))

  )
)
(example
  (utterance "employee whose start date is before 2004")
  (original "employee whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "who is friends with the person who stopped working before 2004")
  (original "person that employee whose end date is smaller than 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "friends of people who quit their jobs after 2004")
  (original "person that employee whose end date is larger than 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what is the field of study for people who are 180 cm tall")
  (original "field that is field of study of person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.field) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string field_of_study)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "what is the birthplace of employees whose last day was before 2004")
  (original "city that is birthplace of employee whose end date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find employees whose start date is 2004 or later")
  (original "employee whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "relationship status of employees starting after 2004")
  (original "relationship status that is relationship status of employee whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "students who did not begin school before 2004")
  (original "student whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what is alice studying at brown university")
  (original "field of study of student alice whose university is brown university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string university) (string =) en.university.brown) (string field_of_study)))

  )
)
(example
  (utterance "find the gender of students whose end date is no later than 2004")
  (original "gender that is gender of student whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "people that stopped working after alice started working")
  (original "employee whose end date is larger than start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "transgendered people")
  (original "person that has at least two gender")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string >=) (number 2)))

  )
)
(example
  (utterance "find employees starting on or after alices last day")
  (original "employee whose start date is at least end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "students who graduated no later than the day alice did")
  (original "student whose end date is at most end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "employees who quit before alice quit her job")
  (original "employee whose end date is at most end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "employee that has the lowest job status")
  (original "employee that has the least number of job title")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string min) (string job_title))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find employees with last day before or on alices last day")
  (original "employee whose end date is at most end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "who is friends with the person graduating in 2004 or earlier")
  (original "person that student whose end date is smaller than 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find students starting before alices last day at work")
  (original "student whose start date is smaller than end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what students have an end date that is before the birthday of alice")
  (original "student whose end date is smaller than birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what employee has the latest start date")
  (original "employee that has the largest start date")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "employees who stopped working at the same time as alice")
  (original "employee whose end date is end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "people with friends who are not software engineers")
  (original "person that is friends with employee whose job title is not software engineer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string !=) en.job_title.software_engineer)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "people who are 180 cm or taller")
  (original "person whose height is at least 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string height)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 180 en.cm))))

  )
)
(example
  (utterance "which student from brown university is 180 cm tall")
  (original "person whose height is 180 cm and whose university is brown university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string university) (string =) en.university.brown))

  )
)
(example
  (utterance "who is friends with the employee starting in 2004")
  (original "person that is friends with employee whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "which students started no later than alices birthdate")
  (original "student whose start date is at most birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what people are friends with a person whose height is 180 cm")
  (original "person that is friends with person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "find the people who joined their job before alice joined her studies")
  (original "employee whose start date is smaller than start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what city were more than two people in my social network born in")
  (original "city that is birthplace of more than two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string >) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "which person claims the most genders")
  (original "person that has the most number of gender")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string max) (string gender)))

  )
)
(example
  (utterance "people who joined study on the day alice completed")
  (original "student whose start date is end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "person that stopped working before alice stopped school")
  (original "employee whose end date is smaller than end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "alices friends who are single")
  (original "person whose relationship status is single and that is friends with alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) en.relationship_status.single) (string friend) (string =) en.person.alice))

  )
)
(example
  (utterance "find people who are friends with employees who have an end date no later than 2004")
  (original "person that is friends with employee whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "employees starting when alice finishes")
  (original "employee whose start date is end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find people born the same day alice ended school")
  (original "person whose birthdate is end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))

  )
)
(example
  (utterance "what did alice stop studying in 2004")
  (original "field of study of student alice whose end date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date) (string =) (date 2004 -1 -1)) (string field_of_study)))

  )
)
(example
  (utterance "employers of all people who are 180 cm tall")
  (original "company that is employer of person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.company) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employer)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "employee whose start date is minimum the end date of employee alice")
  (original "employee whose start date is at least end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find someone who is female")
  (original "person whose gender is not male")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string !=) en.gender.male))

  )
)
(example
  (utterance "whats the relationship status of students who graduated before 2004")
  (original "relationship status that is relationship status of student whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what is alices gender")
  (original "gender that is gender of alice and that is gender of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) en.person.alice) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) en.person.alice))

  )
)
(example
  (utterance "employee whose end date is not after alices end date")
  (original "employee whose end date is smaller than end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "people that are male or female")
  (original "person whose gender is male or female")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.gender.male en.gender.female)))

  )
)
(example
  (utterance "people taller than alice")
  (original "person whose height is larger than height of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string height)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string height)))))

  )
)
(example
  (utterance "what gender are people that started working in or after 2004")
  (original "gender that is gender of employee whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "males who are online")
  (original "person whose gender is male and that is logged in")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) en.gender.male) (string logged_in)))

  )
)
(example
  (utterance "what student graduated before alice quit her job")
  (original "student whose end date is smaller than end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "who was born in the same place as alice")
  (original "person whose birthplace is birthplace of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthplace))))

  )
)
(example
  (utterance "employed until 2004 or 2010")
  (original "employee whose end date is at least 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "which person has the least number of relationship statuses")
  (original "person that has the least number of relationship status")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string min) (string relationship_status)))

  )
)
(example
  (utterance "people born in new york and 180 cm tall")
  (original "person whose height is 180 cm and whose birthplace is new york")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string birthplace) (string =) en.city.new_york))

  )
)
(example
  (utterance "find people who are 180 cm tall")
  (original "person whose height is person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "which student ended school right when alice started her job")
  (original "student whose end date is at most start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find people who are single")
  (original "relationship status that is relationship status of person whose relationship status is single")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) en.relationship_status.single)))

  )
)
(example
  (utterance "which employees start the day alice starts")
  (original "employee whose start date is start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find me the student who started before alices departure")
  (original "student whose start date is at most end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "when did alice start school")
  (original "start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date)))

  )
)
(example
  (utterance "friends of males")
  (original "person that person whose gender is male is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) en.gender.male)))

  )
)
(example
  (utterance "people that have two or fewer employers listed")
  (original "employee that has at most two employer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string employer) (string <=) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "people that stopped working before alice was born")
  (original "employee whose end date is smaller than birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what is the students relationship status who ended greater than 2004")
  (original "relationship status that is relationship status of student whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what gender are employees whose job title isnt software engineer")
  (original "gender that is gender of employee whose job title is not software engineer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string !=) en.job_title.software_engineer)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "people who quit their jobs after alice born")
  (original "employee whose end date is larger than birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "people who joined work after alice")
  (original "employee whose end date is smaller than start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what gender is the gender of two people")
  (original "gender that is gender of two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "people born on or before the date alice stopped attending school")
  (original "person whose birthdate is at most end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date)))))

  )
)
(example
  (utterance "name a person friends with a person that is 180 cm tall")
  (original "person that is friends with person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "person not born in new york")
  (original "person whose birthplace is not new york")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string !=) en.city.new_york))

  )
)
(example
  (utterance "people who were born in the same place as alice")
  (original "person whose birthplace is birthplace of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthplace))))

  )
)
(example
  (utterance "birth  city of employee whose start date is not 2004")
  (original "city that is birthplace of employee whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "who is the person who is friends with a nonmckinsey employee")
  (original "person that is friends with employee whose employer is not mckinsey")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employer) (string !=) en.company.mckinsey)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "genders of employees not finishing in 2004")
  (original "gender that is gender of employee whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "a unique relationship status")
  (original "relationship status that is relationship status of less than two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string <) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "find someone born after alices last day of work")
  (original "person whose birthdate is larger than end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date)))))

  )
)
(example
  (utterance "people born in 2004 or later")
  (original "person whose birthdate is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1))))

  )
)
(example
  (utterance "people who are friends with an employee who started after 2004")
  (original "person that is friends with employee whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "people who are friends with alice and born in 2004")
  (original "person whose birthdate is 2004 and that is friends with alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1)) (string friend) (string =) en.person.alice))

  )
)
(example
  (utterance "what employee has a start date of 2004")
  (original "person that employee whose start date is at most 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "all males who were born in 2004")
  (original "person whose gender is male and whose birthdate is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) en.gender.male) (string birthdate) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "students who did not start in 2004")
  (original "student whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which people have more than genders")
  (original "person that has more than two gender")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string >) (number 2)))

  )
)
(example
  (utterance "find students with a start date that is no greater than student alices start date")
  (original "student whose start date is at most start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find employees with an end date that is not 2004")
  (original "employee whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "gender of an employee not starting in 2004")
  (original "gender that is gender of employee whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what was alices field of study as a student")
  (original "field of study of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string field_of_study)))

  )
)
(example
  (utterance "people with friends who graduated school after 2004")
  (original "person that student whose end date is larger than 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "students who graduated on or before alices birthday")
  (original "student whose end date is at most birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "friends of people who are taller than 180 cm")
  (original "person that person whose height is 180 cm is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "people who studied the same field as alice")
  (original "student whose field of study is field of study of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string field_of_study)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "friends of employees who dont finish in 2004")
  (original "person that is friends with employee whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what is the gender of alice or bob")
  (original "gender that is gender of alice or bob")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.person.alice en.person.bob)))

  )
)
(example
  (utterance "which gender is the student who ended after 2004")
  (original "gender that is gender of student whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "student whose end date is before end date of student alice")
  (original "student whose end date is smaller than end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what students have a start date that is at least either 2004 or 2010")
  (original "student whose start date is at least 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "person that has two genders")
  (original "person that has at most two gender")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string <=) (number 2)))

  )
)
(example
  (utterance "find friends of employee with end date not in 2004")
  (original "person that employee whose end date is not 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "city where person whose relationship status is single born")
  (original "city that is birthplace of person whose relationship status is single")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) en.relationship_status.single)))

  )
)
(example
  (utterance "a friend of alice")
  (original "person that alice is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice))

  )
)
(example
  (utterance "where was alice born")
  (original "city that is birthplace of alice and that is birthplace of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) en.person.alice) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) en.person.alice))

  )
)
(example
  (utterance "what is the relationship status of people that started school in or before 2004")
  (original "relationship status that is relationship status of student whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find a person logged in that was born in 2004")
  (original "person whose birthdate is 2004 and that is logged in")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1)) (string logged_in)))

  )
)
(example
  (utterance "when did alice start at mckinsey")
  (original "start date of employee alice whose employer is mckinsey")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employer) (string =) en.company.mckinsey) (string employment_start_date)))

  )
)
(example
  (utterance "relationship status of student whose start date is not before 2004")
  (original "relationship status that is relationship status of employee whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "gender that is shared by two persons")
  (original "gender that is gender of two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "which people are friends with students who graduated no sooner than 2004")
  (original "person that is friends with student whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "a student ending when alice starts")
  (original "student whose end date is start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "people that started school before alice started working")
  (original "student whose start date is smaller than start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find who alice worked for in 2004")
  (original "employer of employee alice whose end date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date) (string =) (date 2004 -1 -1)) (string employer)))

  )
)
(example
  (utterance "employees who were hired either in 2004 or 2010")
  (original "employee whose start date is 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what is alices job title")
  (original "job title of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string job_title)))

  )
)
(example
  (utterance "alice who is a student of computer science is a student of which university")
  (original "university of student alice whose field of study is computer science")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string field_of_study) (string =) en.field.computer_science) (string university)))

  )
)
(example
  (utterance "what is the relationship status of the student whose start date is before 204")
  (original "relationship status that is relationship status of student whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "students who died before alice was born")
  (original "student whose end date is larger than birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "friend of student whose end date is not 2004")
  (original "person that is friends with student whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "which student started earliest")
  (original "student that has the smallest start date")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "who is studying the most things")
  (original "student that has the least number of field of study")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string min) (string field_of_study))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what person has a birthdate no later than 2004")
  (original "person whose birthdate is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1))))

  )
)
(example
  (utterance "what city is the bithplace of an employee who did not start in 2004")
  (original "city that is birthplace of employee whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "where were employees who are not software engineers born")
  (original "city that is birthplace of employee whose job title is not software engineer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string !=) en.job_title.software_engineer)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "employee who quit before birthdate of alice")
  (original "employee whose end date is at most birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "where were the people that finished school after 2004 born")
  (original "city that is birthplace of student whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "locate students who have an end date that is no greater than employee alices")
  (original "student whose end date is at most end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "people that stopped school when alice started working")
  (original "student whose end date is start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "people who are 180 cm tall and study computer science")
  (original "person whose height is 180 cm and whose field of study is computer science")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string field_of_study) (string =) en.field.computer_science))

  )
)
(example
  (utterance "employees who began working either by 2004 or 2010")
  (original "employee whose start date is at most 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "students whose end date is later than 2004")
  (original "student whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find all people born in 2004")
  (original "person whose birthdate is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "birth city of employee whose start date is not after 2004")
  (original "city that is birthplace of employee whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "a friend is someone not employed by mckinsey")
  (original "person that employee whose employer is not mckinsey is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employer) (string !=) en.company.mckinsey)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "students who began school in 2004 or later")
  (original "student whose start date is at least 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what students graduate when alice was hired")
  (original "student whose end date is start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "student with only one field of study")
  (original "student that has less than two field of study")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string field_of_study) (string <) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "an employee that ends before alice")
  (original "employee whose end date is smaller than end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "employees starting contemporaneous to or after alice finishes")
  (original "employee whose start date is at least end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "students who finish after alice starts")
  (original "student whose end date is larger than start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "person with same gender as that of person 180 cm tall")
  (original "person whose gender is person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "what are the birthplaces of employees starting after 2004")
  (original "city that is birthplace of employee whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "when did alice start attending brown university")
  (original "start date of student alice whose university is brown university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string university) (string =) en.university.brown) (string education_start_date)))

  )
)
(example
  (utterance "find students who attended the most universities")
  (original "student that has the most number of university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string max) (string university))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which is the university alice studied")
  (original "student whose university is university of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string university) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string university)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find employees with last days on or before alices first day")
  (original "employee whose end date is at most start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what employee has a start date that is the birthdate of alice")
  (original "employee whose start date is birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "which students graduate no sooner than alices first work day")
  (original "student whose end date is at least start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what is the job title of people who have a height of 180 cm")
  (original "job title that is job title of person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.job_title) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string job_title)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "employees other than software engineers")
  (original "employee whose job title is not software engineer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string !=) en.job_title.software_engineer)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "who is friends with an employee who start date is not 2004")
  (original "person that employee whose start date is not 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what person is friends with males")
  (original "person that is friends with person whose gender is male")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) en.gender.male)))

  )
)
(example
  (utterance "what relationship statuses are claimed by people born in 2004")
  (original "relationship status that is relationship status of person whose birthdate is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1))))

  )
)
(example
  (utterance "what is the university of alice")
  (original "university of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string university)))

  )
)
(example
  (utterance "who is either shorter than alice or same")
  (original "person whose height is at most height of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string height)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string height)))))

  )
)
(example
  (utterance "employees who start after 2004")
  (original "employee whose start date is larger than 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "which employees last day was more recent than alices graduation day")
  (original "employee whose end date is larger than end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "employees who started on alices start date or later")
  (original "employee whose start date is at least start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "which employees have had no more than employers")
  (original "employee that has at most two employer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string employer) (string <=) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what is job title of employee alice")
  (original "job title of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string job_title)))

  )
)
(example
  (utterance "which student stopped at the same time employee alice did")
  (original "student whose end date is end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "whats the relationship status of people who are male")
  (original "relationship status that is relationship status of person whose gender is male")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) en.gender.male)))

  )
)
(example
  (utterance "what person is logged in")
  (original "person that is logged in")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in)))

  )
)
(example
  (utterance "employees who started work before alice started school")
  (original "employee whose start date is at least start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "which employees had a quit date that was not in 2004")
  (original "employee whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "employee who left the day alice joined")
  (original "employee whose end date is start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find employees who have the fewest number of job titles")
  (original "employee that has the least number of job title")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string min) (string job_title))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "student who graduates before alice starts")
  (original "student whose end date is at most start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find me a list of students whose start date was in 2004 or 2010")
  (original "student whose start date is 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "employees who started before alice stopped being a student")
  (original "employee whose start date is smaller than end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what students have an end date less than that of the start date of employee alice")
  (original "student whose end date is smaller than start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find me all employees that started working after 2004 or 2010")
  (original "employee whose start date is larger than 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "birth city of student whose end date is before 2004")
  (original "city that is birthplace of student whose end date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find friends of alice or bob")
  (original "person that alice or bob is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.person.alice en.person.bob)))

  )
)
(example
  (utterance "what employees have the same job title as alice")
  (original "employee whose job title is job title of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string job_title)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "friends of students starting before 2004")
  (original "person that is friends with student whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "who is friends with the person who is 180 cm tall")
  (original "person that is friends with person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "name a person who is friends with more than two other people")
  (original "person that is friends with more than two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string >) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "find people who have the same relationship status of someone alice is friends with")
  (original "relationship status that is relationship status of person that alice is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice)))

  )
)
(example
  (utterance "the relationship status of a student not starting in 2004")
  (original "relationship status that is relationship status of student whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "alices 2004 employment start date")
  (original "start date of employee alice whose start date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date) (string =) (date 2004 -1 -1)) (string employment_start_date)))

  )
)
(example
  (utterance "find employees starting before 2010")
  (original "employee whose start date is smaller than 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "name the relationship of thie student who started before 2004")
  (original "relationship status that is relationship status of student whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "who is online and friends with alice")
  (original "person that alice is friends with and that is logged in")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice) (string logged_in)))

  )
)
(example
  (utterance "people who are in a relationship")
  (original "person whose relationship status is not single")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string !=) en.relationship_status.single))

  )
)
(example
  (utterance "what was the gender of employees who left before 2004")
  (original "gender that is gender of employee whose end date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "whats the relationship status of the employee starting after 2004")
  (original "relationship status that is relationship status of employee whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "student that is enrolled in brown or ucla university")
  (original "student whose university is brown university or ucla")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string university) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.university.brown en.university.ucla))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "employee with not more than two job titles")
  (original "employee that has at most two job title")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string job_title) (string <=) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find the person that is 180 cm tall and is also female")
  (original "person whose height is 180 cm and that is gender of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) en.person.alice))

  )
)
(example
  (utterance "people who were born after alice")
  (original "person whose birthdate is larger than birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate)))))

  )
)
(example
  (utterance "which people are friends with employess whose job title isnt softare engineer")
  (original "person that is friends with employee whose job title is not software engineer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string !=) en.job_title.software_engineer)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "name a friend of the student who graduated after 2004")
  (original "person that student whose end date is larger than 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "people who are not the same gender as alice")
  (original "gender that is not gender of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string !=) en.person.alice))

  )
)
(example
  (utterance "what is alices job title from company she left in 2004")
  (original "job title of employee alice whose end date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date) (string =) (date 2004 -1 -1)) (string job_title)))

  )
)
(example
  (utterance "people that are currently online")
  (original "person that is logged in")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in)))

  )
)
(example
  (utterance "which employees last day was the same day alice started school")
  (original "employee whose end date is start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what people have at least two relationship statuses")
  (original "person that has at least two relationship status")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string >=) (number 2)))

  )
)
(example
  (utterance "person that stopped school most recently")
  (original "student that has the largest end date")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "where was alices friend born in")
  (original "city that is birthplace of person that is friends with alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) en.person.alice)))

  )
)
(example
  (utterance "find friends of person born in 2004")
  (original "person that person whose birthdate is 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1))))

  )
)
(example
  (utterance "find all people who are friends of alice")
  (original "person that alice is friends with and that is friends with alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice) (string friend) (string =) en.person.alice))

  )
)
(example
  (utterance "what is the relationship status of current or former students excluding those that started in 2004")
  (original "relationship status that is relationship status of student whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "show me all employees that leave the company before alice starts")
  (original "employee whose end date is smaller than start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find friends of people who started school after 2004")
  (original "person that student whose start date is larger than 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find people who are friends with alice and born in new york")
  (original "person that is friends with alice and whose birthplace is new york")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) en.person.alice) (string birthplace) (string =) en.city.new_york))

  )
)
(example
  (utterance "who has two genders")
  (original "person that has two gender")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) (number 2)))

  )
)
(example
  (utterance "find student with last day other than 2004")
  (original "student whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which gender are most people who are 180 cm tall")
  (original "person whose gender is person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "students who started no later than alices birthdate")
  (original "employee whose end date is at least birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "who is friends with the person who graduated during or before 2004")
  (original "person that student whose end date is at most 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "employees who started before 2010")
  (original "employee whose start date is at most 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "gender of students whose end date is later than 2004")
  (original "gender that is gender of student whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find people with two birthplaces")
  (original "person that has two birthplace")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) (number 2)))

  )
)
(example
  (utterance "who has maximum two relationship status")
  (original "person that has at most two relationship status")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string <=) (number 2)))

  )
)
(example
  (utterance "name a friend of alice who is online")
  (original "person that is logged in and that alice is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice))

  )
)
(example
  (utterance "find people with two relationship statuses")
  (original "person that has two relationship status")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) (number 2)))

  )
)
(example
  (utterance "alices field of study is computer science")
  (original "field of study of student alice whose field of study is computer science")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string field_of_study) (string =) en.field.computer_science) (string field_of_study)))

  )
)
(example
  (utterance "name a friend of the student who started no later than 2004")
  (original "person that student whose start date is at most 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "who started in 2004 and is 180 cm tall")
  (original "person whose height is 180 cm and whose start date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string education_start_date) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "people that are friends with employees other than software engineers")
  (original "person that is friends with employee whose job title is not software engineer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string !=) en.job_title.software_engineer)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find people who are logged in with a height of 180 cm")
  (original "person that is logged in and whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in)) (string height) (string =) (number 180 en.cm)))

  )
)
(example
  (utterance "people that started working in or after 2004")
  (original "employee whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "university number")
  (original "number of university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call .size (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.university) (string !type))))

  )
)
(example
  (utterance "who has two birthplaces")
  (original "person that has two birthplace")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) (number 2)))

  )
)
(example
  (utterance "find students who have an end date less than 2004")
  (original "student whose end date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find all employees whose start date matches alices")
  (original "employee whose start date is start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what is the gender of people that started working after 2004")
  (original "gender that is gender of employee whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "student who graduated after 2004")
  (original "student whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which students graduated any year but 2004")
  (original "student whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "whats the relationship status of two people")
  (original "relationship status that is relationship status of at most two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string <=) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "gender which is same as alice")
  (original "gender that is gender of alice and that is gender of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) en.person.alice) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) en.person.alice))

  )
)
(example
  (utterance "people who finished working when alice started or before")
  (original "employee whose end date is at most start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find students with a start date of employee alice or greater")
  (original "student whose start date is at least start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "alices friend who is logged in")
  (original "person that is logged in and that is friends with alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in)) (string friend) (string =) en.person.alice))

  )
)
(example
  (utterance "who is friends with a student who does not attend brown university")
  (original "person that is friends with student whose university is not brown university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string university) (string !=) en.university.brown)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "who is the friend of the student who quit in or after 2004")
  (original "person that is friends with student whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find people with a height of 180 and an end date of 2004")
  (original "person whose height is 180 cm and whose end date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string education_end_date) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "employees who started when alice quit her job")
  (original "employee whose start date is end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "which city is the birthplace of two of the people")
  (original "city that is birthplace of two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "employee with the least job titles")
  (original "employee that has the least number of job title")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string min) (string job_title))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find the birthplaces of people who are male")
  (original "city that is birthplace of person whose gender is male")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) en.gender.male)))

  )
)
(example
  (utterance "which employees started on or before alices birthdate")
  (original "employee whose start date is at most birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what people are friens with alice")
  (original "person that person that alice is friends with is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice)))

  )
)
(example
  (utterance "students starting after 2004")
  (original "student whose start date is larger than 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which people were born after 2004")
  (original "person whose birthdate is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1))))

  )
)
(example
  (utterance "what is the birthplace of students who graduated no later than 2004")
  (original "city that is birthplace of student whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "start date of alice at mckinsey")
  (original "start date of employee alice whose employer is mckinsey")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employer) (string =) en.company.mckinsey) (string employment_start_date)))

  )
)
(example
  (utterance "what student started after alices birthdate")
  (original "student whose start date is larger than birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find people whose birthday is the same as alices end date")
  (original "person whose birthdate is end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))

  )
)
(example
  (utterance "find the gender of all people logged in with a height of 180 cm")
  (original "person whose gender is person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "find people who has the same birthplace as alice")
  (original "person whose birthplace is city that is birthplace of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) en.person.alice)))

  )
)
(example
  (utterance "employee whose start date is not 2004")
  (original "employee whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "who is the same height as alice at 180 cm")
  (original "person whose height is 180 cm and that is height of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string height)) (string =) en.person.alice))

  )
)
(example
  (utterance "find me friends of people who joined their jobs before 2004")
  (original "person that employee whose start date is smaller than 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "student whose end date is same as start date of employee alice")
  (original "student whose end date is start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "who is online that is 180 cm tall")
  (original "person whose height is 180 cm and that is logged in")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string logged_in)))

  )
)
(example
  (utterance "what is the field of study of student alice whose university is brown university")
  (original "field of study of student alice whose university is brown university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string university) (string =) en.university.brown) (string field_of_study)))

  )
)
(example
  (utterance "who is friends with the person is quit no later than 2004")
  (original "person that student whose end date is at most 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "students who started before 2004")
  (original "student whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what is the relationship status of people that stopped working after 2004")
  (original "relationship status that is relationship status of employee whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "student with not more than two universities")
  (original "student that has at most two university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string university) (string <=) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "the birthplace of a student starting after 2004")
  (original "city that is birthplace of student whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "people born after alice started working")
  (original "person whose birthdate is larger than start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date)))))

  )
)
(example
  (utterance "what city were people who are single born in")
  (original "city that is birthplace of person whose relationship status is single")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) en.relationship_status.single)))

  )
)
(example
  (utterance "people born in new york")
  (original "person whose birthplace is new york")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) en.city.new_york))

  )
)
(example
  (utterance "people who have more than two friends")
  (original "person that is friends with more than two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string >) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "name an employee who began in 2004 or later")
  (original "employee whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "name a student who started in 2004 or 2010")
  (original "student whose start date is 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "people who have a different relationship status than alice")
  (original "relationship status that is not relationship status of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string !=) en.person.alice))

  )
)
(example
  (utterance "students finishing on alices starting day")
  (original "student whose end date is start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "who is friends with the person who stopped working in 2004")
  (original "person that employee whose end date is at most 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "employee with smallest end date")
  (original "employee that has the smallest end date")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what is the males relationship status")
  (original "relationship status that is relationship status of person whose gender is male")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) en.gender.male)))

  )
)
(example
  (utterance "what is the average height of a person")
  (original "average height of person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.aggregate (string avg) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height))))

  )
)
(example
  (utterance "find males that alice is friends with")
  (original "person that alice is friends with and whose gender is male")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice) (string gender) (string =) en.gender.male))

  )
)
(example
  (utterance "find the male friends of alice")
  (original "person whose gender is male and that is friends with alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) en.gender.male) (string friend) (string =) en.person.alice))

  )
)
(example
  (utterance "which employee ended on alices start date")
  (original "employee whose end date is at least start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what is the birthplace of the employee who didnt start in 2004")
  (original "city that is birthplace of employee whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what date did alice quit studying in 2004")
  (original "start date of student alice whose end date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date) (string =) (date 2004 -1 -1)) (string education_start_date)))

  )
)
(example
  (utterance "what student stopped before alice was born")
  (original "student whose end date is smaller than birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which student left school before alice left school")
  (original "student whose start date is smaller than end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "people that have two birthplaces")
  (original "person that has two birthplace")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) (number 2)))

  )
)
(example
  (utterance "find students who have an end date greater than the start date of employee alice")
  (original "student whose end date is larger than start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "people who are friends with a student whose start date is before 2004")
  (original "person that is friends with student whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what is the gender of person who is born in 2004")
  (original "gender that is gender of person whose birthdate is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1))))

  )
)
(example
  (utterance "birth city of employee whose employer is not mckinsey")
  (original "city that is birthplace of employee whose employer is not mckinsey")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employer) (string !=) en.company.mckinsey)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find employees with an end date that is the same or later than student alice")
  (original "employee whose end date is at least end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "employee with least number of job titles")
  (original "employee that has the least number of job title")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string min) (string job_title))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what city is the birthplace of the employee who started earlier than 2004")
  (original "city that is birthplace of employee whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "who is that employee who isnt a software engineer friends with")
  (original "person that employee whose job title is not software engineer is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string !=) en.job_title.software_engineer)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what city were alice or bob born in")
  (original "city that is birthplace of alice or bob")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.person.alice en.person.bob)))

  )
)
(example
  (utterance "student whose end date is before birth date of alice")
  (original "student whose end date is smaller than birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what is schooling start date of alice")
  (original "start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date)))

  )
)
(example
  (utterance "what is the relationship status of students who graduated before 2003")
  (original "relationship status that is relationship status of student whose end date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "gender of student whose end date is not after 2004")
  (original "gender that is gender of student whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what is the relationship status of working people that did not start in 2004")
  (original "relationship status that is relationship status of employee whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find students starting before alice")
  (original "student whose start date is smaller than start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "who is friends with alices friend")
  (original "person that is friends with person that is friends with alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) en.person.alice)))

  )
)
(example
  (utterance "what is the gender of students who started no later than 2004")
  (original "gender that is gender of student whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "which students have the fewest majors")
  (original "student that has the least number of field of study")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string min) (string field_of_study))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find people who are friends with employees who have a start date of no later than 2004")
  (original "person that is friends with employee whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "people who are friends with students who started school in 2005 or later")
  (original "person that is friends with student whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what students started before alice")
  (original "student whose start date is smaller than start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what is the gender of students with a start date no later than 2004")
  (original "gender that is gender of student whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "who has friends that are not employees at mckinsey")
  (original "person that employee whose employer is not mckinsey is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employer) (string !=) en.company.mckinsey)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find single people born in new york")
  (original "person whose birthplace is new york and whose relationship status is single")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) en.city.new_york) (string relationship_status) (string =) en.relationship_status.single))

  )
)
(example
  (utterance "people who are friends with an employee who does not have the job title of software engineer")
  (original "person that is friends with employee whose job title is not software engineer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string !=) en.job_title.software_engineer)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "where were alices friends born")
  (original "city that is birthplace of person that is friends with alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) en.person.alice)))

  )
)
(example
  (utterance "which students graduated before alices birthdate")
  (original "student whose end date is smaller than birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find friends connections who graduated after 2004")
  (original "person that student whose end date is larger than 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "which of alices friends were born in 2004")
  (original "person that is friends with alice and whose birthdate is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) en.person.alice) (string birthdate) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "what is the relationship status of alice")
  (original "relationship status that is relationship status of alice and that is relationship status of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) en.person.alice) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) en.person.alice))

  )
)
(example
  (utterance "find people who were born in 2004 or later")
  (original "person whose birthdate is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1))))

  )
)
(example
  (utterance "which students have the same major as alice")
  (original "student whose field of study is field of study of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string field_of_study)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which employee quit most recently")
  (original "employee that has the smallest end date")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "who has the most birthplaces listed")
  (original "person that has the most number of birthplace")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string max) (string birthplace)))

  )
)
(example
  (utterance "who was born in 2004 and is 180 cm tall")
  (original "person whose birthdate is 2004 and whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1)) (string height) (string =) (number 180 en.cm)))

  )
)
(example
  (utterance "find people  born in 2004 whose height is 180 cm")
  (original "person whose birthdate is 2004 and whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1)) (string height) (string =) (number 180 en.cm)))

  )
)
(example
  (utterance "student whose start date is after end date of employee alice")
  (original "student whose start date is at least end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "who quit after alices birthday")
  (original "student whose end date is at least birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what person has a birthdate sooner than alice")
  (original "person whose birthdate is at most start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date)))))

  )
)
(example
  (utterance "what genders are people that stopped working in or before 2004")
  (original "gender that is gender of employee whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "employees who quit their job in or after 2004")
  (original "employee whose end date is at least 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "students who ended school on or after the day alice was born")
  (original "student whose end date is at least birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find students with last day before or on alices birthday")
  (original "student whose end date is at most birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which people are friends with students who started after 2004")
  (original "person that is friends with student whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "student whose end date is so later than alices")
  (original "student whose end date is at most end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "name the friend of a person not employed by mckinsey")
  (original "person that employee whose employer is not mckinsey is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employer) (string !=) en.company.mckinsey)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find people whose height is 180 cm that are also friends with alice")
  (original "person whose height is 180 cm and that alice is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice))

  )
)
(example
  (utterance "who is 180 cm tall and born in 2004")
  (original "person whose height is 180 cm and whose birthdate is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string birthdate) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "employees who finish before alices birthday")
  (original "employee whose end date is smaller than birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what person has their status as single")
  (original "person whose relationship status is single and whose relationship status is single")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) en.relationship_status.single) (string relationship_status) (string =) en.relationship_status.single))

  )
)
(example
  (utterance "find people with same birthplace as alice")
  (original "person whose birthplace is birthplace of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthplace))))

  )
)
(example
  (utterance "find employees with a start date no later than 2004 and their friends")
  (original "person that employee whose start date is at most 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what students have an end date that is the same as student alice")
  (original "student whose end date is end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "a person 180 cm tall and has same birthdate as alice")
  (original "person whose height is 180 cm and that is birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthdate)) (string =) en.person.alice))

  )
)
(example
  (utterance "find friends of employees who quit the job after 2004 ")
  (original "person that is friends with employee whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "people that started school on or after the day alice stopped working")
  (original "student whose start date is at least end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "students who did not graduate before alice enrolled")
  (original "student whose end date is at least start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "a friend of someone who quit after 2004")
  (original "person that employee whose end date is larger than 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what is the birth city of a worker who started in 2004 or after")
  (original "city that is birthplace of employee whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "who is youngest")
  (original "person that has the smallest birthdate")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate))))

  )
)
(example
  (utterance "students who share alices field of study")
  (original "student whose field of study is field of study of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string field_of_study)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "the university of someone 180 cm tall")
  (original "university that is university of person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.university) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string university)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "find me all students who graduated after 2004")
  (original "student whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "who is born after student alice started")
  (original "person whose birthdate is larger than start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date)))))

  )
)
(example
  (utterance "what is the relationship status of friend of alice")
  (original "relationship status that is relationship status of person that alice is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice)))

  )
)
(example
  (utterance "what people have two or more genders")
  (original "person that has at least two gender")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string >=) (number 2)))

  )
)
(example
  (utterance "which male has a relationship status of single")
  (original "person whose relationship status is single and whose gender is male")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) en.relationship_status.single) (string gender) (string =) en.gender.male))

  )
)
(example
  (utterance "birthplaces of students that started school after 2004")
  (original "city that is birthplace of student whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "which students started no later than the day alice started work")
  (original "student whose start date is at least start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "people that started working after alice did")
  (original "employee whose start date is larger than start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find people whom are friends with alice")
  (original "person that alice is friends with and that is friends with alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice) (string friend) (string =) en.person.alice))

  )
)
(example
  (utterance "what people with a birthdate of 2004 are also friends with alice")
  (original "person whose birthdate is 2004 and that is friends with alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1)) (string friend) (string =) en.person.alice))

  )
)
(example
  (utterance "name a friend of the person who is online")
  (original "person that person that is logged in is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in))))

  )
)
(example
  (utterance "student whose end date is not before end date of employee alice")
  (original "student whose end date is at least end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "who is born in a city that alice was born in")
  (original "city that is birthplace of alice and that is birthplace of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) en.person.alice) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) en.person.alice))

  )
)
(example
  (utterance "what student has a start date close to the start date of alice")
  (original "student whose start date is at least start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "student who started not after 2004")
  (original "student whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "student whose end date is on the date student alice started")
  (original "student whose end date is start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "students at brown or ucla")
  (original "student whose university is brown university or ucla")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string university) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.university.brown en.university.ucla))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which employee has the earliest start date")
  (original "employee that has the smallest start date")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find me the birth city of all students whoes end date is 2004 or later")
  (original "city that is birthplace of student whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "who is the newest employee")
  (original "employee that has the largest start date")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "people not born in new york")
  (original "person whose birthplace is not new york")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string !=) en.city.new_york))

  )
)
(example
  (utterance "find the employee who who left after alice started")
  (original "employee whose end date is larger than start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "which students do not attend brown university")
  (original "student whose university is not brown university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string university) (string !=) en.university.brown)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "when did alice graduate after studying computer science")
  (original "end date of student alice whose field of study is computer science")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string field_of_study) (string =) en.field.computer_science) (string education_end_date)))

  )
)
(example
  (utterance "find students who have an end date that is no greater than student alice")
  (original "student whose end date is at most end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "where was alices friend born")
  (original "city that is birthplace of person that alice is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice)))

  )
)
(example
  (utterance "alice is a student at which university")
  (original "university of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string university)))

  )
)
(example
  (utterance "people who are friends with people who got their current job before 2005")
  (original "person that employee whose start date is at most 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find me the place of birth for all employees starting before 2004")
  (original "city that is birthplace of employee whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find employees starting after 2004")
  (original "employee whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what person has two relationship statuses")
  (original "person that has at most two relationship status")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string <=) (number 2)))

  )
)
(example
  (utterance "what university did alice attend in 2004")
  (original "university of student alice whose end date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date) (string =) (date 2004 -1 -1)) (string university)))

  )
)
(example
  (utterance "who left their job the longest time ago")
  (original "employee that has the smallest end date")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what did alice study in 2004")
  (original "field of study of student alice whose end date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date) (string =) (date 2004 -1 -1)) (string field_of_study)))

  )
)
(example
  (utterance "person who completed the education first")
  (original "student that has the smallest end date")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what is the average height of people")
  (original "average height of person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.aggregate (string avg) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height))))

  )
)
(example
  (utterance "what is the relationship status of the student who finished before 2004")
  (original "relationship status that is relationship status of student whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "people born before alice quit her job")
  (original "person whose birthdate is smaller than end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date)))))

  )
)
(example
  (utterance "what is the relationship status of the employee who started in 2004")
  (original "relationship status that is relationship status of employee whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "people who are friends with a student whose start date is 2004 or later")
  (original "person that is friends with student whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "which student was the last to finish")
  (original "student that has the largest end date")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find alice a student at university")
  (original "university of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string university)))

  )
)
(example
  (utterance "which employees stared the same day alice started school")
  (original "employee whose start date is start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "cities of employees who were hired after 2004")
  (original "city that is birthplace of employee whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "a student who started after student alice")
  (original "student whose start date is larger than start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what student started on the same day as alice")
  (original "student whose start date is start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what student has an end date no earlier than alices end date")
  (original "student whose end date is smaller than end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which gender is claimed by at least two people")
  (original "gender that is gender of at least two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string >=) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "employee who was born when alice quit the job")
  (original "employee whose start date is end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "birth city of employee whose end date is before 2004")
  (original "city that is birthplace of employee whose end date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "birthplace of students finishing in or after 2004")
  (original "city that is birthplace of student whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what student has an end date before student alice")
  (original "student whose end date is at most start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find employees with last day on or before alices first day")
  (original "employee whose end date is at most start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find people who are male and 180 cm tall")
  (original "person whose gender is male and whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) en.gender.male) (string height) (string =) (number 180 en.cm)))

  )
)
(example
  (utterance "what employees have a start date that is either 2004 or 2010")
  (original "employee whose start date is 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what is the total number of genders")
  (original "number of gender")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call .size (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type))))

  )
)
(example
  (utterance "who is friends with a student who started before 2004")
  (original "person that is friends with student whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what is the gender of students who do not go to brown university")
  (original "gender that is gender of student whose university is not brown university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string university) (string !=) en.university.brown)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "employee who quit before alice graduated")
  (original "employee whose end date is smaller than end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what people are friends with employees who have an end date before 2004")
  (original "person that is friends with employee whose end date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find friends of students whose last day is 2004 or later")
  (original "person that student whose end date is at least 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "which 180 cm tall people have a start date of 2004")
  (original "person whose height is 180 cm and whose start date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string education_start_date) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "what city were students born in that started before 2004")
  (original "city that is birthplace of student whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what employee is starting by the time alice leaves the company")
  (original "employee whose start date is at least end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find employee with a start date after alices")
  (original "employee whose start date is larger than start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "employees who did not start in 2004")
  (original "employee whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "relationship status of students not starting in 2004")
  (original "relationship status that is relationship status of student whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "places of birth of employees who quit their job in 2004 or later")
  (original "city that is birthplace of employee whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "which employee started after 2004 or 2010")
  (original "employee whose start date is larger than 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find those that are friends with students who have start dates earlier than 2004")
  (original "person that is friends with student whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what person is shorter than 180 cm")
  (original "person whose height is smaller than 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string height)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 180 en.cm))))

  )
)
(example
  (utterance "who is 180 cm tall and has a start date in 2004")
  (original "person whose height is 180 cm and whose start date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string education_start_date) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "name people whose height is greater than 180 cm")
  (original "person whose height is larger than 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string height)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 180 en.cm))))

  )
)
(example
  (utterance "find people with one or two birthplaces")
  (original "person that has at most two birthplace")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string <=) (number 2)))

  )
)
(example
  (utterance "students with the same field of study as alice")
  (original "student whose field of study is field of study of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string field_of_study)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what students began school before alice began working")
  (original "student whose start date is smaller than start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "people that started school before alice did")
  (original "student whose start date is smaller than start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which students attended between 2004 and 2010")
  (original "student whose start date is at most 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what person is the shortest")
  (original "person that has the smallest height")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string height))))

  )
)
(example
  (utterance "who stopped school before alice started")
  (original "student whose end date is smaller than start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what male was born in new york")
  (original "person whose gender is male and whose birthplace is new york")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) en.gender.male) (string birthplace) (string =) en.city.new_york))

  )
)
(example
  (utterance "what is the gender of employees terminated on or after 2004")
  (original "gender that is gender of employee whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "a student who left on or after alices birthday")
  (original "student whose end date is at least birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which people are friends with students graduating in 2004 or later")
  (original "person that student whose end date is at least 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what employee has an end date before 2004")
  (original "person that employee whose end date is not 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what is the birthplace of people who did not start in 2004")
  (original "city that is birthplace of employee whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what birthplace has at least two people in it")
  (original "city that is birthplace of two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "friends of employees who are not software engineers")
  (original "person that is friends with employee whose job title is not software engineer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string !=) en.job_title.software_engineer)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "students who have no more than two fields of study")
  (original "student that has at most two field of study")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string field_of_study) (string <=) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "either mckinsey or google")
  (original "mckinsey or google")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.company.mckinsey en.company.google))

  )
)
(example
  (utterance "which student left school after alice quit her job")
  (original "student whose end date is larger than end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what employees have a start date the same as alices end date")
  (original "employee whose start date is end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "students who started in 2004 or 2010")
  (original "student whose start date is at least 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "people that stopped school the same day as alice")
  (original "student whose end date is end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "friend of employee whose start date is not 2004")
  (original "person that is friends with employee whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "students not finishing in 2004")
  (original "student whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what worker has the most job titles")
  (original "employee that has the most number of job title")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string max) (string job_title))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "which students started the same day alice did")
  (original "student whose start date is start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find me friends of people studying somewhere other than brown university")
  (original "person that student whose university is not brown university is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string university) (string !=) en.university.brown)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "people that started working in or before 2004")
  (original "employee whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "people who is taller then 180 cm logged in")
  (original "person whose height is 180 cm and that is logged in")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string logged_in)))

  )
)
(example
  (utterance "which people are friends with students who strated before 2004")
  (original "person that student whose start date is smaller than 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what people are logged in with a height of 180 cm")
  (original "person whose height is 180 cm and that is logged in")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string logged_in)))

  )
)
(example
  (utterance "persons born in new york")
  (original "person whose birthplace is new york")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) en.city.new_york))

  )
)
(example
  (utterance "find the people who are 180 cm tall")
  (original "person whose height is 180 cm and that is height of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string height)) (string =) en.person.alice))

  )
)
(example
  (utterance "find people who are logged in who are also friends with alice")
  (original "person that alice is friends with and that is logged in")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice) (string logged_in)))

  )
)
(example
  (utterance "find males who are 180cm tall")
  (original "person whose gender is male and whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) en.gender.male) (string height) (string =) (number 180 en.cm)))

  )
)
(example
  (utterance "what is alices field of study")
  (original "field of study of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string field_of_study)))

  )
)
(example
  (utterance "what is the number of city")
  (original "number of city")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call .size (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type))))

  )
)
(example
  (utterance "who was born on the date alice left")
  (original "person whose birthdate is end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))

  )
)
(example
  (utterance "find alices friends who are 180 cm tall")
  (original "person that alice is friends with and whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice) (string height) (string =) (number 180 en.cm)))

  )
)
(example
  (utterance "who is friends with the person who is graduating in 2004 at the earliest")
  (original "person that student whose end date is at least 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find people who are logged in and has the birth place as newyork")
  (original "person whose birthplace is new york and that is logged in")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) en.city.new_york) (string logged_in)))

  )
)
(example
  (utterance "which students have the earliest start date")
  (original "student that has the smallest start date")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what gender are people that started working before 2004")
  (original "gender that is gender of employee whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find me the two people born in the same city")
  (original "city that is birthplace of two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "who has the same gender as alice and is 180 cm tall")
  (original "person whose height is 180 cm and that is gender of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) en.person.alice))

  )
)
(example
  (utterance "name an employee who left after alice started")
  (original "employee whose end date is at least start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find the youngest person")
  (original "person that has the smallest birthdate")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate))))

  )
)
(example
  (utterance "student whose start date is the smallest")
  (original "student that has the smallest start date")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find me the relationship status of students who graduated since 2004")
  (original "relationship status that is relationship status of student whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find me all employees who quit before 2004")
  (original "employee whose end date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find people who are students of a university that is not brown and their friends")
  (original "person that student whose university is not brown university is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string university) (string !=) en.university.brown)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what people have a height of 180 cm and the height of alice")
  (original "person whose height is 180 cm and that is height of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string height)) (string =) en.person.alice))

  )
)
(example
  (utterance "find people who are not alices friends")
  (original "person that alice not is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string !=) en.person.alice))

  )
)
(example
  (utterance "employees finishing before 2004")
  (original "employee whose end date is smaller than 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "employee who started to work before alices enrollment in school")
  (original "employee whose start date is smaller than start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "students finishing contemporaneous to or after alice starts")
  (original "student whose end date is at least start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "one student who didnt stop in 2004")
  (original "student whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "birthplace of employees who finish before 2004")
  (original "city that is birthplace of employee whose end date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what students have a start date that is the same as employee alices end date or later")
  (original "student whose start date is at least end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find people that have two friends")
  (original "person that is friends with two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "which students start school the same day alice starts work")
  (original "student whose start date is start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what are the genders of people born in new york")
  (original "gender that is gender of person whose birthplace is new york")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) en.city.new_york)))

  )
)
(example
  (utterance "employee whose employer is either mckinsey or google")
  (original "employee whose employer is mckinsey or google")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employer) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.company.mckinsey en.company.google))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "people with only one relationship status")
  (original "person that has less than two relationship status")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string <) (number 2)))

  )
)
(example
  (utterance "people who are single and were born in 2004")
  (original "person whose relationship status is single and whose birthdate is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) en.relationship_status.single) (string birthdate) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "whats the relationship status of the student that graduated after 2004")
  (original "relationship status that is relationship status of student whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what is alices job title at mckinsey")
  (original "job title of employee alice whose employer is mckinsey")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employer) (string =) en.company.mckinsey) (string job_title)))

  )
)
(example
  (utterance "which student has an end date smaller than the start date of alice")
  (original "student whose end date is smaller than start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "people that are friends with someone that started school after 2004")
  (original "person that is friends with student whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find people who have only 1 relationship status")
  (original "person that has the least number of relationship status")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string min) (string relationship_status)))

  )
)
(example
  (utterance "student whose end date is after end date of student alice")
  (original "student whose end date is larger than end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "when did alice start going to the school that she graduated in 2004")
  (original "start date of student alice whose end date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date) (string =) (date 2004 -1 -1)) (string education_start_date)))

  )
)
(example
  (utterance "people that started working when alice stopped school or before")
  (original "employee whose start date is at most end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "locate the gender of students who have an end date of 2004 or later")
  (original "gender that is gender of student whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "relationship status of student whose field of study is not computer science")
  (original "relationship status that is relationship status of student whose field of study is not computer science")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string !=) en.field.computer_science)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what is the gender of an employee with an end date later than 2004")
  (original "gender that is gender of employee whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find friends of people who quit their job before 2004")
  (original "person that employee whose end date is smaller than 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "who is 180 cm tall and has the same birthplace as alice")
  (original "person whose height is 180 cm and that is birthplace of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) en.person.alice))

  )
)
(example
  (utterance "find employees whom have an end date that is equal or greater to the birthday of alice")
  (original "employee whose end date is at least birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "people that are friends with someone that started working before 2004")
  (original "person that is friends with employee whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find relationship statuses for employees with a start date later than 2004")
  (original "relationship status that is relationship status of employee whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "students who started on alices birthday")
  (original "student whose start date is birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what students have start dates later than 2004")
  (original "student whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "student whose start date is not 2004")
  (original "student whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find the students of the same gender who were born in at least 2004 ")
  (original "gender that is gender of student whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what city is the birthplace of an employee whose end date is not in 2004")
  (original "city that is birthplace of employee whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find employees with the latest end dates")
  (original "employee that has the largest end date")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "people that have less than two genders listed")
  (original "person that has less than two gender")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string <) (number 2)))

  )
)
(example
  (utterance "people that are currently online and friends with alice")
  (original "person that is logged in and that is friends with alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in)) (string friend) (string =) en.person.alice))

  )
)
(example
  (utterance "someone with over two friends")
  (original "person that is friends with more than two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string >) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "find student whose last day matches alices start date")
  (original "student whose end date is start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "people that have two or more relationship stutuses")
  (original "person that has at least two relationship status")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string >=) (number 2)))

  )
)
(example
  (utterance "whats the relationship status of the new student starting before 2004")
  (original "relationship status that is relationship status of student whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "a friend of an employee that isnt a software engineer")
  (original "person that is friends with employee whose job title is not software engineer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string !=) en.job_title.software_engineer)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "who was born in 2004 and is friends with alice")
  (original "person whose birthdate is 2004 and that is friends with alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1)) (string friend) (string =) en.person.alice))

  )
)
(example
  (utterance "people who are friends with someone who started working before 2005")
  (original "person that employee whose start date is at most 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "people that are friends with someone that did not stop working in 2004")
  (original "person that is friends with employee whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find employees whose end date is less than 2004 or 2010")
  (original "employee whose end date is smaller than 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "who started school when alice graduated in 2004")
  (original "start date of student alice whose end date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date) (string =) (date 2004 -1 -1)) (string education_start_date)))

  )
)
(example
  (utterance "find the friends of people who joined their studies after 2004")
  (original "person that student whose start date is at least 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "sex of students that started school in 2004 or earlier")
  (original "gender that is gender of student whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "who was born before alices last day of school")
  (original "person whose birthdate is smaller than end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date)))))

  )
)
(example
  (utterance "find student with last day on 2004 or earlier")
  (original "student whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "who is the employee with the most job titles")
  (original "employee that has the most number of job title")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string max) (string job_title))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find me all relationship statuses for employees whose start date is no later than 2004")
  (original "relationship status that is relationship status of employee whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "any friend of alice that is logged in")
  (original "person that is friends with alice and that is logged in")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) en.person.alice) (string logged_in)))

  )
)
(example
  (utterance "find the relationship status of people born in 2004")
  (original "relationship status that is relationship status of person whose birthdate is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1))))

  )
)
(example
  (utterance "find employees with one or two job titles")
  (original "employee that has at most two job title")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string job_title) (string <=) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what is the gender of working people that dont work for mckinsey")
  (original "gender that is gender of employee whose employer is not mckinsey")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employer) (string !=) en.company.mckinsey)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "student who ended last")
  (original "student that has the largest end date")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "person who is older then alice")
  (original "person whose birthdate is at most start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date)))))

  )
)
(example
  (utterance "find me the gender of employees starting before 2004")
  (original "gender that is gender of employee whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find people with a height of 180 cm and their relationship status")
  (original "person whose relationship status is person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "which students start date is closest to alices birthday")
  (original "student whose start date is at most birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what employee has the longest employment")
  (original "employee that has the largest start date")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "employees whose end date is the same as alices")
  (original "employee whose end date is end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "people who have friends who left their jobs in or after 2004")
  (original "person that is friends with employee whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "person who is friends with student that did not graduate in 2004")
  (original "person that student whose end date is not 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find friends of people who quit work in 2004 at the latest")
  (original "person that employee whose end date is at most 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "who is 180 cm tall and is studying computer science")
  (original "person whose height is 180 cm and whose field of study is computer science")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string field_of_study) (string =) en.field.computer_science))

  )
)
(example
  (utterance "persons born before start date of alice")
  (original "person whose birthdate is smaller than start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date)))))

  )
)
(example
  (utterance "what employee has the same end date as alice")
  (original "employee whose end date is end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find employee whose last day was before 2010")
  (original "employee whose end date is smaller than 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "who has a smaller end date than 2004")
  (original "student whose end date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "gender of student who was a smaller date then 2004")
  (original "gender that is gender of student whose end date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "employees who started on the same date as alice")
  (original "employee whose start date is start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "who is alice friends with that is logged in")
  (original "person that alice is friends with and that is logged in")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice) (string logged_in)))

  )
)
(example
  (utterance "who has friends that are students and whos end date is 2004")
  (original "person that student whose end date is at most 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "students finishing when alice starts")
  (original "student whose end date is start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find me all people with less than two birthplaces")
  (original "person that has less than two birthplace")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string <) (number 2)))

  )
)
(example
  (utterance "what employee started their job on the same day as alice")
  (original "employee whose start date is start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "a worker whose company isnt mckinsey")
  (original "employee whose employer is not mckinsey")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employer) (string !=) en.company.mckinsey)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "people that stopped working after alice stopped school")
  (original "employee whose end date is larger than end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "student whose end date is not before end date of student alice")
  (original "student whose end date is at least end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which people were born in new york")
  (original "person whose birthplace is new york and whose birthplace is new york")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) en.city.new_york) (string birthplace) (string =) en.city.new_york))

  )
)
(example
  (utterance "find students whose start date is less than 2004")
  (original "student whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "students who will have their last day before alice quits her job")
  (original "student whose end date is smaller than end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find people at least as tall as alice")
  (original "person whose height is at least height of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string height)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string height)))))

  )
)
(example
  (utterance "who started with alice")
  (original "employee whose start date is start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "where were the working people that do not work for mckinsey born")
  (original "city that is birthplace of employee whose employer is not mckinsey")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employer) (string !=) en.company.mckinsey)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find students with last day before alices")
  (original "student whose end date is smaller than end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "people that have a friend born in 2004")
  (original "person that is friends with person whose birthdate is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1))))

  )
)
(example
  (utterance "employee whose start date is after end date of student alice")
  (original "employee whose start date is larger than end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find friends of people who didnt lose employment in 2004")
  (original "person that employee whose end date is not 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "city of birth for all non software engineers")
  (original "city that is birthplace of employee whose job title is not software engineer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string !=) en.job_title.software_engineer)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what is the number of the city")
  (original "number of city")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call .size (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type))))

  )
)
(example
  (utterance "students who started before 2004 or 2010")
  (original "employee whose start date is smaller than 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what employees have a start date later than 2004 and who are they friends with")
  (original "person that employee whose start date is larger than 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find a student who started no later than 2004")
  (original "student whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "employees who joined after  alice joined")
  (original "employee whose start date is at least start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "who has different relationship status to alice")
  (original "relationship status that is not relationship status of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string !=) en.person.alice))

  )
)
(example
  (utterance "students who finish after alice")
  (original "student whose end date is larger than end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "a student that ends before alice")
  (original "student whose end date is smaller than end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "who has the fewest friends")
  (original "person that the least number of person is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "find people whom are friends with employees who have an end date that is not 2004")
  (original "person that is friends with employee whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "employees who share the same job titles as alice")
  (original "employee whose job title is job title of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string job_title)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what is the relationship status of two people with the same status")
  (original "relationship status that is relationship status of two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "students who left before alice started")
  (original "student whose end date is smaller than start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "people who were born in 2004 or earlier")
  (original "person whose birthdate is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1))))

  )
)
(example
  (utterance "who is friends with someone who didnt stop working in 2004")
  (original "person that employee whose end date is not 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "employee with the largest number of employers")
  (original "employee that has the most number of employer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string max) (string employer))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find me the student who graduated on alices birthdate")
  (original "student whose end date is birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find employees with an end date after 2004")
  (original "employee whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what student started last")
  (original "student that has the largest start date")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "whats the gender of alice")
  (original "gender that is gender of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) en.person.alice))

  )
)
(example
  (utterance "name a person that alice is friends with")
  (original "person that is friends with alice and that alice is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) en.person.alice) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice))

  )
)
(example
  (utterance "relationship status of employees not finishing in 2004")
  (original "relationship status that is relationship status of employee whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "a student not taking computer science")
  (original "student whose field of study is not computer science")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string !=) en.field.computer_science)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find me the gender of students who did not begin school in 2004")
  (original "gender that is gender of student whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what student started the day alice quit")
  (original "student whose start date is end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "relationship status of employees who did not start in 2004")
  (original "relationship status that is relationship status of employee whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "where were the people that started working in any year but 2004 born")
  (original "city that is birthplace of employee whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what employees started after 2004")
  (original "employee whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what person that is online is friends with alice")
  (original "person that is friends with alice and that is logged in")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) en.person.alice) (string logged_in)))

  )
)
(example
  (utterance "which company employees the person who is 180 cm tall")
  (original "company that is employer of person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.company) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employer)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "what is employees gender who started in 2004 or earlier")
  (original "gender that is gender of employee whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "a friend of a single person")
  (original "person that person whose relationship status is single is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) en.relationship_status.single)))

  )
)
(example
  (utterance "who is 180 cm tall and has the same birthdate as alice")
  (original "person whose height is 180 cm and that is birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthdate)) (string =) en.person.alice))

  )
)
(example
  (utterance "employees who quit before alices birthday")
  (original "employee whose end date is at most birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "males who were born in new york")
  (original "person whose birthplace is new york and whose gender is male")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) en.city.new_york) (string gender) (string =) en.gender.male))

  )
)
(example
  (utterance "relationship status of employee whose end date is after 2004")
  (original "relationship status that is relationship status of employee whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "student with less than two universities")
  (original "student that has less than two university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string university) (string <) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what is the relationship status of alice and bob")
  (original "relationship status that is relationship status of alice or bob")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.person.alice en.person.bob)))

  )
)
(example
  (utterance "what did alice study at brown university")
  (original "field of study of student alice whose university is brown university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string university) (string =) en.university.brown) (string field_of_study)))

  )
)
(example
  (utterance "which people are 180 cm tall and have a birthdate of 2004")
  (original "person whose birthdate is 2004 and whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1)) (string height) (string =) (number 180 en.cm)))

  )
)
(example
  (utterance "who is friends with a person who didnt stop working in 2004")
  (original "person that employee whose end date is at least 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "where are people born who are 180 cm in height")
  (original "person whose birthplace is person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "find the relationship status of employees with an end date earlier than 2004")
  (original "relationship status that is relationship status of employee whose end date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what is the gender")
  (original "male or female")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.gender.male en.gender.female))

  )
)
(example
  (utterance "people that are friends with alice or bob")
  (original "person that is friends with alice or bob")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.person.alice en.person.bob)))

  )
)
(example
  (utterance "genders of employees who arent software engineers")
  (original "gender that is gender of employee whose job title is not software engineer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string !=) en.job_title.software_engineer)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find single friends of alice")
  (original "person that is friends with alice and whose relationship status is single")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) en.person.alice) (string relationship_status) (string =) en.relationship_status.single))

  )
)
(example
  (utterance "what students have a start date that is no greater than employee alice")
  (original "student whose start date is at most start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what is the gender of employees whose last day was no later than 2004")
  (original "gender that is gender of employee whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "employees with the fewest job titles")
  (original "employee that has the least number of job title")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string min) (string job_title))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "shortest person")
  (original "person that has the smallest height")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string height))))

  )
)
(example
  (utterance "people shorter than 200 cm")
  (original "person whose height is at most 180 cm or 200 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string height)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (number 180 en.cm) (number 200 en.cm)))))

  )
)
(example
  (utterance "person who has been in less then 3 relationships")
  (original "person that has at most two relationship status")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string <=) (number 2)))

  )
)
(example
  (utterance "find people who are 180 cm tall with last day in 2004")
  (original "person whose height is 180 cm and whose end date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string education_end_date) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "is alice going to brown university")
  (original "university of student alice whose university is brown university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string university) (string =) en.university.brown) (string university)))

  )
)
(example
  (utterance "who are some of alices friends connections")
  (original "person that person that alice is friends with is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice)))

  )
)
(example
  (utterance "people who are single")
  (original "person whose relationship status is single and whose relationship status is single")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) en.relationship_status.single) (string relationship_status) (string =) en.relationship_status.single))

  )
)
(example
  (utterance "birthplace of students born before 2004")
  (original "city that is birthplace of student whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what city is the birthplace of less than two people")
  (original "city that is birthplace of less than two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string <) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "what is the job title of the person who is 180 cm tall")
  (original "job title that is job title of person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.job_title) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string job_title)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "find people with birth date not in 2004")
  (original "person whose birthdate is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string !=) (date 2004 -1 -1)))

  )
)
(example
  (utterance "which students have larger end dates than alice")
  (original "student whose end date is larger than end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what people are friends of employees that have a start date before 2004")
  (original "person that is friends with employee whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find people who are 180 cm tall and logged in")
  (original "person whose height is 180 cm and that is logged in")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string logged_in)))

  )
)
(example
  (utterance "students that are starting before alices last day")
  (original "student whose start date is smaller than end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which working people have less than two job titles")
  (original "employee that has less than two job title")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string job_title) (string <) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find all people that have two genders")
  (original "person that has two gender")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) (number 2)))

  )
)
(example
  (utterance "what people have the same birthdate as those whose height is 180 cm")
  (original "person whose birthdate is person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "birthplace of employees who joined before 2005")
  (original "city that is birthplace of employee whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "all 180 cm tall people who quit in 2004")
  (original "person whose height is 180 cm and whose end date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string education_end_date) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "what gender is the student who started in 2004")
  (original "gender that is gender of student whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "which date did student alice left")
  (original "end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date)))

  )
)
(example
  (utterance "a person with a friend whos not a computer science major")
  (original "person that is friends with student whose field of study is not computer science")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string !=) en.field.computer_science)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "people with two or more birthplaces")
  (original "person that has at least two birthplace")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string >=) (number 2)))

  )
)
(example
  (utterance "find employees whose end date is the same as the start date for student alice")
  (original "employee whose end date is start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what is the students relationship status who didnt start in 2004")
  (original "relationship status that is relationship status of student whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "people who stopped school on or after the date alice started school")
  (original "student whose end date is at least start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "an employee starting when or before alice ends")
  (original "employee whose start date is at most end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "which employee has a start date on alices birthdate")
  (original "employee whose start date is birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find all people that are currently online")
  (original "person that is logged in and that is logged in")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in)) (string logged_in)))

  )
)
(example
  (utterance "what employee ended at least on alices birthdate")
  (original "employee whose end date is at least birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "students who go to the same university as alice")
  (original "student whose university is university of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string university) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string university)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what students have a start date that is no later than the end date of employee alice")
  (original "student whose start date is at most end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what is the relationship status of no more than two people")
  (original "relationship status that is relationship status of at most two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string <=) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "find students whos end date is equal to alices birthday")
  (original "student whose end date is birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "where were the people that stopped working before 2004 born")
  (original "city that is birthplace of employee whose end date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what person is friends with the employee who is not a software engineer")
  (original "person that employee whose job title is not software engineer is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string !=) en.job_title.software_engineer)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what employees started on or before alices start date")
  (original "employee whose start date is at most start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find all people who is friend with people born in 2004")
  (original "person that is friends with person whose birthdate is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1))))

  )
)
(example
  (utterance "when was alice born")
  (original "birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate)))

  )
)
(example
  (utterance "what employees have two or fewer job titles")
  (original "employee that has at most two job title")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string job_title) (string <=) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "whats the relationship status of employee who quit their job after 2004")
  (original "relationship status that is relationship status of employee whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what employees started work after 2004")
  (original "employee whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "name the person with a height of 180 cm who is logged in")
  (original "person that is logged in and whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in)) (string height) (string =) (number 180 en.cm)))

  )
)
(example
  (utterance "find employees called software engineers who are 180 cm tall")
  (original "person whose height is 180 cm and whose job title is software engineer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string job_title) (string =) en.job_title.software_engineer))

  )
)
(example
  (utterance "friend of student whose end date is not after 2004")
  (original "person that is friends with student whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what is the gender of the single people")
  (original "gender that is gender of person whose relationship status is single")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) en.relationship_status.single)))

  )
)
(example
  (utterance "who graduated before 2004")
  (original "student whose end date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "people that started school after alice stopped school")
  (original "student whose start date is larger than end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find people with a relationship status that more than two people have")
  (original "relationship status that is relationship status of more than two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string >) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "birth places of employees other than software engineers")
  (original "city that is birthplace of employee whose job title is not software engineer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string !=) en.job_title.software_engineer)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "people that have two or less friends")
  (original "person that at most two person is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string <=) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "whats the gender of the students who are not studying computer science")
  (original "gender that is gender of student whose field of study is not computer science")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string !=) en.field.computer_science)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "who is not 180cm tall")
  (original "person whose height is not 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string !=) (number 180 en.cm)))

  )
)
(example
  (utterance "what is the relationship status of employees starting in 2004 or later")
  (original "relationship status that is relationship status of employee whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "presently logged in persons whose relationship status is single")
  (original "person that is logged in and whose relationship status is single")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in)) (string relationship_status) (string =) en.relationship_status.single))

  )
)
(example
  (utterance "when did alice quit working for mckinsey")
  (original "end date of employee alice whose employer is mckinsey")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employer) (string =) en.company.mckinsey) (string employment_end_date)))

  )
)
(example
  (utterance "name the single persons friends")
  (original "person that person whose relationship status is single is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) en.relationship_status.single)))

  )
)
(example
  (utterance "find birthplace of males")
  (original "city that is birthplace of person whose gender is male")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) en.gender.male)))

  )
)
(example
  (utterance "who goes to brown university or ucla")
  (original "student whose university is brown university or ucla")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string university) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.university.brown en.university.ucla))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "people who completed their studies before alice joined")
  (original "student whose end date is at most start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what students have an end date that is no later than 2004")
  (original "student whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find people who are friends with no more than two people")
  (original "person that is friends with more than two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string >) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "find friends who are 180 cm tall like alice")
  (original "person whose height is 180 cm and that is height of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string height)) (string =) en.person.alice))

  )
)
(example
  (utterance "show me all employees leaving before alices last day")
  (original "employee whose end date is smaller than end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "people of the least common gender")
  (original "gender that is gender of the least number of person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "find someone with two or less birthplaces")
  (original "person that has at most two birthplace")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string <=) (number 2)))

  )
)
(example
  (utterance "people who have friends who did not begin working in 2004")
  (original "person that is friends with employee whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what students have an end date that is no earlier than the start date of alice")
  (original "student whose end date is at least start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "the birthplace of a student starting before or during 2004")
  (original "city that is birthplace of student whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "name a male who is friends with alice")
  (original "person whose gender is male and that is friends with alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) en.gender.male) (string friend) (string =) en.person.alice))

  )
)
(example
  (utterance "person who has two or more friends")
  (original "person that is friends with at least two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string >=) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "people that started work in or before 2004 or in or before 2010")
  (original "employee whose start date is at most 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find employees who started in 2004 or before")
  (original "employee whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what is the birth city of a student who didnt start in 2004")
  (original "city that is birthplace of student whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find birth cities for students who have a start date no later than 2004")
  (original "city that is birthplace of student whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "name a friend of the person who is 180 cm tall")
  (original "person that person whose height is 180 cm is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "find employees whom have a end date that is no later than the start date of employee alice")
  (original "employee whose end date is at most start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "student who joined after 2004")
  (original "student whose end date is larger than 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which employee quit before alice")
  (original "employee whose end date is at least birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "an employee starting before alice was born")
  (original "employee whose start date is smaller than birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "who is born in new york or beijing")
  (original "person whose birthplace is new york or beijing")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.city.new_york en.city.bejing)))

  )
)
(example
  (utterance "what is the gender of people attending any university but brown")
  (original "gender that is gender of student whose university is not brown university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string university) (string !=) en.university.brown)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "which employees last day was the same day as alices graduation day")
  (original "employee whose end date is end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "who has two different relationship statuses")
  (original "person that has two relationship status")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) (number 2)))

  )
)
(example
  (utterance "where were the people that started school in or before 2004 born")
  (original "city that is birthplace of student whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "who did alice work for when she quit her job in 2004")
  (original "employer of employee alice whose end date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date) (string =) (date 2004 -1 -1)) (string employer)))

  )
)
(example
  (utterance "what relationship status is claimed by more than two people")
  (original "relationship status that is relationship status of more than two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string >) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "people who are at least as tall as alice")
  (original "person whose height is at least height of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string height)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string height)))))

  )
)
(example
  (utterance "what is the relationship status of those two people")
  (original "relationship status that is relationship status of two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "find people with birth date same as employment end date of alice")
  (original "person whose birthdate is end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))

  )
)
(example
  (utterance "find friends of people who quit their jobs after 2004")
  (original "person that employee whose end date is larger than 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "student who started after alice")
  (original "student whose start date is smaller than end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "a friend of a noncomputer science student")
  (original "person that student whose field of study is not computer science is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string !=) en.field.computer_science)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "who has friends who are 180 cm tall")
  (original "person that person whose height is 180 cm is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "what is relationship status of students starting in 2004 and after")
  (original "relationship status that is relationship status of student whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find me all the people that are 180 cm tall and were born in the same place as alice")
  (original "person whose height is 180 cm and that is birthplace of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) en.person.alice))

  )
)
(example
  (utterance "which city were alices friends born in")
  (original "city that is birthplace of person that alice is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice)))

  )
)
(example
  (utterance "who is friends with students that have an end date of 2004")
  (original "person that student whose end date is at least 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "where was alice not born")
  (original "city that is not birthplace of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string !=) en.person.alice))

  )
)
(example
  (utterance "which student started after 2004")
  (original "student whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what students started after or at the same time as alice")
  (original "student whose start date is at least start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which students ending date is greater than 2010")
  (original "student whose end date is larger than 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "employee left the day alice started")
  (original "employee whose end date is start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "alices friend born in new york")
  (original "person that alice is friends with and whose birthplace is new york")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice) (string birthplace) (string =) en.city.new_york))

  )
)
(example
  (utterance "what students started between 2004 and 2010")
  (original "student whose start date is at least 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what person is online")
  (original "person that is logged in and that is logged in")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in)) (string logged_in)))

  )
)
(example
  (utterance "which student left first")
  (original "student that has the smallest end date")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "where were people that started work before 2004 born")
  (original "city that is birthplace of employee whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what gender are people that started school in or after 2004")
  (original "gender that is gender of student whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what is the the relationship status of the employee who started in 2004")
  (original "relationship status that is relationship status of employee whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what person has two friends")
  (original "person that two person is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "friends of students starting in or after 2004")
  (original "person that is friends with student whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "birthplace of students who are not studying at brown university")
  (original "city that is birthplace of student whose university is not brown university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string university) (string !=) en.university.brown)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "people who are friends with alice and male")
  (original "person whose gender is male and that alice is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) en.gender.male) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice))

  )
)
(example
  (utterance "what city were most people born")
  (original "city that is birthplace of the most number of person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "employees with the same job title as alice")
  (original "employee whose job title is job title of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string job_title)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "employee whose job title is not software engineer")
  (original "employee whose job title is not software engineer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string !=) en.job_title.software_engineer)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what was alices job title while working for mckinsey")
  (original "job title of employee alice whose employer is mckinsey")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employer) (string =) en.company.mckinsey) (string job_title)))

  )
)
(example
  (utterance "find students whose last day is the same or later than alices")
  (original "student whose end date is at least start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what is alices termination date")
  (original "end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date)))

  )
)
(example
  (utterance "what city were less than two people born in")
  (original "city that is birthplace of less than two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string <) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "what job did alice leave in 2004")
  (original "job title of employee alice whose end date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date) (string =) (date 2004 -1 -1)) (string job_title)))

  )
)
(example
  (utterance "person with same birthdate of person with 180 cm height")
  (original "person whose birthdate is person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "find friends who are not in computer science")
  (original "person that student whose field of study is not computer science is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string !=) en.field.computer_science)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what people are friends with students who have a start date no later than 2004")
  (original "person that is friends with student whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "person alices height or taller")
  (original "person whose height is at least height of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string height)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string height)))))

  )
)
(example
  (utterance "which worker left on or before the day student alice started")
  (original "employee whose end date is at most end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "who is born on or after start date of employee alice")
  (original "person whose birthdate is at least start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date)))))

  )
)
(example
  (utterance "birth city of no more than two people")
  (original "city that is birthplace of at most two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string <=) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "find all people with relationship status that is the same as the person that is 180 cm tall")
  (original "person whose relationship status is person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "employees who finish when alice starts")
  (original "employee whose end date is start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "one student who started on the same day as employee alice")
  (original "student whose start date is start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find me all people who are 180 cm tall and currently online")
  (original "person whose height is 180 cm and that is logged in")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string logged_in)))

  )
)
(example
  (utterance "who is the friend of the employee whose start date is at least 2005")
  (original "person that is friends with employee whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what is the employees relationship status who did not end in 2004")
  (original "relationship status that is relationship status of employee whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "which employees are not employed by mckinsey")
  (original "employee whose employer is not mckinsey")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employer) (string !=) en.company.mckinsey)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "either 2004 or 2010")
  (original "2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1)))

  )
)
(example
  (utterance "find employees that have the greatest amount of employers")
  (original "employee that has the most number of employer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string max) (string employer))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "people who have less than two friends")
  (original "person that less than two person is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string <) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "people who completed studies with or before alice")
  (original "student whose end date is at most end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "name a friend of the employee who started working no later than 2004")
  (original "person that employee whose start date is at most 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "which student started after alice was born")
  (original "student whose start date is larger than birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find student with the latest starting date")
  (original "student that has the largest start date")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "person born in new york in 2004")
  (original "person whose birthdate is 2004 and whose birthplace is new york")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1)) (string birthplace) (string =) en.city.new_york))

  )
)
(example
  (utterance "who is a software engineer that is 180 cm")
  (original "person whose height is 180 cm and whose job title is software engineer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string job_title) (string =) en.job_title.software_engineer))

  )
)
(example
  (utterance "people who arent alices friend")
  (original "person that alice not is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string !=) en.person.alice))

  )
)
(example
  (utterance "students who graduated before alice was born")
  (original "student whose end date is smaller than birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what student began before student alice did")
  (original "student whose start date is smaller than start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "person that has an employee friend who starts to work by 2004")
  (original "person that is friends with employee whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what gender is the employee whose end date is not 2004")
  (original "gender that is gender of employee whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what is the relationship status of an employee who has worked since 2004")
  (original "relationship status that is relationship status of employee whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "who is alice friends with who is 180 cm tall")
  (original "person that alice is friends with and whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice) (string height) (string =) (number 180 en.cm)))

  )
)
(example
  (utterance "friends of people who completed their studies after 2003")
  (original "person that student whose end date is at least 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find me the student who started on the same day as alices departure")
  (original "student whose start date is at most end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "city that most number of persons born")
  (original "city that is birthplace of the most number of person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "student whose field of study is not computer science")
  (original "student whose field of study is not computer science")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string !=) en.field.computer_science)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find me all people that were born in new york that are currently online")
  (original "person whose birthplace is new york and that is logged in")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) en.city.new_york) (string logged_in)))

  )
)
(example
  (utterance "what is the relationship status of people that started working after 2004")
  (original "relationship status that is relationship status of employee whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "who are the students studying computer science or history")
  (original "student whose field of study is computer science or history")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.field.computer_science en.field.history))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "student who graduated before alice started her job")
  (original "student whose end date is at least start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find a person with less than two friends")
  (original "person that less than two person is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string <) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "how many companies are there")
  (original "number of company")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call .size (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.company) (string !type))))

  )
)
(example
  (utterance "who are the employees who quit before 2004")
  (original "employee whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "whats the relationship status of students that did not study computer science")
  (original "relationship status that is relationship status of student whose field of study is not computer science")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string !=) en.field.computer_science)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "people who are friends of bob or alice")
  (original "person that alice or bob is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.person.alice en.person.bob)))

  )
)
(example
  (utterance "people that stopped school when alice was born or before")
  (original "student whose end date is at most birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what is the gender of people studying something other than computer science")
  (original "gender that is gender of student whose field of study is not computer science")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string !=) en.field.computer_science)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "which employees last day was in 2004 or 2010")
  (original "employee whose end date is 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "birthplaces of employees not finishing in 2004")
  (original "city that is birthplace of employee whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "people that stopped working when alice stopped school or after")
  (original "employee whose end date is at least end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what are the relationship statuses of people born in new york")
  (original "relationship status that is relationship status of person whose birthplace is new york")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) en.city.new_york)))

  )
)
(example
  (utterance "student who finishes before alice")
  (original "student whose end date is smaller than end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find people that are friends with employees whose start date is later than 2004")
  (original "person that is friends with employee whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "who is friends with alice and is 180 cm tall")
  (original "person that alice is friends with and whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice) (string height) (string =) (number 180 en.cm)))

  )
)
(example
  (utterance "what is the gender of students with a start date that is not the same as 2004")
  (original "gender that is gender of student whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find employees with one employer")
  (original "employee that has less than two employer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string employer) (string <) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "alice whose field of study is computer science ended on what date")
  (original "end date of student alice whose field of study is computer science")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string field_of_study) (string =) en.field.computer_science) (string education_end_date)))

  )
)
(example
  (utterance "gender of an employee that ends during or before 2004")
  (original "gender that is gender of employee whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what employees have a job title other than software engineer")
  (original "employee whose job title is not software engineer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string !=) en.job_title.software_engineer)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find employees who have an end date the same as alice")
  (original "employee whose end date is end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "relationship status of at least two people")
  (original "relationship status that is relationship status of at least two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string >=) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "what person was born on the last day of alices employment")
  (original "person whose birthdate is end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))

  )
)
(example
  (utterance "birthplace of employees who started in or after 2004")
  (original "city that is birthplace of employee whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "people that started working before alice did")
  (original "employee whose start date is smaller than start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what is the gender of students who graduate after 2004")
  (original "gender that is gender of student whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "who quit at the same time or after alice did")
  (original "student whose end date is at least end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what is the gender of alices friend")
  (original "gender that is gender of person that alice is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice)))

  )
)
(example
  (utterance "find people born in new york or beijing")
  (original "person whose birthplace is new york or beijing")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.city.new_york en.city.bejing)))

  )
)
(example
  (utterance "relationship status of student whose end date is before 2004")
  (original "relationship status that is relationship status of student whose end date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what university will alice finish in 2004")
  (original "university of student alice whose end date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date) (string =) (date 2004 -1 -1)) (string university)))

  )
)
(example
  (utterance "alices friend who is 180 cm tall")
  (original "person that alice is friends with and whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice) (string height) (string =) (number 180 en.cm)))

  )
)
(example
  (utterance "people who started working before alice quit her job")
  (original "employee whose start date is smaller than end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "students who graduated after alices first work day")
  (original "student whose end date is larger than start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what is relationship status of students with end dates other than 2004")
  (original "relationship status that is relationship status of student whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "birth city of employee whose start date is after 2004")
  (original "city that is birthplace of employee whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "student whose start date is not after start date of employee alice")
  (original "student whose start date is at most start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what student hast the earliest start date")
  (original "student that has the smallest start date")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "birthplaces of people who studied in fields other than computer science")
  (original "city that is birthplace of student whose field of study is not computer science")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string !=) en.field.computer_science)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what is the birth city of students whose end date is less than 2004")
  (original "city that is birthplace of student whose end date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find birthplaces of students not attending brown university")
  (original "city that is birthplace of student whose university is not brown university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string university) (string !=) en.university.brown)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "people who are born the same day alice started her job")
  (original "person whose birthdate is start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))

  )
)
(example
  (utterance "what is the birthplace of the employee who left after 2004")
  (original "city that is birthplace of employee whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "people with only two friends")
  (original "person that two person is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "find the student who graduated on alices birthday")
  (original "student whose end date is birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "any friend of anyone born in new york")
  (original "person that is friends with person whose birthplace is new york")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) en.city.new_york)))

  )
)
(example
  (utterance "when did alice start working for mckinsey")
  (original "start date of employee alice whose employer is mckinsey")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employer) (string =) en.company.mckinsey) (string employment_start_date)))

  )
)
(example
  (utterance "relationship statuses of students that dont go to brown university")
  (original "relationship status that is relationship status of student whose university is not brown university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string university) (string !=) en.university.brown)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "how many employees share alices job title")
  (original "employee whose job title is job title of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string job_title)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "who was born on alices first day of school")
  (original "person whose birthdate is start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))

  )
)
(example
  (utterance "find friends of students with start dates other than 2004")
  (original "person that student whose start date is not 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what person is friends with the person logged in")
  (original "person that is friends with person that is logged in")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in))))

  )
)
(example
  (utterance "what person was not born in new york")
  (original "person whose birthplace is not new york")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string !=) en.city.new_york))

  )
)
(example
  (utterance "find everyone who is either single or married")
  (original "person whose relationship status is single or married")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.relationship_status.single en.relationship_status.married)))

  )
)
(example
  (utterance "find people who have a birthplace of new york and their friends")
  (original "person that person whose birthplace is new york is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) en.city.new_york)))

  )
)
(example
  (utterance "who are alices male friends")
  (original "person whose gender is male and that alice is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) en.gender.male) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice))

  )
)
(example
  (utterance "employee with smallest job history")
  (original "employee that has the least number of employer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string min) (string employer))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "employee who has maximum 2 job titles")
  (original "employee that has at most two job title")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string job_title) (string <=) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what is the relationship status of employees who quit before 2004")
  (original "relationship status that is relationship status of employee whose end date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "people that stopped school when alice stopped working or after")
  (original "student whose end date is at least end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what employee has an employer that is either mckinsey or google")
  (original "employee whose employer is mckinsey or google")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employer) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.company.mckinsey en.company.google))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "which employees last day was not n 2004")
  (original "employee whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "who is alice friend born in new york")
  (original "person that is friends with alice and whose birthplace is new york")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) en.person.alice) (string birthplace) (string =) en.city.new_york))

  )
)
(example
  (utterance "people who joined their studies after alice quit her job")
  (original "student whose start date is larger than end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which student started earliest")
  (original "student that has the smallest start date")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "people who are 180 cm tall and left their job in 2004")
  (original "person whose height is 180 cm and whose end date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string education_end_date) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "student whose start date is not before start date of student alice")
  (original "student whose start date is at least start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which student does not attend brown university")
  (original "student whose university is not brown university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string university) (string !=) en.university.brown)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which employee ended no greater than alices")
  (original "employee whose end date is larger than end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "an employee ending before alice was born")
  (original "employee whose end date is smaller than birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what person is 200 cm or shorter")
  (original "person whose height is at most 180 cm or 200 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string height)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (number 180 en.cm) (number 200 en.cm)))))

  )
)
(example
  (utterance "find students who have a start date equal to student alices end date")
  (original "student whose start date is end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "either number of field")
  (original "number of field")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call .size (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.field) (string !type))))

  )
)
(example
  (utterance "birthplace of students who start before 2004")
  (original "city that is birthplace of student whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "birth city of all students who started earlier than 2004")
  (original "city that is birthplace of student whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "employees who are software engineers or program managers")
  (original "employee whose job title is software engineer or program manager")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.job_title.software_engineer en.job_title.program_manager))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "people that started school after alice stopped working")
  (original "student whose start date is larger than end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "who employees alice as a software engineer")
  (original "employer of employee alice whose job title is software engineer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string job_title) (string =) en.job_title.software_engineer) (string employer)))

  )
)
(example
  (utterance "find students that have the latest start date")
  (original "student that has the largest start date")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find students who have a start date the same as employee alice")
  (original "student whose start date is start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "relationship status of alices friends")
  (original "relationship status that is relationship status of person that alice is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice)))

  )
)
(example
  (utterance "students who ended school the day alice started working")
  (original "student whose end date is start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "who is friends with the employee who began later than 2004")
  (original "person that employee whose start date is larger than 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what employee has a start date later than the end date of alice")
  (original "employee whose start date is larger than end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "people who are friends with students not attending brown university")
  (original "person that is friends with student whose university is not brown university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string university) (string !=) en.university.brown)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "birthplaces of people joined studies before 2004")
  (original "city that is birthplace of student whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what employee started on or after alices birthdate")
  (original "employee whose end date is at least birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "which employee started after alice")
  (original "employee whose start date is larger than start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "when did alice start her job")
  (original "start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date)))

  )
)
(example
  (utterance "which people are friends with employees whose last day was before 2004")
  (original "person that is friends with employee whose end date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "who is friends with someone whos birthdate is 2004")
  (original "person that is friends with person whose birthdate is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1))))

  )
)
(example
  (utterance "students finishing with alice")
  (original "student whose end date is end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "employees starting in or after 2004")
  (original "employee whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find students whose university is either brown university or ucla")
  (original "student whose university is brown university or ucla")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string university) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.university.brown en.university.ucla))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "who is the same gender as the 180 cm person")
  (original "gender that is gender of person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "employees starting on alices birthday")
  (original "employee whose start date is birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "either new york or beijing")
  (original "new york or beijing")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.city.new_york en.city.bejing))

  )
)
(example
  (utterance "find employees who have an end date earlier than employee alices start date")
  (original "employee whose end date is smaller than start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "name a person who is 180 cm tall the same height as alice")
  (original "person whose height is 180 cm and that is height of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string height)) (string =) en.person.alice))

  )
)
(example
  (utterance "who is the employee")
  (original "employee whose start date is at most end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what is alices job title")
  (original "job title of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string job_title)))

  )
)
(example
  (utterance "people that started working when alice stopped working or after")
  (original "employee whose start date is at least end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "cities that alice was not born in")
  (original "city that is not birthplace of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string !=) en.person.alice))

  )
)
(example
  (utterance "what employees left when alice started")
  (original "employee whose end date is start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "who was born in the same place as the 180 cm tall person")
  (original "person whose birthplace is person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "what students have start dates greater than those of the end date of student alice")
  (original "student whose start date is larger than end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "connections from friends who dont work at mckinsey")
  (original "person that employee whose employer is not mckinsey is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employer) (string !=) en.company.mckinsey)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "who went to school but did not start in 2004")
  (original "student whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "gender of employee who joined before 2005")
  (original "gender that is gender of employee whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "whose relationship status is not a unique")
  (original "relationship status that is relationship status of at least two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string >=) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "how many relationship status options are there")
  (original "number of relationship status")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call .size (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type))))

  )
)
(example
  (utterance "180 cm tall people worked at mckinsey")
  (original "person whose height is 180 cm and whose employer is mckinsey")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string employer) (string =) en.company.mckinsey))

  )
)
(example
  (utterance "what is the job title of alice who works for mckinsey")
  (original "job title of employee alice whose employer is mckinsey")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employer) (string =) en.company.mckinsey) (string job_title)))

  )
)
(example
  (utterance "find friends of people born in new york")
  (original "person that person whose birthplace is new york is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) en.city.new_york)))

  )
)
(example
  (utterance "a student ending before or during 2004")
  (original "student whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "students starting in 2004 or 2010")
  (original "student whose start date is 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what is the birthplace of employees who did not start in 2004")
  (original "city that is birthplace of employee whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "friends of people with 180 cm height")
  (original "person that person whose height is 180 cm is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "what is birthplace of employees starting in 2004 and after")
  (original "city that is birthplace of employee whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what employees have the least amount of employers")
  (original "employee that has the least number of employer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string min) (string employer))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "the birthplace of someone not employed by mckinsey")
  (original "city that is birthplace of employee whose employer is not mckinsey")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employer) (string !=) en.company.mckinsey)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "people of the most numerous gender")
  (original "gender that is gender of the most number of person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "employee who joined before alice quit the job")
  (original "employee whose start date is at most end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "who has friends whos end date is before 2004")
  (original "person that student whose end date is smaller than 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "which employees started before alices last day")
  (original "employee whose start date is smaller than end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "software engineers whose height is 180cm")
  (original "person whose height is 180 cm and whose job title is software engineer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string job_title) (string =) en.job_title.software_engineer))

  )
)
(example
  (utterance "find the gender of people 180 cm tall")
  (original "person whose gender is person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "persons whose height is 180 cm or more")
  (original "person whose height is smaller than 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string height)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 180 en.cm))))

  )
)
(example
  (utterance "birthplaces of employees who started working in 2004 or earlier")
  (original "city that is birthplace of employee whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "which of my friends connections are online now")
  (original "person that person that is logged in is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in))))

  )
)
(example
  (utterance "find all people who have alices as a mutual friend")
  (original "person that is friends with alice and that alice is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) en.person.alice) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice))

  )
)
(example
  (utterance "gender of employees that started before 2004")
  (original "gender that is gender of employee whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "name a person that is friends with an employee who started no later than 2004")
  (original "person that is friends with employee whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "employee whose end date is after student alices start date")
  (original "employee whose end date is larger than start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "which relationship status is claimed by at least two people")
  (original "relationship status that is relationship status of at least two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string >=) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "which employee ended between 2004 and 2010")
  (original "employee whose end date is at most 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what employee has no more than two employers")
  (original "employee that has at most two employer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string employer) (string <=) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "people that started school when alice did")
  (original "student whose start date is start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "gender of employees not starting in 2004")
  (original "gender that is gender of employee whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "students who began school at the same time as alice")
  (original "student whose start date is start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which students started at the same time the employee alice did")
  (original "student whose start date is start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what cities were the males in my social network born in")
  (original "city that is birthplace of person whose gender is male")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) en.gender.male)))

  )
)
(example
  (utterance "people who joined their job after alice joined her study")
  (original "employee whose start date is larger than start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "who is friends with a person who graduated before 2004")
  (original "person that student whose end date is smaller than 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what city was two people born in")
  (original "city that is birthplace of two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "who is single from new york")
  (original "person whose relationship status is single and whose birthplace is new york")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) en.relationship_status.single) (string birthplace) (string =) en.city.new_york))

  )
)
(example
  (utterance "who is younger than alice")
  (original "person whose birthdate is smaller than birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate)))))

  )
)
(example
  (utterance "people who were born on or after alices first day of work")
  (original "person whose birthdate is at least start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date)))))

  )
)
(example
  (utterance "find people who are friends with empoyees whose last day was not in 2004")
  (original "person that is friends with employee whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "student of only one university")
  (original "student that has less than two university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string university) (string <) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "when did alice start the job that she quit in 2004")
  (original "start date of employee alice whose end date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date) (string =) (date 2004 -1 -1)) (string employment_start_date)))

  )
)
(example
  (utterance "people that stopped working when alice started school or after")
  (original "employee whose end date is at least start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "student whose end date is not after start date of employee alice")
  (original "student whose end date is at most start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "employees who started after alice graduated")
  (original "employee whose start date is larger than end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find me the genders of employees who started after 2004")
  (original "gender that is gender of employee whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "people who have single friends")
  (original "person that is friends with person whose relationship status is single")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) en.relationship_status.single)))

  )
)
(example
  (utterance "which students field of study is computer science of history")
  (original "student whose field of study is computer science or history")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.field.computer_science en.field.history))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what relationship status do two people share")
  (original "relationship status that is relationship status of two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "the gender of a worker who didnt start in 2004")
  (original "gender that is gender of employee whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what is gender of students with last day in 2004 or later")
  (original "gender that is gender of student whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find people with a height of 180 cm and micknsey as their employer")
  (original "person whose height is 180 cm and whose employer is mckinsey")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string employer) (string =) en.company.mckinsey))

  )
)
(example
  (utterance "birth city of employee whose start date is at most 2004")
  (original "city that is birthplace of employee whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what is the relationship status of studetns who started after 2004")
  (original "relationship status that is relationship status of student whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "people who were born on or after the day alice quit her job")
  (original "person whose birthdate is at least end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date)))))

  )
)
(example
  (utterance "one worker who began in 2004 or before")
  (original "employee whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what people have more than two relationship status")
  (original "person that has more than two relationship status")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string >) (number 2)))

  )
)
(example
  (utterance "people that stopped school after alice stopped working")
  (original "student whose end date is larger than end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which university did alice study computer science at")
  (original "university of student alice whose field of study is computer science")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string field_of_study) (string =) en.field.computer_science) (string university)))

  )
)
(example
  (utterance "people that finished school at the same time as or before alice did")
  (original "student whose end date is at least end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "who is alices friend")
  (original "person that is friends with alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) en.person.alice))

  )
)
(example
  (utterance "people that are the same height as or shorter than alice")
  (original "person whose height is at most height of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string height)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string height)))))

  )
)
(example
  (utterance "students who finished by the time alice finished")
  (original "student whose end date is at least end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "student whose start date is after 2004")
  (original "student whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what are the birth cities of students with a start date before 2004")
  (original "city that is birthplace of student whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find me a program manager or a software engineer")
  (original "software engineer or program manager")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.job_title.software_engineer en.job_title.program_manager))

  )
)
(example
  (utterance "find the people with the only one gender")
  (original "person that has the least number of gender")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string min) (string gender)))

  )
)
(example
  (utterance "a friend of a student who started at least 2004")
  (original "person that student whose start date is at least 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find students with one field of study")
  (original "student that has less than two field of study")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string field_of_study) (string <) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "friends of all the people born in 2004")
  (original "person that person whose birthdate is 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1))))

  )
)
(example
  (utterance "what person is friends with an employee who does not work for mckinsey")
  (original "person that is friends with employee whose employer is not mckinsey")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employer) (string !=) en.company.mckinsey)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "people born in 2004")
  (original "person whose birthdate is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "students who finished school by 2004")
  (original "student whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what employee has less than two previous job titles")
  (original "employee that has less than two job title")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string job_title) (string <) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "people with the same relationship status as alice")
  (original "person whose relationship status is relationship status of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string relationship_status))))

  )
)
(example
  (utterance "what people are friends with employees who have an end date later than 2004")
  (original "person that is friends with employee whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "employees who started on or after alices birthdate")
  (original "employee whose start date is at least birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what is the relationship status of a person whose height is 180 cm")
  (original "relationship status that is relationship status of person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "find students who started in 2004 or in 2010")
  (original "student whose start date is 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "people that were born in 2004")
  (original "person whose birthdate is 2004 and whose birthdate is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1)) (string birthdate) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "find me employees who were no longer employed after alices start date")
  (original "employee whose end date is larger than start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "show me which cities the people starting before or after 2004 were born in")
  (original "city that is birthplace of student whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "who is friends with a student who started")
  (original "person that is friends with student whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "birthplace of students not starting in 2004")
  (original "city that is birthplace of student whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "name the students of brown university ")
  (original "student whose university is brown university or ucla")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string university) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.university.brown en.university.ucla))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find people who share the same birthday as alice and are 180 cm tall")
  (original "person whose height is 180 cm and that is birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthdate)) (string =) en.person.alice))

  )
)
(example
  (utterance "what student had an end date that is later than the birthdate of alice")
  (original "student whose end date is at least birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "people that started working before 2004")
  (original "employee whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "people that stopped school after alice started working")
  (original "student whose end date is larger than start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find the gender of a student whom has the end date not equal to 2004")
  (original "gender that is gender of student whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what employee has fewer than two job titles")
  (original "employee that has less than two job title")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string job_title) (string <) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "employee who quit before alice was hired")
  (original "employee whose end date is smaller than end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find employees friends not employed at mckinsey")
  (original "person that is friends with employee whose employer is not mckinsey")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employer) (string !=) en.company.mckinsey)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what students go to the same university as student alice")
  (original "student whose university is university of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string university) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string university)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what person hast the most number of relationship statuses")
  (original "person that has the most number of relationship status")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string max) (string relationship_status)))

  )
)
(example
  (utterance "what city is the students birthplace who ended at least in 2004")
  (original "city that is birthplace of student whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find employees who have a start date other than 2004")
  (original "employee whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "an employee starting after alice was born")
  (original "employee whose end date is larger than birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "employees who quit their job on the same day alice started her job")
  (original "employee whose end date is start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "which employee is not the software engineer")
  (original "employee whose job title is not software engineer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string !=) en.job_title.software_engineer)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "a friend of someone who started before 2004")
  (original "person that employee whose start date is smaller than 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what sex are the students who ended from 2004 on")
  (original "gender that is gender of student whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "people that started working when alice stopped school")
  (original "employee whose start date is end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what employee has a start date that is the same as alice")
  (original "employee whose start date is start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "relationship status of employees whose start date is before 2004")
  (original "relationship status that is relationship status of employee whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "people that have the most friends")
  (original "person that the most number of person is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "what gender are the people that finished school in or before 2004")
  (original "gender that is gender of student whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "when did alice graduate from brown university")
  (original "end date of student alice whose university is brown university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string university) (string =) en.university.brown) (string education_end_date)))

  )
)
(example
  (utterance "what is the birthplace of the student who started in 2004")
  (original "city that is birthplace of student whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find employees with an end date that is less than alices birthday")
  (original "employee whose end date is smaller than birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "person that has the most job titles")
  (original "employee that has the most number of job title")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string max) (string job_title))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "employee who started before start date of employee alice")
  (original "employee whose start date is at most start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find friends of people who were born in new york")
  (original "person that person whose birthplace is new york is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) en.city.new_york)))

  )
)
(example
  (utterance "find the gender that more than two people share")
  (original "gender that is gender of more than two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string >) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "what students have a start date that is no earlier than the end date of alice")
  (original "student whose start date is at least end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which students started on alices birthdate")
  (original "student whose start date is birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which students who strated before alice")
  (original "student whose start date is smaller than end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what employee has a start date that is no earlier than the birthdate of alice")
  (original "employee whose start date is at least birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "relationship status of students finished after 2004")
  (original "relationship status that is relationship status of student whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what gender is the student whose end date is 2004 or later")
  (original "gender that is gender of student whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "who is friends with the person who started working before 2004")
  (original "person that employee whose start date is smaller than 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "anyone has similar relationship as of anyone logged in")
  (original "relationship status that is relationship status of person that is logged in")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in))))

  )
)
(example
  (utterance "who is studying less than two things")
  (original "student that has less than two field of study")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string field_of_study) (string <) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "when did alice start being an employee")
  (original "start date of employee alice whose start date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date) (string =) (date 2004 -1 -1)) (string employment_start_date)))

  )
)
(example
  (utterance "which people have more than two genders")
  (original "person that has more than two gender")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string >) (number 2)))

  )
)
(example
  (utterance "name a person who is 180 cm who is friends with alice")
  (original "person that is friends with alice and whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) en.person.alice) (string height) (string =) (number 180 en.cm)))

  )
)
(example
  (utterance "which students started no earlier than alices last day of work")
  (original "student whose start date is at least end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "student whose field of study is either computer science or history")
  (original "student whose field of study is computer science or history")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.field.computer_science en.field.history))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what is the relationship status of people that finished school after 2004")
  (original "relationship status that is relationship status of student whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "an employee who left on or before the day student alice started")
  (original "employee whose end date is at most start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what relationship statuses are not claimed by alice")
  (original "relationship status that is not relationship status of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string !=) en.person.alice))

  )
)
(example
  (utterance "people who were born in 2004 and are 180 cm tall")
  (original "person whose birthdate is 2004 and whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1)) (string height) (string =) (number 180 en.cm)))

  )
)
(example
  (utterance "employee ending after alice ends")
  (original "employee whose end date is larger than end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find me one of alices male friends")
  (original "person whose gender is male and that is friends with alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) en.gender.male) (string friend) (string =) en.person.alice))

  )
)
(example
  (utterance "who is friends with an employee from at least 2004")
  (original "person that is friends with employee whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what is the relationship of the student who did not attend brown university")
  (original "relationship status that is relationship status of student whose university is not brown university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string university) (string !=) en.university.brown)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "who are the friends of those not employed by mckinsey")
  (original "person that employee whose employer is not mckinsey is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employer) (string !=) en.company.mckinsey)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "fine me friends of people who joined their jobs after 2003")
  (original "person that employee whose start date is at least 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "birthplace of employees starting in or before 2004")
  (original "city that is birthplace of employee whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "gender of employee whose start date is at least 2004")
  (original "gender that is gender of employee whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "who did alice quit working for in 2004")
  (original "employer of employee alice whose end date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date) (string =) (date 2004 -1 -1)) (string employer)))

  )
)
(example
  (utterance "find students with last days before alices first day")
  (original "student whose end date is smaller than start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "who has same relationship status as that of alice")
  (original "person whose relationship status is relationship status of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string relationship_status))))

  )
)
(example
  (utterance "who is 180 cm tall and has an end date of 2004")
  (original "person whose height is 180 cm and whose end date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string education_end_date) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "gender of employee whose job title is not software engineer")
  (original "gender that is gender of employee whose job title is not software engineer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string !=) en.job_title.software_engineer)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find me all people who are not in a relationship with alice")
  (original "relationship status that is not relationship status of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string !=) en.person.alice))

  )
)
(example
  (utterance "people that have a friend that started school in a year other than 2004")
  (original "person that is friends with student whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find everyone born in new york who is 180 cm")
  (original "person whose birthplace is new york and whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) en.city.new_york) (string height) (string =) (number 180 en.cm)))

  )
)
(example
  (utterance "find the employee that was hired closest to the date alice was hired")
  (original "employee whose start date is at most start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find friends of employees who started in 2004 or after")
  (original "person that is friends with employee whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "which students go to the same university as alice")
  (original "student whose university is university of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string university) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string university)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "employees who started after 2004")
  (original "employee whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "who studying computer science is 180 cm tall")
  (original "person whose height is 180 cm and whose field of study is computer science")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string field_of_study) (string =) en.field.computer_science))

  )
)
(example
  (utterance "who is the birthplace of students not majoring in computer science")
  (original "city that is birthplace of student whose field of study is not computer science")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string !=) en.field.computer_science)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "people who are software engineers or project managers")
  (original "software engineer or program manager")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.job_title.software_engineer en.job_title.program_manager))

  )
)
(example
  (utterance "who is friends with the person who stopped working after 2004")
  (original "person that employee whose end date is larger than 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "people that stopped school after alice was born")
  (original "student whose end date is larger than birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which employees quit after 2004 or after 2010")
  (original "employee whose end date is larger than 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what is the gender of the student who started in 2004 or earlier")
  (original "gender that is gender of student whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find the people who joined their studies before alice was born")
  (original "student whose start date is at most birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which student started school the earliest")
  (original "student that has the smallest end date")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "name an employee who started before the student named alice")
  (original "employee whose start date is smaller than start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "a student ending before 2004")
  (original "student whose end date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "people that are not male")
  (original "person whose gender is not male")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string !=) en.gender.male))

  )
)
(example
  (utterance "what person is younger than alice")
  (original "person whose birthdate is at most birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate)))))

  )
)
(example
  (utterance "student who was a smaller start date than alice")
  (original "student whose start date is smaller than start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "student whose start date is the largest")
  (original "student that has the largest start date")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "student who starts at least before alice finishes")
  (original "student whose start date is at least end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "student whose start date is not before start date of employee alice")
  (original "student whose start date is at least start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find the date that alice started studying computer science")
  (original "start date of student alice whose field of study is computer science")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string field_of_study) (string =) en.field.computer_science) (string education_start_date)))

  )
)
(example
  (utterance "friends of people who studied the fields other than computer science")
  (original "person that student whose field of study is not computer science is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string !=) en.field.computer_science)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "who was born in 2004 and is friends with alice")
  (original "person whose birthdate is 2004 and that is friends with alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1)) (string friend) (string =) en.person.alice))

  )
)
(example
  (utterance "employee whose start date is same as that of student alice")
  (original "employee whose start date is start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what person is 180 cm tall and is alices friend")
  (original "person that alice is friends with and whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice) (string height) (string =) (number 180 en.cm)))

  )
)
(example
  (utterance "find friends of employee without title of software engineer")
  (original "person that employee whose job title is not software engineer is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string !=) en.job_title.software_engineer)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what people have a birthdate that is 2004 and whose height is 180 cm")
  (original "person whose birthdate is 2004 and whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1)) (string height) (string =) (number 180 en.cm)))

  )
)
(example
  (utterance "who has a relationship that started after 2004")
  (original "relationship status that is relationship status of student whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "people that stopped working in 2004 or 2010")
  (original "employee whose end date is 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "friends of people who quit their jobs before 2004")
  (original "person that employee whose end date is smaller than 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "friends of people who completed their studies before 2004")
  (original "person that student whose end date is smaller than 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what person has a birthdate between 2004 and 2010")
  (original "person whose birthdate is smaller than 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1)))))

  )
)
(example
  (utterance "find people with height either 180 or 200 cm")
  (original "180 cm or 200 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (number 180 en.cm) (number 200 en.cm)))

  )
)
(example
  (utterance "working people that did not start in 2004")
  (original "employee whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "people that stopped school after 2004 or after 2010")
  (original "student whose end date is larger than 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what is the relationship status of the student not in computer science")
  (original "relationship status that is relationship status of student whose field of study is not computer science")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string !=) en.field.computer_science)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "people shorter than 180 cm")
  (original "person whose height is smaller than 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string height)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 180 en.cm))))

  )
)
(example
  (utterance "find me 2 people in a relationship")
  (original "person that has two relationship status")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) (number 2)))

  )
)
(example
  (utterance "person whos birthday is before alice graduates")
  (original "person whose birthdate is at most end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date)))))

  )
)
(example
  (utterance "students who started school when alice quit her job")
  (original "student whose start date is end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "person who hasnt been in 3 relationships")
  (original "person that has less than two relationship status")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string <) (number 2)))

  )
)
(example
  (utterance "find people of the same gender as the person logged in")
  (original "gender that is gender of person that is logged in")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in))))

  )
)
(example
  (utterance "people who are single and friends with alice")
  (original "person whose relationship status is single and that is friends with alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) en.relationship_status.single) (string friend) (string =) en.person.alice))

  )
)
(example
  (utterance "who is the oldest person in my network")
  (original "person that has the smallest birthdate")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate))))

  )
)
(example
  (utterance "what people have a birthplace of new york and a height of 180 cm")
  (original "person whose birthplace is new york and whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) en.city.new_york) (string height) (string =) (number 180 en.cm)))

  )
)
(example
  (utterance "students finishing contemporaneous to or after alice")
  (original "student whose end date is at least end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "friends of students finishing after 2004")
  (original "person that is friends with student whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find people 180 cm tall who were born in new york")
  (original "person whose height is 180 cm and whose birthplace is new york")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string birthplace) (string =) en.city.new_york))

  )
)
(example
  (utterance "students with the fewest fields of study")
  (original "student that has the least number of field of study")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string min) (string field_of_study))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which friend of alice is online")
  (original "person that alice is friends with and that is logged in")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice) (string logged_in)))

  )
)
(example
  (utterance "student whose fields of study are smallest")
  (original "student that has the least number of field of study")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string min) (string field_of_study))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "students that ended school on the day alice was born")
  (original "student whose end date is birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find friends of alice that are single")
  (original "person whose relationship status is single and that alice is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) en.relationship_status.single) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice))

  )
)
(example
  (utterance "which employee quit before alice was born")
  (original "employee whose end date is smaller than birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "a student not ending in 2004")
  (original "student whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find me friends of the student that is is leaving before 2004")
  (original "person that is friends with student whose end date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "anyone who is alices friend")
  (original "person that alice is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice))

  )
)
(example
  (utterance "find employees with start dates after 2004")
  (original "employee whose start date is larger than 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "people that started school when alice stopped")
  (original "student whose start date is end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "people who have friends that were born in new york")
  (original "person that is friends with person whose birthplace is new york")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) en.city.new_york)))

  )
)
(example
  (utterance "when did alice quit job at mckinsey")
  (original "end date of employee alice whose employer is mckinsey")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employer) (string =) en.company.mckinsey) (string employment_end_date)))

  )
)
(example
  (utterance "alices birthplace")
  (original "birthplace of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthplace)))

  )
)
(example
  (utterance "find all friends that are not software engineers")
  (original "person that employee whose job title is not software engineer is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string !=) en.job_title.software_engineer)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what is the job title of alice")
  (original "job title of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string job_title)))

  )
)
(example
  (utterance "what is the gender of employees who did not start in 2004")
  (original "gender that is gender of employee whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find friends of students not attending brown university")
  (original "person that student whose university is not brown university is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string university) (string !=) en.university.brown)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "people that were born before alice started school")
  (original "person whose birthdate is smaller than start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date)))))

  )
)
(example
  (utterance "find employees who have a start date earlier than the end date of the employee alice")
  (original "employee whose start date is smaller than end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "name a person 180 cm tall who is friends with alice")
  (original "person whose height is 180 cm and that is friends with alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string friend) (string =) en.person.alice))

  )
)
(example
  (utterance "what is the gender of an employee whose end date is earlier than 2004")
  (original "gender that is gender of employee whose end date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "student with most number of field of studies")
  (original "student that has the most number of field of study")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string max) (string field_of_study))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "person with minimum two relationship statuses")
  (original "person that has at least two relationship status")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string >=) (number 2)))

  )
)
(example
  (utterance "name a person 180 cm tall who quit in 2004")
  (original "person whose height is 180 cm and whose end date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string education_end_date) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "what is the relationship status of employee whose start date is not 2004")
  (original "relationship status that is relationship status of employee whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "people with two birthplaces")
  (original "person that has two birthplace")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) (number 2)))

  )
)
(example
  (utterance "which students end date happends the same time as  alice")
  (original "student whose end date is at least end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find males that are single")
  (original "person whose gender is male and whose relationship status is single")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) en.gender.male) (string relationship_status) (string =) en.relationship_status.single))

  )
)
(example
  (utterance "what employee has no more than two job titles")
  (original "employee that has at most two job title")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string job_title) (string <=) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "which employees have no more than 2 job titles")
  (original "employee that has at most two job title")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string job_title) (string <=) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "people that are friends with someone that is single")
  (original "person that is friends with person whose relationship status is single")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) en.relationship_status.single)))

  )
)
(example
  (utterance "what is the relationship status of employees who started after 2004")
  (original "relationship status that is relationship status of employee whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "single gendered people")
  (original "person that has less than two gender")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string <) (number 2)))

  )
)
(example
  (utterance "where was alice born")
  (original "city that is birthplace of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) en.person.alice))

  )
)
(example
  (utterance "find people with the same gender as alice or bob")
  (original "gender that is gender of alice or bob")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.person.alice en.person.bob)))

  )
)
(example
  (utterance "find the gender of students whose field of study is not computer science ")
  (original "gender that is gender of student whose field of study is not computer science")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string !=) en.field.computer_science)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find me all of alices friends who are currently online")
  (original "person that is logged in and that is friends with alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in)) (string friend) (string =) en.person.alice))

  )
)
(example
  (utterance "people that have a friend that started school in or after 2004")
  (original "person that is friends with student whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "employees who quit in 2003 or earlier")
  (original "employee whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what person is friends with the online person")
  (original "person that is friends with person that is logged in")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in))))

  )
)
(example
  (utterance "students who start on alices birthday")
  (original "student whose start date is birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what is the birthplace of a person whose height is 180 cm")
  (original "person whose birthplace is person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "what is the gender of employees who started no later than 2004")
  (original "gender that is gender of employee whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find people who are not bigger than alice in height")
  (original "person whose height is at most height of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string height)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string height)))))

  )
)
(example
  (utterance "a friend of alices friend")
  (original "person that is friends with person that is friends with alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) en.person.alice)))

  )
)
(example
  (utterance "name a friend of a student who did not study at brown university")
  (original "person that student whose university is not brown university is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string university) (string !=) en.university.brown)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "who has the least number of relationship statuses")
  (original "person that has the least number of relationship status")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string min) (string relationship_status)))

  )
)
(example
  (utterance "employee whose start date is minimum 2004")
  (original "employee whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what is the relationship status for students with a start date not equal to 2004")
  (original "relationship status that is relationship status of student whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "birthplace of students who finish contemporaneous to or before 2004")
  (original "city that is birthplace of student whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what student has an end date that is at least either 2004 or 2010")
  (original "student whose end date is at least 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what is the relationship status of students who did not graduate in 2004")
  (original "relationship status that is relationship status of student whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "where was alice born")
  (original "city that is birthplace of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) en.person.alice))

  )
)
(example
  (utterance "people that are friends with someone that stopped school after 2004")
  (original "person that is friends with student whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "students who start after alice")
  (original "student whose start date is larger than start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "birth city of student whose start date is after 2004")
  (original "city that is birthplace of student whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "which student has attended the fewest universities")
  (original "student that has the least number of university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string min) (string university))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "relationship status of 180 cm tall person")
  (original "relationship status that is relationship status of person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "find the shortest person")
  (original "person that has the smallest height")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string height))))

  )
)
(example
  (utterance "find friends of employees with last day in 2004 or before")
  (original "person that is friends with employee whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find people that are friends with employees who have an end date no later than 2004")
  (original "person that is friends with employee whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "people who were born in 2004 and born in new york")
  (original "person whose birthdate is 2004 and whose birthplace is new york")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1)) (string birthplace) (string =) en.city.new_york))

  )
)
(example
  (utterance "find employees who quit theri job before 2004 or 2010")
  (original "employee whose end date is smaller than 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "gender of persons who are 180 cm tall")
  (original "gender that is gender of person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "what students have end date names that are either 2004 or 2010")
  (original "student whose end date is at least 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what employee started the same day as alice")
  (original "employee whose start date is at least start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "whats the relationship status of the student starting on or before 2004")
  (original "relationship status that is relationship status of student whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what person has a birthdate with at most that of alices")
  (original "person whose birthdate is at most end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date)))))

  )
)
(example
  (utterance "find employees working for the most employers")
  (original "employee that has the most number of employer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string max) (string employer))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "employees who quit the same day as alice")
  (original "employee whose end date is end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "who is single and born in 2004")
  (original "person whose relationship status is single and whose birthdate is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) en.relationship_status.single) (string birthdate) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "find students with start dates other than 2004")
  (original "student whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "people that started school after alice was born")
  (original "student whose start date is larger than birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "anyone friend of a male")
  (original "person that is friends with person whose gender is male")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) en.gender.male)))

  )
)
(example
  (utterance "which students started no earlier than 2004")
  (original "student whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "people who are friends with employees who strated in or after 2004")
  (original "person that is friends with employee whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what is the job title of alice whose employer is mckinsey")
  (original "job title of employee alice whose employer is mckinsey")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employer) (string =) en.company.mckinsey) (string job_title)))

  )
)
(example
  (utterance "find the gender of people born in new york")
  (original "gender that is gender of person whose birthplace is new york")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) en.city.new_york)))

  )
)
(example
  (utterance "find me friends of people logged in")
  (original "person that person that is logged in is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in))))

  )
)
(example
  (utterance "friends of people that are currently online")
  (original "person that is friends with person that is logged in")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in))))

  )
)
(example
  (utterance "what university did alice attend")
  (original "university of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string university)))

  )
)
(example
  (utterance "which persons are friends with employees that started before 2004")
  (original "person that is friends with employee whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what person doesnt have the height of 180 cm")
  (original "person whose height is not 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string !=) (number 180 en.cm)))

  )
)
(example
  (utterance "who is friends with an employee who started in 2004 or later")
  (original "person that is friends with employee whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find people that have at least two birthplaces")
  (original "person that has at least two birthplace")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string >=) (number 2)))

  )
)
(example
  (utterance "employee with largest start date")
  (original "employee that has the largest start date")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find someone who is as tall or shorter than alice")
  (original "person whose height is at most height of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string height)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string height)))))

  )
)
(example
  (utterance "people that are the same height as alice")
  (original "person whose height is height of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string height))))

  )
)
(example
  (utterance "find me the person with the least friends")
  (original "person that the least number of person is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "who is born in new york and friends with alice")
  (original "person whose birthplace is new york and that alice is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) en.city.new_york) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice))

  )
)
(example
  (utterance "find employees starting before or on same day as alice")
  (original "employee whose start date is at most start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what person has two genders")
  (original "person that has at most two gender")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string <=) (number 2)))

  )
)
(example
  (utterance "student whose start date is before start date of student alice")
  (original "student whose start date is smaller than start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what employee had a start date as early as or later than alice")
  (original "employee whose start date is at least start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "employees who are starting before alices last day")
  (original "employee whose end date is smaller than end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what is the relationship status of the person who is 180 cm tall")
  (original "relationship status that is relationship status of person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "people who are friends with the employee that will be leaving by 2004")
  (original "person that is friends with employee whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "people that stopped school before alices birthdate")
  (original "student whose end date is smaller than birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "employees who started in 2004 or 2010")
  (original "employee whose start date is 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find males born in 2004")
  (original "person whose birthdate is 2004 and whose gender is male")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1)) (string gender) (string =) en.gender.male))

  )
)
(example
  (utterance "who is friends with employees whos end date is larger than 2004")
  (original "person that employee whose end date is larger than 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "student whose start date is not before 2004")
  (original "student whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "employee whose end date is before end date of employee alice")
  (original "employee whose end date is smaller than end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find students whom have the earliest end date")
  (original "student that has the smallest end date")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which employees started no sooner than 2004 or 2010")
  (original "employee whose start date is at least 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "which employee started earlier than 2004")
  (original "employee whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find people who are friends with alice or bob")
  (original "person that alice or bob is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.person.alice en.person.bob)))

  )
)
(example
  (utterance "relationship status of student whose start date is after 2004")
  (original "relationship status that is relationship status of student whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "relationship status of all students who started after 2004")
  (original "relationship status that is relationship status of student whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "alices friends who are 180 cm tall")
  (original "person whose height is 180 cm and that alice is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice))

  )
)
(example
  (utterance "people who were born after alice started working")
  (original "person whose birthdate is larger than start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date)))))

  )
)
(example
  (utterance "which employees started employment before alice")
  (original "employee whose start date is smaller than start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what is the relationship status of a student whose start date is not in 2004")
  (original "relationship status that is relationship status of student whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "people who are 180 cm tall before 2004")
  (original "person whose height is 180 cm and whose end date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string education_end_date) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "who was born most recently")
  (original "person that has the largest birthdate")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate))))

  )
)
(example
  (utterance "employees who started before alice started school")
  (original "employee whose start date is smaller than start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "people born in new york or beijing")
  (original "person whose birthplace is new york or beijing")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.city.new_york en.city.bejing)))

  )
)
(example
  (utterance "people that started school before alice was born")
  (original "student whose start date is smaller than birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find employees friend with start date after 2004")
  (original "person that is friends with employee whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "working people that are not software engineers")
  (original "employee whose job title is not software engineer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string !=) en.job_title.software_engineer)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "which employee finished the same time alice started")
  (original "employee whose end date is at least start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find the friends of employees with an end date no later than 2004")
  (original "person that employee whose end date is smaller than 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find me all the online singles")
  (original "person whose relationship status is single and that is logged in")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) en.relationship_status.single) (string logged_in)))

  )
)
(example
  (utterance "people that are friends with someone that stopped working in or before 2004")
  (original "person that is friends with employee whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find employees whose last day is after student alices first day")
  (original "employee whose end date is larger than start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "the relationship statues of a student ending in 2004")
  (original "relationship status that is relationship status of student whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "where is the birthplace of the student who left school before 2004")
  (original "city that is birthplace of student whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "friends of students starting after 2004")
  (original "person that is friends with employee whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "the gender of a student starting before 2004")
  (original "gender that is gender of student whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "people born on or before the day alice started school")
  (original "person whose birthdate is at most start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date)))))

  )
)
(example
  (utterance "people who are not studying computer science")
  (original "student whose field of study is not computer science")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string !=) en.field.computer_science)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what is the gender of a student with an end date later than 2004")
  (original "gender that is gender of student whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "people that are friends with the new emplyee starting before2994")
  (original "person that employee whose start date is smaller than 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "which student started after alice stopped going to school")
  (original "student whose start date is larger than end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "relationship statuses of employees who started working in or before 2004")
  (original "relationship status that is relationship status of employee whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find students with an end date earlier than that of employee alice")
  (original "student whose end date is smaller than end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "when did alice leave in 2004")
  (original "end date of employee alice whose end date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date) (string =) (date 2004 -1 -1)) (string employment_end_date)))

  )
)
(example
  (utterance "find the city of birth for all employees that quit in 2004")
  (original "city that is birthplace of employee whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "alice started her job in 2004 when did she leave it")
  (original "end date of employee alice whose start date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date) (string =) (date 2004 -1 -1)) (string employment_end_date)))

  )
)
(example
  (utterance "birthplace cities of students who started before 2004")
  (original "city that is birthplace of student whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "180 cm tall person with birthdate in 2004")
  (original "person whose height is 180 cm and whose birthdate is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string birthdate) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "students who began school on the same day alice started working")
  (original "student whose start date is start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find people with at least two friends")
  (original "person that at least two person is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string >=) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "people that are not single")
  (original "person whose relationship status is not single")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string !=) en.relationship_status.single))

  )
)
(example
  (utterance "name cities when shared with more than two persons as their birthplace")
  (original "city that is birthplace of more than two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string >) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "what employees have jobs whose title is the same as employee alice")
  (original "employee whose job title is job title of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string job_title)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what genders are alices friends")
  (original "gender that is gender of person that is friends with alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) en.person.alice)))

  )
)
(example
  (utterance "people who are friends with people who dont work for mckinsey")
  (original "person that is friends with employee whose employer is not mckinsey")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employer) (string !=) en.company.mckinsey)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find me everyone born in new york who is single")
  (original "person whose birthplace is new york and whose relationship status is single")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) en.city.new_york) (string relationship_status) (string =) en.relationship_status.single))

  )
)
(example
  (utterance "employee who quit on alices birthdate")
  (original "employee whose end date is birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what student has a start date before alices birthday")
  (original "student whose start date is smaller than birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what persons birthdate is at most the same as alices start date")
  (original "person whose birthdate is at most start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date)))))

  )
)
(example
  (utterance "what are the relationship statuses of employees that do not work at mckinsey")
  (original "relationship status that is relationship status of employee whose employer is not mckinsey")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employer) (string !=) en.company.mckinsey)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what city is the birthplace of employees who have an end date no later than 2004")
  (original "city that is birthplace of employee whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find males who are 180 cm tall")
  (original "person whose height is 180 cm and whose gender is male")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string gender) (string =) en.gender.male))

  )
)
(example
  (utterance "which people are friends with employees who did not start in 2004")
  (original "person that is friends with employee whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find students friends who ended in 2004 or before")
  (original "person that is friends with student whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "which employees has the largest amount of job titles")
  (original "employee that has the most number of job title")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string max) (string job_title))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "people that started school when alice stopped working")
  (original "student whose start date is end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which students am i friends with who didnt start in 2004")
  (original "person that student whose start date is not 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "any male who has logged in")
  (original "person that is logged in and whose gender is male")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in)) (string gender) (string =) en.gender.male))

  )
)
(example
  (utterance "find employees with job title not software engineer")
  (original "employee whose job title is not software engineer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string !=) en.job_title.software_engineer)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find all the students that started in 2004 and after")
  (original "student whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "student whose start date  is before alices")
  (original "student whose start date is smaller than start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which students graduate no later than alices first day of work")
  (original "student whose end date is at most start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which university did people who are 180 cm tall attend")
  (original "university that is university of person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.university) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string university)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "a friend of someone 180 cm tall")
  (original "person that is friends with person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "find the date that alice started her software engineer job")
  (original "start date of employee alice whose job title is software engineer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string job_title) (string =) en.job_title.software_engineer) (string employment_start_date)))

  )
)
(example
  (utterance "employees who quit after 2004")
  (original "employee whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "students who graduated before alice started work")
  (original "student whose end date is smaller than start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "an employee ending in 2004 or 2010")
  (original "employee whose end date is at most 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "who is the friend of the employee who employment end date is at least 2004")
  (original "person that is friends with employee whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find all  friends with student with end date other than 2004")
  (original "person that is friends with student whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "how tall is alice")
  (original "height of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string height)))

  )
)
(example
  (utterance "employee who has a smaller date than 2004 and 2010")
  (original "employee whose end date is smaller than 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "people that started working when alice started school")
  (original "employee whose start date is start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find the employees that were hired before alice quit her job")
  (original "employee whose start date is smaller than end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "a person whose friend started on or before 2004")
  (original "person that is friends with student whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "students who started after alices last day at the job")
  (original "student whose start date is larger than end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "who is 180 cm tall working at mckinsey")
  (original "person whose height is 180 cm and whose employer is mckinsey")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string employer) (string =) en.company.mckinsey))

  )
)
(example
  (utterance "person who is 180 cm tall with computer science as field of study")
  (original "person whose height is 180 cm and whose field of study is computer science")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string field_of_study) (string =) en.field.computer_science))

  )
)
(example
  (utterance "what is the gender of people that stopped school in or after 2004")
  (original "gender that is gender of student whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "which student graduated after alice graduated")
  (original "student whose end date is larger than end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find students starting before 2010")
  (original "student whose start date is smaller than 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find birthplaces of employees who started before 2004")
  (original "city that is birthplace of employee whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "people that started school when alice started work or after")
  (original "student whose start date is at least start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what is the relationship status of people that started working before 2004")
  (original "relationship status that is relationship status of employee whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what employee started after employee alice did")
  (original "employee whose start date is larger than start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "which employee of mckinsey is 180 cm tall")
  (original "person whose height is 180 cm and whose employer is mckinsey")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string employer) (string =) en.company.mckinsey))

  )
)
(example
  (utterance "gender of students finishing on or after 2004")
  (original "gender that is gender of student whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what is alices first day as a software engineer")
  (original "start date of employee alice whose job title is software engineer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string job_title) (string =) en.job_title.software_engineer) (string employment_start_date)))

  )
)
(example
  (utterance "employees who start after alice leaves")
  (original "employee whose start date is larger than end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find a person who is taller than 180 cm")
  (original "person whose height is larger than 180 cm or 200 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string height)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (number 180 en.cm) (number 200 en.cm)))))

  )
)
(example
  (utterance "who has minimum two friends")
  (original "person that is friends with at least two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string >=) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "students who are studying the same field as alice")
  (original "student whose field of study is field of study of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string field_of_study)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find students who are not part of brown university")
  (original "student whose university is not brown university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string university) (string !=) en.university.brown)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find relationship statuses for employees who dont have an end date of 2004")
  (original "relationship status that is relationship status of employee whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find the gender of employees who have an end date that is not 2004")
  (original "gender that is gender of employee whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "people that stopped working when alice started working")
  (original "employee whose end date is start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find students with a start date that is greater than or equal to student alice")
  (original "student whose start date is at least start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find students with an end date that is equal to or greater than the birthdate of alice")
  (original "student whose end date is at least birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find people who have more than two genders")
  (original "person that has more than two gender")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string >) (number 2)))

  )
)
(example
  (utterance "which student ending date is earlier than 2004")
  (original "student whose end date is smaller than 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what is the birth city of a worker who didnt start in 2004")
  (original "city that is birthplace of employee whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "people that started school when alice was born")
  (original "student whose start date is birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "people with friends who did not start work in 2004")
  (original "person that employee whose start date is not 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "people that stopped working in 2004 or before")
  (original "employee whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "which cities were alices friends born in")
  (original "city that is birthplace of person that is friends with alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) en.person.alice)))

  )
)
(example
  (utterance "find all people that are single and currently online")
  (original "person that is logged in and whose relationship status is single")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in)) (string relationship_status) (string =) en.relationship_status.single))

  )
)
(example
  (utterance "students who finish before alices birthday")
  (original "student whose end date is smaller than birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what city was alice or bob born in")
  (original "city that is birthplace of alice or bob")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.person.alice en.person.bob)))

  )
)
(example
  (utterance "people who are friends with an employee that started later than 2004")
  (original "person that is friends with employee whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "where are all employees born who are not employed by mckinsey")
  (original "city that is birthplace of employee whose employer is not mckinsey")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employer) (string !=) en.company.mckinsey)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "people that stopped school when alice was born or after")
  (original "student whose end date is at least birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what is alices birthdate")
  (original "birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate)))

  )
)
(example
  (utterance "single people born in 2004")
  (original "person whose relationship status is single and whose birthdate is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) en.relationship_status.single) (string birthdate) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "friends of employees who didnt start in 2004")
  (original "person that is friends with employee whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "student whose end date is not after end date of student alice")
  (original "student whose end date is at most end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find employees starting on or before alices last day")
  (original "employee whose start date is at most end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "which computer science students are 180 cm tall")
  (original "person whose height is 180 cm and whose field of study is computer science")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string field_of_study) (string =) en.field.computer_science))

  )
)
(example
  (utterance "who is studying something other than computer science")
  (original "student whose field of study is not computer science")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string !=) en.field.computer_science)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "how many males or females are there")
  (original "number of gender")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call .size (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type))))

  )
)
(example
  (utterance "who is the friend of an employee whose end date is before 2004")
  (original "person that is friends with employee whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what person is logged in and was born in new york")
  (original "person that is logged in and whose birthplace is new york")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in)) (string birthplace) (string =) en.city.new_york))

  )
)
(example
  (utterance "who is friends with the online person")
  (original "person that person that is logged in is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in))))

  )
)
(example
  (utterance "what job did alice start in 2004")
  (original "job title of employee alice whose start date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date) (string =) (date 2004 -1 -1)) (string job_title)))

  )
)
(example
  (utterance "find employees starting before 2004")
  (original "employee whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "who is friends with employees who have an end date that is not 2004")
  (original "person that employee whose end date is not 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "friends of male people")
  (original "person that person whose gender is male is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) en.gender.male)))

  )
)
(example
  (utterance "what is the gender of one or two individuals")
  (original "gender that is gender of at most two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string <=) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "find the employee that was hired closest to the day alice quit her job")
  (original "employee whose start date is at most end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find the genders of students whom have start dates earlier than 2004")
  (original "gender that is gender of student whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find people who are friend with students that have an end date not of 2004")
  (original "person that is friends with student whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find the relationship status for people with a height of 180 cm")
  (original "relationship status that is relationship status of person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "find students with last day after 2004")
  (original "student whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which gender had more employees start after 2004")
  (original "gender that is gender of employee whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "when did student of computer science alice finish")
  (original "end date of student alice whose field of study is computer science")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string field_of_study) (string =) en.field.computer_science) (string education_end_date)))

  )
)
(example
  (utterance "what students have an end date that is the same of later than student alice")
  (original "student whose end date is at least end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "who is single male")
  (original "person whose relationship status is single and whose gender is male")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) en.relationship_status.single) (string gender) (string =) en.gender.male))

  )
)
(example
  (utterance "which employees started no later than the day alice started school")
  (original "employee whose start date is at most start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find employees starting on or after alices first day")
  (original "employee whose start date is at least start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "people that stopped school at the same time or before alice did")
  (original "student whose end date is at most end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "people shorter than alice")
  (original "person whose height is smaller than height of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string height)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string height)))))

  )
)
(example
  (utterance "a worker who began on or before the day student alice started")
  (original "employee whose start date is at most start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what person has the same gender as alice")
  (original "person whose gender is gender of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string gender))))

  )
)
(example
  (utterance "what students have an end date that is the start date of employee alice or later")
  (original "student whose end date is at least start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "who works at mckinsey and is 180 cm tall")
  (original "person whose height is 180 cm and whose employer is mckinsey")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string employer) (string =) en.company.mckinsey))

  )
)
(example
  (utterance "which student ended no later than alices start date")
  (original "student whose end date is at most start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "people who joined their study with or after alice")
  (original "student whose start date is at least start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "student not studying at brown")
  (original "student whose university is not brown university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string university) (string !=) en.university.brown)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which students started before 2004")
  (original "student whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "alices friends relationship status")
  (original "relationship status that is relationship status of person that is friends with alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) en.person.alice)))

  )
)
(example
  (utterance "people that started working after alice was born")
  (original "employee whose start date is larger than birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what are the relationship statuses of employees whose start date is earlier than 2004")
  (original "relationship status that is relationship status of employee whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "a student ending before alice starts")
  (original "student whose end date is start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which students last day was the around the same day as alices last day")
  (original "student whose end date is at least end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what employees started on alices birthday")
  (original "employee whose start date is birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "friends of employees starting in or after 2004")
  (original "person that is friends with employee whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "who are the friends of employees who did not quit in 2004")
  (original "person that is friends with employee whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what city is the birthplace of the employee who ended working before 2004")
  (original "city that is birthplace of employee whose end date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "who started working on alices birthdate")
  (original "employee whose start date is birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "which employees had an end date before alice started school")
  (original "employee whose end date is at most start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "people whose gender is same as alice")
  (original "person whose gender is gender that is gender of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) en.person.alice)))

  )
)
(example
  (utterance "people who were born after alice started school")
  (original "person whose birthdate is larger than start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date)))))

  )
)
(example
  (utterance "relationship status of students whose end date is before 2004")
  (original "relationship status that is relationship status of student whose end date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what person is logged in and has a birthdate in 2004")
  (original "person whose birthdate is 2004 and that is logged in")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1)) (string logged_in)))

  )
)
(example
  (utterance "find student whose last day is before or the same day as alices first day")
  (original "student whose end date is at most start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "employees who start after alice")
  (original "employee whose start date is larger than start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "which cities were people 180 cm tall born in")
  (original "city that is birthplace of person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "find students with last day is on or after alices last day")
  (original "student whose end date is at least end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "friends of employees finishing before 2004")
  (original "person that is friends with employee whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "people that are currently online that are single")
  (original "person whose relationship status is single and that is logged in")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) en.relationship_status.single) (string logged_in)))

  )
)
(example
  (utterance "find me a person born in 2004 in new york")
  (original "person whose birthdate is 2004 and whose birthplace is new york")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1)) (string birthplace) (string =) en.city.new_york))

  )
)
(example
  (utterance "who was born on alices start date")
  (original "person whose birthdate is start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))

  )
)
(example
  (utterance "find employees with last day in 2004 or before")
  (original "employee whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "employees who started working the same day alice was born")
  (original "employee whose start date is birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "students who started later than 2004")
  (original "student whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "people that started school before 2004 or before 2010")
  (original "student whose start date is smaller than 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what is the birthdate of the person with a height of 180 cm")
  (original "person whose height is 180 cm and whose birthdate is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string birthdate) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "employees starting on or after alice finishes")
  (original "employee whose start date is at least end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "a mutual friend of alice")
  (original "person that is friends with person that alice is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice)))

  )
)
(example
  (utterance "persons born in or before 2004")
  (original "person whose birthdate is smaller than 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1)))))

  )
)
(example
  (utterance "who has friends with an end date that is before 2004")
  (original "person that employee whose end date is smaller than 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "people with two or less friends")
  (original "person that is friends with at most two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string <=) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "person who first joined his study")
  (original "student that has the smallest start date")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "birth  city of student whose end date is not 2004")
  (original "city that is birthplace of student whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what are the birth cities of employees who are not employed by mickinsey")
  (original "city that is birthplace of employee whose employer is not mckinsey")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employer) (string !=) en.company.mckinsey)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what are the relationship statuses of people who quit their job in or after 2004")
  (original "relationship status that is relationship status of employee whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "people who enrolled on or after the date on which alice completed her studies")
  (original "student whose start date is at least end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "birth places of employees who quit in 2004 or before")
  (original "city that is birthplace of employee whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "which student ended after 2004")
  (original "student whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "history or computer science")
  (original "computer science or history")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.field.computer_science en.field.history))

  )
)
(example
  (utterance "employees finishing contemporaneous to or after 2004")
  (original "employee whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "who is alice friends with that is single")
  (original "person whose relationship status is single and that alice is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) en.relationship_status.single) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice))

  )
)
(example
  (utterance "genders of people that are currently online")
  (original "gender that is gender of person that is logged in")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in))))

  )
)
(example
  (utterance "relationship status of students not finishing in 2004")
  (original "relationship status that is relationship status of student whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "people who are 180 cm tall and in a relationship with ailce")
  (original "person whose height is 180 cm and that is relationship status of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) en.person.alice))

  )
)
(example
  (utterance "single people who was born in new york")
  (original "person whose relationship status is single and whose birthplace is new york")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) en.relationship_status.single) (string birthplace) (string =) en.city.new_york))

  )
)
(example
  (utterance "find people who are friends with alice")
  (original "person that alice is friends with and that alice is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice))

  )
)
(example
  (utterance "people who joined their study before alice completed")
  (original "student whose start date is smaller than end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which student started on alices birthday")
  (original "student whose start date is birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "in what cities were students who started before or in 2004 born")
  (original "city that is birthplace of student whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "people that started work when alice started school  or before")
  (original "employee whose start date is at most start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "most popular birthplace")
  (original "city that is birthplace of the most number of person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "find friends of employees with 2004 end dates or later")
  (original "person that employee whose end date is at least 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find all the employees that had no more than two jobs")
  (original "employee that has at most two employer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string employer) (string <=) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what employees have been here less time then alice")
  (original "employee whose start date is smaller than birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "which employee has the same boss as alice")
  (original "employee whose employer is employer of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employer) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employer)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "which students have fewer than 2 majors")
  (original "student that has less than two field of study")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string field_of_study) (string <) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "people that started school on or before the day alice stopped working")
  (original "student whose start date is at most end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "birth place of people who completed education after 2004")
  (original "city that is birthplace of student whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what person has a friend who is a student at a university other than brown university")
  (original "person that is friends with student whose university is not brown university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string university) (string !=) en.university.brown)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "which genders are alice and bob")
  (original "gender that is gender of alice or bob")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.person.alice en.person.bob)))

  )
)
(example
  (utterance "find employees who have a start date earlier than 2004")
  (original "employee whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find people with alices birthday who are 180 cm tall")
  (original "person whose height is 180 cm and that is birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthdate)) (string =) en.person.alice))

  )
)
(example
  (utterance "people who are friends with the new employee that will be starting before before or after 2004")
  (original "person that is friends with student whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what employee is leaving the company on the same date that alice starts her job")
  (original "employee whose end date is start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "student whose start date is end date of student alice")
  (original "student whose start date is end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what employees have an end date that is either 2004 or 2010")
  (original "employee whose end date is 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "in what city was the 180cm tall person born")
  (original "person whose birthplace is person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "number of jobs held")
  (original "number of job title")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call .size (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.job_title) (string !type))))

  )
)
(example
  (utterance "students whose start date is smaller than 2004 and 2010")
  (original "student whose start date is smaller than 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "place where alice was born")
  (original "birthplace of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthplace)))

  )
)
(example
  (utterance "find me everyone at least as tall as alice")
  (original "person whose height is at least height of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string height)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string height)))))

  )
)
(example
  (utterance "what is the end date of employee alice")
  (original "student whose start date is at most end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which students completed school by the time alice began")
  (original "student whose end date is at most start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "students who have a start date smaller than that of the end date for employee alice")
  (original "student whose start date is smaller than end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "is this person male or female")
  (original "male or female")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.gender.male en.gender.female))

  )
)
(example
  (utterance "student who started at or before 2004")
  (original "student whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "who studied at the least number of universities")
  (original "student that has the least number of university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string min) (string university))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "employees who started on alices last day")
  (original "employee whose start date is smaller than end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "people born in 2004 and who are 180 cm tall")
  (original "person whose height is 180 cm and whose birthdate is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string birthdate) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "what employees are either software engineers or program managers")
  (original "employee whose job title is software engineer or program manager")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.job_title.software_engineer en.job_title.program_manager))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find relationship statuses for students who have an end date that is not 2004")
  (original "relationship status that is relationship status of student whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "students who leave after alices birthday")
  (original "student whose end date is larger than birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what day did alice start her job in 2004")
  (original "start date of employee alice whose start date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date) (string =) (date 2004 -1 -1)) (string employment_start_date)))

  )
)
(example
  (utterance "which students started school latest")
  (original "student that has the largest start date")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find people with a gender of male whom alice is friends with")
  (original "person whose gender is male and that alice is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) en.gender.male) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice))

  )
)
(example
  (utterance "what is the relationship status of people studying anything but computer science")
  (original "relationship status that is relationship status of student whose field of study is not computer science")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string !=) en.field.computer_science)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "relationship status of only one person")
  (original "relationship status that is relationship status of less than two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string <) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "people who are friends with those who completed studies before 2004")
  (original "person that is friends with student whose end date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "either brown university or ucla")
  (original "brown university or ucla")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.university.brown en.university.ucla))

  )
)
(example
  (utterance "find the person that is 180 cm tall and is a software engineer")
  (original "person whose height is 180 cm and whose job title is software engineer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string job_title) (string =) en.job_title.software_engineer))

  )
)
(example
  (utterance "students who started after alice")
  (original "student whose start date is larger than birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "people with friends who have jobs but not software engineers")
  (original "person that employee whose job title is not software engineer is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string !=) en.job_title.software_engineer)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "which employees last day was no earlier than alices first day")
  (original "employee whose end date is at least end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "who is shorter than 181cm")
  (original "person whose height is at most 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string height)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 180 en.cm))))

  )
)
(example
  (utterance "find the gender of people who are single")
  (original "gender that is gender of person whose relationship status is single")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) en.relationship_status.single)))

  )
)
(example
  (utterance "name a student who will graduate no later than alice")
  (original "student whose end date is at most end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find students that have the fewest universities")
  (original "student that has the least number of university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string min) (string university))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what people have birthdates between 2004 and 2010")
  (original "person whose birthdate is larger than 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1)))))

  )
)
(example
  (utterance "name a person born in 2004 who is 180 cm tall")
  (original "person whose birthdate is 2004 and whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1)) (string height) (string =) (number 180 en.cm)))

  )
)
(example
  (utterance "what employees have a start date no later than that of student alice")
  (original "employee whose start date is at most end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what is the most common relationship status")
  (original "relationship status that is relationship status of the most number of person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "gender of employees starting before 2004")
  (original "gender that is gender of employee whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "which of alices friend is single")
  (original "person whose relationship status is single and that alice is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) en.relationship_status.single) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice))

  )
)
(example
  (utterance "people that are friends with someone that started working after 2004")
  (original "person that is friends with employee whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "birthplace of employees who started before 2004")
  (original "city that is birthplace of employee whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "an employee starting after alice ends")
  (original "employee whose start date is larger than end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find people with a height of 180 cm and their friends")
  (original "person that person whose height is 180 cm is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "find people who are students with a start date later than 2004 and their friends")
  (original "person that student whose start date is larger than 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what students have their field of study in computer science of history")
  (original "student whose field of study is computer science or history")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.field.computer_science en.field.history))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "students who finish before or contemporaneous to alices start")
  (original "student whose end date is at most start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "who is one worker who left on or before the day employee alice left")
  (original "employee whose end date is at most end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find people who have a birthplace the same as those with a height of 180 cm")
  (original "person whose birthplace is person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "who is alices single friend")
  (original "person that alice is friends with and whose relationship status is single")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice) (string relationship_status) (string =) en.relationship_status.single))

  )
)
(example
  (utterance "who has two or more relationship status")
  (original "person that has at least two relationship status")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string >=) (number 2)))

  )
)
(example
  (utterance "whats the gender of the student that befins after 2004")
  (original "gender that is gender of student whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "an employer with at least two employees")
  (original "employee that has less than two employer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string employer) (string <) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "which student began on the same day as student alice")
  (original "student whose start date is start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what was alices field of study")
  (original "field of study of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string field_of_study)))

  )
)
(example
  (utterance "which student has the earliest start date")
  (original "student that has the smallest end date")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find the realtionship status of employees who are not employed by mickinsey")
  (original "relationship status that is relationship status of employee whose employer is not mckinsey")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employer) (string !=) en.company.mckinsey)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "which student quit at the same time the employee alice did")
  (original "student whose end date is end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find the friends of people who joined their studies before 2004")
  (original "person that student whose start date is smaller than 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "employees with fewer than two employers")
  (original "employee that has less than two employer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string employer) (string <) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "persons born in new york in 2004")
  (original "person whose birthplace is new york and whose birthdate is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) en.city.new_york) (string birthdate) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "find the birthplace cities of employees whom have a start date not equal to 2004")
  (original "city that is birthplace of employee whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "how many students in this field")
  (original "number of field")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call .size (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.field) (string !type))))

  )
)
(example
  (utterance "which employee started after alice was hired")
  (original "employee whose start date is larger than end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "friends of people not studying computer science")
  (original "person that is friends with student whose field of study is not computer science")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string !=) en.field.computer_science)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "who has the same job as alice")
  (original "employee whose job title is job title of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string job_title)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "field of study of alice ended in 2004")
  (original "field of study of student alice whose end date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date) (string =) (date 2004 -1 -1)) (string field_of_study)))

  )
)
(example
  (utterance "which date did computer science student alice start")
  (original "start date of student alice whose field of study is computer science")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string field_of_study) (string =) en.field.computer_science) (string education_start_date)))

  )
)
(example
  (utterance "an employee that isnt a software engineer")
  (original "employee whose job title is not software engineer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string !=) en.job_title.software_engineer)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what gender is claimed by more than two people")
  (original "gender that is gender of more than two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string >) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "which people are friends with students who did not start in 2004")
  (original "person that is friends with student whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "who is the friend of alice")
  (original "person that is friends with alice and that is friends with alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) en.person.alice) (string friend) (string =) en.person.alice))

  )
)
(example
  (utterance "find people who are not male")
  (original "person whose gender is not male")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string !=) en.gender.male))

  )
)
(example
  (utterance "what companies employ people with a height of 180 cm")
  (original "company that is employer of person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.company) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employer)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "people who are single and born in 2004")
  (original "person whose relationship status is single and whose birthdate is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) en.relationship_status.single) (string birthdate) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "who is logged in as well as logged in")
  (original "person whose relationship status is single and that is logged in")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) en.relationship_status.single) (string logged_in)))

  )
)
(example
  (utterance "who is friends with the person who didnt start working in 2004")
  (original "person that employee whose start date is not 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "students starting on or after 2004")
  (original "student whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find people with a gender that less than two people have")
  (original "gender that is gender of less than two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string <) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "people that are 180 cm tall")
  (original "person whose height is person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "person who last joined the study")
  (original "student that has the largest start date")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find people who have a height of 180 cm and a relationship status of single")
  (original "person whose relationship status is single and whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) en.relationship_status.single) (string height) (string =) (number 180 en.cm)))

  )
)
(example
  (utterance "birthplace of students not at brown")
  (original "city that is birthplace of student whose university is not brown university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string university) (string !=) en.university.brown)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find males who are single")
  (original "person whose relationship status is single and whose gender is male")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) en.relationship_status.single) (string gender) (string =) en.gender.male))

  )
)
(example
  (utterance "student whose end date is not after end date of employee alice")
  (original "student whose end date is at most end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "who is a friend exclusively to alice")
  (original "person that alice is friends with and that is friends with alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice) (string friend) (string =) en.person.alice))

  )
)
(example
  (utterance "people that started school on or after alices birthdate")
  (original "student whose start date is at least birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "employees who quit their job in 2005 or later")
  (original "employee whose end date is larger than 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "any male who is born in new york")
  (original "person whose birthplace is new york and whose gender is male")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) en.city.new_york) (string gender) (string =) en.gender.male))

  )
)
(example
  (utterance "which employee ended in 2004 or later")
  (original "employee whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find the relationship status of students whose university is not that of brown")
  (original "relationship status that is relationship status of student whose university is not brown university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string university) (string !=) en.university.brown)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "relationship status of employees who didnt start in 2004")
  (original "relationship status that is relationship status of employee whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "people that stopped working before alice started working")
  (original "employee whose end date is smaller than start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find friends of alice that are 180 cm tall")
  (original "person that alice is friends with and whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice) (string height) (string =) (number 180 en.cm)))

  )
)
(example
  (utterance "find me an employee whose end date is later than the end date of student alice")
  (original "employee whose end date is larger than end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find alices friends who were born in new york")
  (original "person whose birthplace is new york and that alice is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) en.city.new_york) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice))

  )
)
(example
  (utterance "which students started in years other than 2004")
  (original "student whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what is the relationship status of people who stopped working in 2004 or later")
  (original "relationship status that is relationship status of employee whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "alices friends who were born in 2004")
  (original "person whose birthdate is 2004 and that alice is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice))

  )
)
(example
  (utterance "who is 180cm or higher")
  (original "person whose height is at least 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string height)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 180 en.cm))))

  )
)
(example
  (utterance "what is alices job title")
  (original "job title of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string job_title)))

  )
)
(example
  (utterance "find students whose first day is after alices birthday")
  (original "student whose start date is larger than birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "who are the students starting at the same time or before alice starts")
  (original "student whose start date is at least start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find employees starting in 2010 or earlier")
  (original "employee whose start date is at most 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "which people have less than two friends")
  (original "person that less than two person is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string <) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "find employee with same job title as alices")
  (original "employee whose job title is job title of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string job_title)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "people born in 2004 or 2010")
  (original "person whose birthdate is 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))

  )
)
(example
  (utterance "students who ended school in 2003 or earlier")
  (original "student whose end date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "a student with two or less universities")
  (original "student that has at most two university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string university) (string <=) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find students whose end date is either greater than 2004 or 2010")
  (original "student whose end date is larger than 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what is the most common gender")
  (original "gender that is gender of the most number of person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "whats the relationship status of student who was born in at most 2004 ")
  (original "relationship status that is relationship status of student whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "which people are alice not friends with")
  (original "person that alice not is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string !=) en.person.alice))

  )
)
(example
  (utterance "find me all end dates of all employees named alice who studied at brown university")
  (original "end date of student alice whose university is brown university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string university) (string =) en.university.brown) (string education_end_date)))

  )
)
(example
  (utterance "find people whos height is in between 180cm200cm")
  (original "person whose height is at most 180 cm or 200 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string height)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (number 180 en.cm) (number 200 en.cm)))))

  )
)
(example
  (utterance "find the genders of employees who start date is no later than 2004")
  (original "gender that is gender of employee whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what person has a height of at the most 180 cm")
  (original "person whose height is at most 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string height)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 180 en.cm))))

  )
)
(example
  (utterance "find students starting after alices last day")
  (original "student whose start date is larger than end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "who has the same relationship status as the 180 cm tall person")
  (original "person whose relationship status is person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "what student has only one field of study")
  (original "student that has less than two field of study")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string field_of_study) (string <) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "person born before 2004")
  (original "person whose birthdate is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1))))

  )
)
(example
  (utterance "who is friend of either alice or bob")
  (original "person that is friends with alice or bob")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.person.alice en.person.bob)))

  )
)
(example
  (utterance "who was born in 2004 or 2010")
  (original "person whose birthdate is at most 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1)))))

  )
)
(example
  (utterance "people those who are friends of friends of alice")
  (original "person that person that alice is friends with is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice)))

  )
)
(example
  (utterance "who has the same birthday as the person who is 180 cm tall")
  (original "person whose birthdate is person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "people that stopped school when alice started")
  (original "student whose end date is start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which employees end date is earlier than alices start date")
  (original "employee whose end date is smaller than start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "all 180 cm tall singles")
  (original "person whose relationship status is single and whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) en.relationship_status.single) (string height) (string =) (number 180 en.cm)))

  )
)
(example
  (utterance "birth city of student whose end date is at least 2004")
  (original "city that is birthplace of student whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "people who are friends with the employee that does not start in 2004")
  (original "person that is friends with employee whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find employees with last day matching alices first day at school")
  (original "employee whose end date is start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "people who are 180 cm or less in height")
  (original "person whose height is at most 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string height)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 180 en.cm))))

  )
)
(example
  (utterance "gender of employee whose employer is not mckinsey")
  (original "gender that is gender of employee whose employer is not mckinsey")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employer) (string !=) en.company.mckinsey)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "who is friends with the employee who started before 2004")
  (original "person that employee whose start date is smaller than 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "who is a person whose height is 180 cm and thats friends with alice")
  (original "person whose height is 180 cm and that is friends with alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string friend) (string =) en.person.alice))

  )
)
(example
  (utterance "which students graduated in 2004 or 2010")
  (original "student whose end date is 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "students that graduate on the same day alice starts her new job")
  (original "student whose end date is start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "students not studying computer science")
  (original "student whose field of study is not computer science")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string !=) en.field.computer_science)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find students from brown university")
  (original "university of student alice whose university is brown university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string university) (string =) en.university.brown) (string university)))

  )
)
(example
  (utterance "students who started school after alice quit her job")
  (original "student whose start date is larger than end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "gender of employees other than software engineers")
  (original "gender that is gender of employee whose job title is not software engineer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string !=) en.job_title.software_engineer)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "student whose start date is after end date of student alice")
  (original "student whose start date is larger than end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "where were students that did not finish in 2004 born")
  (original "city that is birthplace of student whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what is the status of the 180 cm tall persons relationship")
  (original "relationship status that is relationship status of person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "what is the relationship status of students who started no earlier than")
  (original "relationship status that is relationship status of student whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what employees have a start date that is the same as student alice or greater")
  (original "employee whose start date is at least end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "who joined on in 2004 and is 180 cm tall")
  (original "person whose height is 180 cm and whose start date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string education_start_date) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "what employees started at the same time as alice")
  (original "employee whose start date is at least end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "who is friends with alice")
  (original "person that alice is friends with and that alice is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice))

  )
)
(example
  (utterance "find people with three genders")
  (original "person that has more than two gender")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string >) (number 2)))

  )
)
(example
  (utterance "which students started no earlier than the day alice started school")
  (original "student whose start date is at least start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what is the gender of the students that did not start in 2004")
  (original "gender that is gender of student whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what student has an end date no later than the end date of alice")
  (original "student whose end date is at most end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "student who graduated before alice quit her job")
  (original "student whose end date is smaller than end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "employee whose end date is before start ate of employee alice")
  (original "employee whose end date is smaller than start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "when did alice stop attending brown university")
  (original "end date of student alice whose university is brown university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string university) (string =) en.university.brown) (string education_end_date)))

  )
)
(example
  (utterance "people who quit their job after 2004")
  (original "employee whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find employee with start date on or before alices")
  (original "employee whose start date is at most start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find employees friends with last date of work before 2004")
  (original "person that is friends with employee whose end date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "which students starte school the same day alice graduated")
  (original "student whose start date is end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "student whose end date is after start date of student alice")
  (original "student whose end date is larger than start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "relationship status of employee whose end date is not after 2004")
  (original "relationship status that is relationship status of employee whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "whats the relationship status of employees who are not software engineers")
  (original "relationship status that is relationship status of employee whose job title is not software engineer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string !=) en.job_title.software_engineer)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "whos got more than 2 genders down")
  (original "person that has more than two gender")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string >) (number 2)))

  )
)
(example
  (utterance "where were people that stopped working in or after 2004 born")
  (original "city that is birthplace of employee whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "students finishing on or after alices birthday")
  (original "student whose end date is at least birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find me all people that are friends with the employee starting after 2004")
  (original "person that is friends with employee whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "person whos 6 feet tall and studies computer science")
  (original "person whose height is 180 cm and whose field of study is computer science")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string field_of_study) (string =) en.field.computer_science))

  )
)
(example
  (utterance "is the person male or female")
  (original "person whose gender is male or female")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.gender.male en.gender.female)))

  )
)
(example
  (utterance "who started working the same day alice left")
  (original "employee whose end date is at least end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "which city a person is born in whose year of birth is 2004")
  (original "city that is birthplace of person whose birthdate is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1))))

  )
)
(example
  (utterance "a student who left on or before alices birthday")
  (original "student whose end date is at most birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what is the relationship status of the person logged in")
  (original "relationship status that is relationship status of person that is logged in")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in))))

  )
)
(example
  (utterance "people that finished school before 2004 or before 2010")
  (original "student whose end date is smaller than 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "a student who left before alice started")
  (original "student whose end date is larger than start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find me the employee who has had the most previous jobs")
  (original "employee that has the most number of employer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string max) (string employer))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find people with same birth date as alice or later")
  (original "person whose birthdate is at least birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate)))))

  )
)
(example
  (utterance "relationship status of employee whose end date is not before 2004")
  (original "relationship status that is relationship status of student whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find all people who born in new york in 2004")
  (original "person whose birthplace is new york and whose birthdate is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) en.city.new_york) (string birthdate) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "birthplace of employees whose end date is before 2004")
  (original "city that is birthplace of employee whose end date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find employees with the same last day as alice")
  (original "employee whose end date is end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what employees have mickinsey as their employer")
  (original "employee whose employer is mckinsey or google")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employer) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.company.mckinsey en.company.google))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find me the student whose field of study is not computer science")
  (original "person that is friends with student whose field of study is not computer science")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string !=) en.field.computer_science)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find friends of student who started later than 2004")
  (original "person that student whose start date is larger than 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "friends of alice or bob")
  (original "person that alice or bob is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.person.alice en.person.bob)))

  )
)
(example
  (utterance "when did alice start her study in the field of computer science")
  (original "start date of student alice whose field of study is computer science")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string field_of_study) (string =) en.field.computer_science) (string education_start_date)))

  )
)
(example
  (utterance "two or more gendered people")
  (original "person that has at least two gender")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string >=) (number 2)))

  )
)
(example
  (utterance "who is same gender as of at least two persons")
  (original "gender that is gender of the least number of person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "who is male and friends with alice")
  (original "person whose gender is male and that is friends with alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) en.gender.male) (string friend) (string =) en.person.alice))

  )
)
(example
  (utterance "what students have a start date that is equal to alices birthday or later")
  (original "student whose start date is at least birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "friends of people who joined their jobs after 2004")
  (original "person that employee whose start date is larger than 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what relationship status is that of two people at the most")
  (original "relationship status that is relationship status of at most two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string <=) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "name a person who quit no later than 2004")
  (original "person that employee whose end date is at most 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "which gender is the employee who ended after 2004")
  (original "gender that is gender of employee whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "employees who finish on or after alice starts")
  (original "employee whose end date is at least start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "which employee has less than two job titles")
  (original "employee that has less than two job title")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string job_title) (string <) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what are the current relationship statuses of employees who have a start date that is anything but 2004")
  (original "relationship status that is relationship status of employee whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "a student that attends the same university as alice")
  (original "student whose university is university of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string university) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string university)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "who has a single friend")
  (original "person that is friends with person whose relationship status is single")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) en.relationship_status.single)))

  )
)
(example
  (utterance "people that stopped working when alice started or after")
  (original "employee whose end date is at least start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "students who started in or before 2004 or 2010")
  (original "student whose start date is at most 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "student who left on or before alices joining")
  (original "student whose end date is at least start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "friends of alice that are currently online")
  (original "person that is friends with alice and that is logged in")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) en.person.alice) (string logged_in)))

  )
)
(example
  (utterance "employees whose end date is no earlier than alices end date")
  (original "employee whose end date is at least end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what is alices first date of studying computer science in school")
  (original "start date of student alice whose field of study is computer science")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string field_of_study) (string =) en.field.computer_science) (string education_start_date)))

  )
)
(example
  (utterance "gender of student whose start date is before 2004")
  (original "gender that is gender of student whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "students who didnt graduate in 2004")
  (original "student whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "people that are not 180 cm tall")
  (original "person whose height is not 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string !=) (number 180 en.cm)))

  )
)
(example
  (utterance "friends with employee who are born atleast before 2004")
  (original "person that is friends with employee whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what is the relationship status of fewer than two people")
  (original "relationship status that is relationship status of less than two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string <) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "find me the employees who quit between 2004 and 2010")
  (original "employee whose end date is larger than 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "who is the software engineer who is 180 cm tall")
  (original "person whose height is 180 cm and whose job title is software engineer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string job_title) (string =) en.job_title.software_engineer))

  )
)
(example
  (utterance "when did alice stop working as a software engineer")
  (original "end date of employee alice whose job title is software engineer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string job_title) (string =) en.job_title.software_engineer) (string employment_end_date)))

  )
)
(example
  (utterance "find all male friends of alice")
  (original "person whose gender is male and that is friends with alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) en.gender.male) (string friend) (string =) en.person.alice))

  )
)
(example
  (utterance "students who left by the time alice left")
  (original "student whose end date is at most end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which relationship statuses are claimed by the males in my network")
  (original "relationship status that is relationship status of person whose gender is male")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) en.gender.male)))

  )
)
(example
  (utterance "which people are friends with students who started no sooner than 2004")
  (original "person that is friends with student whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "which employee started earliest")
  (original "employee that has the smallest start date")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find all people who are friends with less than two other people")
  (original "person that is friends with less than two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string <) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "sex of people who began school in 2004 or later")
  (original "gender that is gender of student whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find all alices friends that are male")
  (original "person that alice is friends with and whose gender is male")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice) (string gender) (string =) en.gender.male))

  )
)
(example
  (utterance "alices friends who are currently online")
  (original "person that is logged in and that alice is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice))

  )
)
(example
  (utterance "find me a person with the same or later birthday as alice")
  (original "person whose birthdate is at least birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate)))))

  )
)
(example
  (utterance "name the friend of alice with a height of 180cm")
  (original "person whose height is 180 cm and that alice is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice))

  )
)
(example
  (utterance "what gender is the employee who is not employed by mckinsey")
  (original "gender that is gender of employee whose employer is not mckinsey")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employer) (string !=) en.company.mckinsey)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "students who began school after alice graduated")
  (original "student whose start date is larger than end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "relationship status of two persons")
  (original "relationship status that is relationship status of two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "what people have two genders")
  (original "person that has two gender")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) (number 2)))

  )
)
(example
  (utterance "find the tallest person")
  (original "person that has the largest height")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string height))))

  )
)
(example
  (utterance "people who were born before alice started her job")
  (original "person whose birthdate is smaller than start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date)))))

  )
)
(example
  (utterance "what is the relationship status of employees who began working by 2004")
  (original "relationship status that is relationship status of employee whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "people who ate 180 cm tall")
  (original "person whose height is 180 cm and whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string height) (string =) (number 180 en.cm)))

  )
)
(example
  (utterance "which employees have fewer than 2 job titles")
  (original "employee that has less than two job title")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string job_title) (string <) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "friends of people who completed their studies in an year other than 2004")
  (original "person that student whose end date is not 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "people who are friends with a student who did not start in 2004")
  (original "person that is friends with student whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find employees with an end date that is no later than alices birthday")
  (original "employee whose end date is at most birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find people born after alices graduation from school")
  (original "person whose birthdate is larger than end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date)))))

  )
)
(example
  (utterance "student who has not more than two fields of study")
  (original "student that has at most two field of study")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string field_of_study) (string <=) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what is the student end date at least 2004")
  (original "relationship status that is relationship status of student whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "who is 180 cm tall and the same relationship status as alice")
  (original "person whose height is 180 cm and that is relationship status of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) en.person.alice))

  )
)
(example
  (utterance "who is the 180 cm tall")
  (original "person whose height is person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "who does mckinsey employ who is 180 cm tall")
  (original "person whose height is 180 cm and whose employer is mckinsey")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string employer) (string =) en.company.mckinsey))

  )
)
(example
  (utterance "name a person in more than two relationships")
  (original "person that has more than two relationship status")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string >) (number 2)))

  )
)
(example
  (utterance "who is online and is friends with")
  (original "person that is logged in and that alice is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice))

  )
)
(example
  (utterance "a student with two or fewer majors")
  (original "student that has at most two field of study")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string field_of_study) (string <=) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "who has three or more relationship statuses")
  (original "person that has more than two relationship status")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string >) (number 2)))

  )
)
(example
  (utterance "who are people with a birthdate of 2004 friends with")
  (original "person that person whose birthdate is 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1))))

  )
)
(example
  (utterance "find people born after alice")
  (original "person whose birthdate is at most birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate)))))

  )
)
(example
  (utterance "people that started working the same time as alice")
  (original "employee whose start date is start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find student with last day on alices birthday")
  (original "student whose end date is birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find the students whose end date is either 2004 or 2010")
  (original "student whose end date is 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "people who are friends with employees who started before 2004")
  (original "person that is friends with employee whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "student who started after alice left")
  (original "student whose start date is larger than end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "relationship status of employee whose job title is not software engineer")
  (original "relationship status that is relationship status of employee whose job title is not software engineer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string !=) en.job_title.software_engineer)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "which students started no earlier than alices birthdate")
  (original "student whose start date is at least birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what students have an end date after 2004")
  (original "student whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "birth city of student whose start date is not 2004")
  (original "city that is birthplace of student whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "which employee started after the student named alice")
  (original "employee whose start date is larger than start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "which student started on alices birthdate")
  (original "student whose start date is at least birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find friends of people who started school in 2004 at the latest")
  (original "person that student whose start date is at most 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "where wa alice not born")
  (original "city that is not birthplace of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string !=) en.person.alice))

  )
)
(example
  (utterance "a student starting after alice")
  (original "student whose start date is larger than start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which 180 cm tall people started in 2004")
  (original "person whose height is 180 cm and whose start date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string education_start_date) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "when did alice start working as a software engineer")
  (original "start date of employee alice whose job title is software engineer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string job_title) (string =) en.job_title.software_engineer) (string employment_start_date)))

  )
)
(example
  (utterance "someone with two relationship status")
  (original "person that has two relationship status")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) (number 2)))

  )
)
(example
  (utterance "gender of student whose end date is after 2004")
  (original "gender that is gender of student whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find alices singlestatus friends")
  (original "person whose relationship status is single and that is friends with alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) en.relationship_status.single) (string friend) (string =) en.person.alice))

  )
)
(example
  (utterance "what is the status of alices relationship")
  (original "relationship status of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string relationship_status)))

  )
)
(example
  (utterance "what students had a start date of 2004 or 2010")
  (original "student whose start date is at most 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what is the gender of employees sho started before 2004")
  (original "gender that is gender of employee whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find students starting 2010 or before")
  (original "student whose start date is at most 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "people who were born after 2010")
  (original "person whose birthdate is at least 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1)))))

  )
)
(example
  (utterance "what city is the birthplace of an employee who has a start date later than 2004")
  (original "city that is birthplace of employee whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what employee has the greatest number of employers")
  (original "employee that has the most number of employer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string max) (string employer))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "students who start before or on 2004")
  (original "student whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which of alices friends are single")
  (original "person that alice is friends with and whose relationship status is single")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice) (string relationship_status) (string =) en.relationship_status.single))

  )
)
(example
  (utterance "person who is friends with a student that graduated in 2004 or before")
  (original "person that is friends with student whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find students with a start date after either 2004 or 2010")
  (original "student whose start date is larger than 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "employee who works for mckinsey or google")
  (original "employee whose employer is mckinsey or google")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employer) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.company.mckinsey en.company.google))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find alices friends who are single")
  (original "person that alice is friends with and whose relationship status is single")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice) (string relationship_status) (string =) en.relationship_status.single))

  )
)
(example
  (utterance "what is the relationship status of the two people")
  (original "relationship status that is relationship status of two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "what is the birthplace of the person born in 2004")
  (original "city that is birthplace of person whose birthdate is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1))))

  )
)
(example
  (utterance "friends of people whose job title is not software engineers")
  (original "person that employee whose job title is not software engineer is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string !=) en.job_title.software_engineer)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "relationship status that is not similar to alice")
  (original "relationship status that is not relationship status of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string !=) en.person.alice))

  )
)
(example
  (utterance "whats the gender of students who started school after 2004")
  (original "gender that is gender of student whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "which people have a birthdate of 2004 and are friends with alice")
  (original "person whose birthdate is 2004 and that alice is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice))

  )
)
(example
  (utterance "name a friend of a student who did not graduate in 2004")
  (original "person that student whose end date is not 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find people logged in who are 180 cm tall")
  (original "person that is logged in and whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in)) (string height) (string =) (number 180 en.cm)))

  )
)
(example
  (utterance "what employees have a start date before that of student alice")
  (original "employee whose start date is smaller than start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what is gender of students starting in years other than 2004")
  (original "gender that is gender of student whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "friends of people who quit their jobs in an year other than 2004")
  (original "person that employee whose end date is not 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "people who are friends with an employee that started before 2004")
  (original "person that is friends with employee whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "who is friends with the person who didnt start in 2004")
  (original "person that student whose start date is not 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "when did alice stop working for mckinsey")
  (original "end date of employee alice whose employer is mckinsey")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employer) (string =) en.company.mckinsey) (string employment_end_date)))

  )
)
(example
  (utterance "person born in new york and who is 180 cm tall")
  (original "person whose birthplace is new york and whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) en.city.new_york) (string height) (string =) (number 180 en.cm)))

  )
)
(example
  (utterance "people that have employed friends that did not start working in 2004")
  (original "person that is friends with employee whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what is the relationship status of students who are not majoring in compuer science")
  (original "relationship status that is relationship status of student whose field of study is not computer science")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string !=) en.field.computer_science)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "which employer of alices ended in 2004")
  (original "employer of employee alice whose end date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date) (string =) (date 2004 -1 -1)) (string employer)))

  )
)
(example
  (utterance "who are men friends with")
  (original "person that person whose gender is male is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) en.gender.male)))

  )
)
(example
  (utterance "what is the birth city of students who have a field of study other than computer science")
  (original "city that is birthplace of student whose field of study is not computer science")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string !=) en.field.computer_science)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "who was born in 2004 and is 180 cm tall")
  (original "person whose birthdate is 2004 and whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1)) (string height) (string =) (number 180 en.cm)))

  )
)
(example
  (utterance "180 cm tall person with same relationship status as that of alice")
  (original "person whose height is 180 cm and that is relationship status of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) en.person.alice))

  )
)
(example
  (utterance "what is job title of alice who is employed since 2004")
  (original "job title of employee alice whose start date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date) (string =) (date 2004 -1 -1)) (string job_title)))

  )
)
(example
  (utterance "someone 180 cm tall who started in 2004")
  (original "person whose height is 180 cm and whose start date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string education_start_date) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "what city is the birthplace of an employee that is not a software engineer")
  (original "city that is birthplace of employee whose job title is not software engineer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string !=) en.job_title.software_engineer)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what student has a start date the same time as the birthdate of alice")
  (original "student whose start date is birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what cities were students born in who started after 2004")
  (original "city that is birthplace of student whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what is the end date of alice at mckinseys")
  (original "end date of employee alice whose employer is mckinsey")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employer) (string =) en.company.mckinsey) (string employment_end_date)))

  )
)
(example
  (utterance "find students with fewest fields of study")
  (original "student that has the least number of field of study")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string min) (string field_of_study))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "any male born in 2004")
  (original "person whose birthdate is 2004 and whose gender is male")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1)) (string gender) (string =) en.gender.male))

  )
)
(example
  (utterance "people with at most two friends")
  (original "person that at most two person is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string <=) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "what is the universitys number")
  (original "number of university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call .size (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.university) (string !type))))

  )
)
(example
  (utterance "when did alice stop working")
  (original "end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date)))

  )
)
(example
  (utterance "find me an employee whose start date is before or equal to the end date of student alice")
  (original "employee whose start date is at most end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find me the birthplace of employees who quit since 2004")
  (original "city that is birthplace of employee whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "which students graduate the day alice starts school")
  (original "student whose end date is start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what is the gender of the students who dont graduate in 2004")
  (original "gender that is gender of student whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find the gender of students who have a field of study in something other than computer science")
  (original "gender that is gender of student whose field of study is not computer science")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string !=) en.field.computer_science)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what is the relationship status of students with a start date less than 2004")
  (original "relationship status that is relationship status of student whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "which employees last day is no later than alices first day")
  (original "employee whose end date is at most start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "mention the name of an employee whose end date is either 2004 or 2010")
  (original "employee whose end date is 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find the city that is the birthplace of only one person")
  (original "city that is birthplace of less than two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string <) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "which students started before alices birthdate")
  (original "student whose start date is smaller than birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "who is alices boss")
  (original "employee whose employer is employer of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employer) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employer)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "which employees started no later than alice did")
  (original "employee whose start date is at least start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what is the birthplace of employees whose last day was after 2004")
  (original "city that is birthplace of employee whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what employees have an end date that is smaller than that of employee alice")
  (original "employee whose end date is smaller than end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "employee who joined before 2005")
  (original "employee whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "which students started after 2004")
  (original "student whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what employer has the least amount of employees")
  (original "employee that has the least number of employer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string min) (string employer))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "name a person who is 180 cm tall and who quit in 2004")
  (original "person whose height is 180 cm and whose end date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string education_end_date) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "what genders are people that started school in any year but 2004")
  (original "gender that is gender of student whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find people born in 2004 who are friends with alice")
  (original "person whose birthdate is 2004 and that is friends with alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1)) (string friend) (string =) en.person.alice))

  )
)
(example
  (utterance "a student who left at the same time as alice or before")
  (original "student whose end date is at least end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what is the relationship status of employees whose last day was not in 2004")
  (original "relationship status that is relationship status of employee whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "gender of a student who was enrolled after 2004")
  (original "gender that is gender of student whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "gender of students whos end date is 2004 or more")
  (original "gender that is gender of student whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "employee who started earliest")
  (original "employee that has the smallest start date")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "who is the same height as alice")
  (original "person whose height is 180 cm and that is height of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string height)) (string =) en.person.alice))

  )
)
(example
  (utterance "which employee was the first to be hired")
  (original "employee that has the smallest start date")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "name the birthplace city of the employee whose end date is larger than 2004")
  (original "city that is birthplace of employee whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "who is friends with an employee who started in a year other than 2004")
  (original "person that is friends with employee whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find students with a start date that is earlier than that of fellow student alice")
  (original "student whose start date is smaller than end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "people that are friends with someone that started school in or after 2004")
  (original "person that is friends with student whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find the people who are friends with people who quit their job before 2005")
  (original "person that is friends with employee whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find people with a height of 180 cm that go to brown university")
  (original "person whose height is 180 cm and whose university is brown university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string university) (string =) en.university.brown))

  )
)
(example
  (utterance "what sex are the students who stated before 2004")
  (original "gender that is gender of student whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "which city is the birthplace of two or less people")
  (original "city that is birthplace of at most two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string <=) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "a friend of someone born in 2004")
  (original "person that person whose birthdate is 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1))))

  )
)
(example
  (utterance "find people 180 cm tall with 2004 end dates")
  (original "person whose height is 180 cm and whose end date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string education_end_date) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "who is friends with alice and has a birthdate on 2004")
  (original "person that is friends with alice and whose birthdate is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) en.person.alice) (string birthdate) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "who are the friends of students with an end date that is not 2004")
  (original "person that student whose end date is not 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "who is male and 180 cm tall")
  (original "person whose gender is male and whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) en.gender.male) (string height) (string =) (number 180 en.cm)))

  )
)
(example
  (utterance "find me all students who have only one field of study")
  (original "student that has less than two field of study")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string field_of_study) (string <) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "employee whose start date is before the start date of employee alice")
  (original "employee whose start date is smaller than start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what person has two birthplaces")
  (original "person that has two birthplace")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) (number 2)))

  )
)
(example
  (utterance "employees who started after alice")
  (original "employee whose start date is larger than start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "students whose end date is larger than 2004 and 2010")
  (original "student whose end date is larger than 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what worker left before 2004")
  (original "employee whose end date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "fins birthplaces of employees with last day after 2004")
  (original "city that is birthplace of employee whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find employees who have a start date no later than student alices start date")
  (original "employee whose start date is at most start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "which employee started earlier than alices end date")
  (original "employee whose start date is smaller than end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "relationship status of max two people")
  (original "relationship status that is relationship status of at most two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string <=) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "people that started work when alice started school or after")
  (original "employee whose start date is at least start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "friends of employees who started before 2004")
  (original "person that is friends with employee whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "employees whose end date is after alices end date")
  (original "employee whose end date is larger than end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "people born on or after the day alice quit working")
  (original "person whose birthdate is at least end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date)))))

  )
)
(example
  (utterance "find me all people who are not friends with alice")
  (original "person that alice not is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string !=) en.person.alice))

  )
)
(example
  (utterance "what was alices last day of work")
  (original "end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date)))

  )
)
(example
  (utterance "people that studied at at most two universities")
  (original "student that has at most two university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string university) (string <=) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what employee has an end date that is at least the end date for the employee alice")
  (original "employee whose end date is at least end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "person that started working most recently")
  (original "employee that has the largest start date")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "students whose end date is 2004 or earlier")
  (original "student whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "people that started school after 2004 or after 2010")
  (original "student whose start date is larger than 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find me all students that will be leaving the company by the time alice starts")
  (original "student whose end date is at most start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what person has the least friends")
  (original "person that is friends with the least number of person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string min) (string friend) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "who is a person whose friends with alice that is single")
  (original "person that alice is friends with and whose relationship status is single")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice) (string relationship_status) (string =) en.relationship_status.single))

  )
)
(example
  (utterance "anyone single who is logged in")
  (original "person that is logged in and whose relationship status is single")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in)) (string relationship_status) (string =) en.relationship_status.single))

  )
)
(example
  (utterance "student who finishes at most on 2004 or 2010")
  (original "student whose end date is at most 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find a list of cities that students whose end date is at least 2004 were born in")
  (original "city that is birthplace of student whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "people whose end date is not in 2004")
  (original "employee whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "employees who started working at the same time as or before alice")
  (original "employee whose start date is at most start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find the friends of people who quit their job after 2004")
  (original "person that is friends with employee whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find the birthplace of people who are 6 feet tall")
  (original "person whose birthplace is person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "find me the oldest person")
  (original "person that has the smallest birthdate")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate))))

  )
)
(example
  (utterance "what student ended school before 2004 or 2010")
  (original "student whose end date is smaller than 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which student left most recently")
  (original "student that has the largest end date")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find all people who are mutual friends with alice")
  (original "person that alice is friends with and that alice is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice))

  )
)
(example
  (utterance "which student started after alice")
  (original "student whose start date is larger than start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "employees with the most job titles")
  (original "employee that has the most number of job title")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string max) (string job_title))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find all of alices friends that are currently online")
  (original "person that alice is friends with and that is logged in")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice) (string logged_in)))

  )
)
(example
  (utterance "people who completed study before alice joined the job")
  (original "student whose end date is larger than start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find friends of people who are 180 cm tall")
  (original "person that is friends with person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "what employees have an end date that is employee alices start date or later")
  (original "employee whose end date is at least start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find phone number of university")
  (original "number of university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call .size (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.university) (string !type))))

  )
)
(example
  (utterance "people who are single that are currently online")
  (original "person whose relationship status is single and that is logged in")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) en.relationship_status.single) (string logged_in)))

  )
)
(example
  (utterance "what are genders of students not attending brown university")
  (original "gender that is gender of student whose university is not brown university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string university) (string !=) en.university.brown)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "which university does the person who is 180 cm attend")
  (original "university that is university of person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.university) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string university)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "job titles of all people who are 180 cm tall")
  (original "job title that is job title of person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.job_title) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string job_title)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "find people who are 180 cm tall with 2004 start date")
  (original "person whose height is 180 cm and whose start date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string education_start_date) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "what are the current relationship statuses of students with a start date of 2004 or later")
  (original "relationship status that is relationship status of student whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "who is friends with the person who started working after 2004")
  (original "person that employee whose start date is larger than 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "people who were born in 2004")
  (original "person whose birthdate is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "gender of student who does not finish by 2004")
  (original "gender that is gender of student whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find a person who is a student with a start date that is not 2004 and their friends")
  (original "person that student whose start date is not 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what is the relationship status of a worker who left before 2004")
  (original "relationship status that is relationship status of employee whose end date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find student with start date before or on alices start date")
  (original "student whose start date is at most start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "students starting before or with alice")
  (original "student whose start date is at most start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what is the gender of students with an end date ealier than 2004")
  (original "gender that is gender of student whose end date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what city is the birthplace of a student who graduated 2004 or after")
  (original "city that is birthplace of student whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find students who attended one or two universites")
  (original "student that has at most two university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string university) (string <=) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find students who have an end date that is equal or later to that of student alice")
  (original "student whose end date is at least start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what is the gender of students with last day in 2004 or before")
  (original "gender that is gender of student whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "who started first")
  (original "student that has the smallest start date")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what people are friends with students whom have an end date that is no greater than 2004")
  (original "person that is friends with student whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what students have a start date that is anything but 2004")
  (original "student whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "who has minimum number of relationship statuses")
  (original "person that has the least number of relationship status")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string min) (string relationship_status)))

  )
)
(example
  (utterance "what field is alice studying in brown university")
  (original "field of study of student alice whose university is brown university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string university) (string =) en.university.brown) (string field_of_study)))

  )
)
(example
  (utterance "male friend of alice")
  (original "person that is friends with alice and whose gender is male")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) en.person.alice) (string gender) (string =) en.gender.male))

  )
)
(example
  (utterance "what student had a start date no earlier than alice")
  (original "student whose start date is at least start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what is the city that is the birthplace of at least two people")
  (original "city that is birthplace of less than two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string <) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "who was the last employee to quit")
  (original "employee that has the largest end date")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what is the gender of employees who did not stop working in 2004")
  (original "gender that is gender of employee whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "where were employees at companies other than mckinsey born")
  (original "city that is birthplace of employee whose employer is not mckinsey")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employer) (string !=) en.company.mckinsey)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "who stopped working in 2004 or later")
  (original "employee whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "which employees strated before 2004")
  (original "employee whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find students starting on or after employee alices first day")
  (original "student whose start date is at least end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find students studying fields other than computer science")
  (original "student whose field of study is not computer science")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string !=) en.field.computer_science)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find people who are not friends with alice")
  (original "person that not is friends with alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string !=) en.person.alice))

  )
)
(example
  (utterance "a 180 cm tall mckinsey employee")
  (original "person whose height is 180 cm and whose employer is mckinsey")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string employer) (string =) en.company.mckinsey))

  )
)
(example
  (utterance "student whose end date is before start date of alice")
  (original "student whose end date is smaller than start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find me all the people who are friends with people that did not attend brown")
  (original "person that is friends with student whose university is not brown university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string university) (string !=) en.university.brown)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "select new york or beijing")
  (original "new york or beijing")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.city.new_york en.city.bejing))

  )
)
(example
  (utterance "gender of people studied in fields other than computer science")
  (original "gender that is gender of student whose field of study is not computer science")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string !=) en.field.computer_science)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "gender employee whose end date is not 2004")
  (original "gender that is gender of employee whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "people who are the same height as alice or shorter")
  (original "person whose height is at most height of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string height)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string height)))))

  )
)
(example
  (utterance "people born after alice finished school")
  (original "person whose birthdate is larger than end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date)))))

  )
)
(example
  (utterance "birthplace of people who completed their study in an year other than 2004")
  (original "city that is birthplace of student whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what is the relationship status of people that started work in or before 2004")
  (original "relationship status that is relationship status of employee whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what are the birth cities of students who have an end date that is not 2004")
  (original "city that is birthplace of student whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "people that are friends with students hired to start on or before 2004")
  (original "person that is friends with student whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "who is friends of employees who have a job titale other than software engineer")
  (original "person that employee whose job title is not software engineer is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string !=) en.job_title.software_engineer)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find students friends who started in a year other than 2004")
  (original "person that is friends with student whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what city were two or fewer people born in")
  (original "city that is birthplace of at most two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string <=) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "whos friends with someone who left a company or retired before 2004")
  (original "person that employee whose end date is smaller than 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find employee who starts after alices last day")
  (original "employee whose start date is larger than end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "person born after alice")
  (original "person whose birthdate is larger than birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate)))))

  )
)
(example
  (utterance "birthplace of students who did not join in 2004")
  (original "city that is birthplace of student whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what is the relationship status of the majority of people")
  (original "relationship status that is relationship status of more than two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string >) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "an employee ending after alice was born")
  (original "employee whose end date is at least birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "which people are friends with students who didnt graduate in 2004")
  (original "person that student whose end date is not 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what is the gender of employees whose start date is no later than 2004")
  (original "gender that is gender of employee whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "which people are single or married")
  (original "person whose relationship status is single or married")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.relationship_status.single en.relationship_status.married)))

  )
)
(example
  (utterance "which person born in new york is 180 cm tall")
  (original "person whose height is 180 cm and whose birthplace is new york")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string birthplace) (string =) en.city.new_york))

  )
)
(example
  (utterance "student that has studied at no more than 2 universities")
  (original "student that has at most two university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string university) (string <=) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which men is alice friends with")
  (original "person whose gender is male and that is friends with alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) en.gender.male) (string friend) (string =) en.person.alice))

  )
)
(example
  (utterance "find employees who started on student alices last day")
  (original "employee whose start date is end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "employees who started before alice quit school")
  (original "employee whose start date is at most end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "people born in any year except 2004")
  (original "person whose birthdate is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string !=) (date 2004 -1 -1)))

  )
)
(example
  (utterance "friends of people who completed their studies after 2004")
  (original "person that student whose start date is larger than 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find friends of people who do not work at mckinsey")
  (original "person that employee whose employer is not mckinsey is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employer) (string !=) en.company.mckinsey)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find all alices friends that were born in new york")
  (original "person that alice is friends with and whose birthplace is new york")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice) (string birthplace) (string =) en.city.new_york))

  )
)
(example
  (utterance "where was alice not born")
  (original "city that is not birthplace of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string !=) en.person.alice))

  )
)
(example
  (utterance "relationship status of student who does not graduate by 2004")
  (original "relationship status that is relationship status of student whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find the people who joined their work before 2005")
  (original "employee whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what is the number of the field")
  (original "number of field")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call .size (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.field) (string !type))))

  )
)
(example
  (utterance "students who started in 2004 or later")
  (original "student whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find the birth city of employees with an end date later than 2004")
  (original "city that is birthplace of employee whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "who has friends who are single")
  (original "person that person whose relationship status is single is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) en.relationship_status.single)))

  )
)
(example
  (utterance "find all people who have more than two friends")
  (original "person that more than two person is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string >) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "birthplace of employees finishing in or after 2004")
  (original "city that is birthplace of employee whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "people who are born in new york and are 180 cm tall")
  (original "person whose birthplace is new york and whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) en.city.new_york) (string height) (string =) (number 180 en.cm)))

  )
)
(example
  (utterance "which single people are 180 cm tall")
  (original "person whose relationship status is single and whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) en.relationship_status.single) (string height) (string =) (number 180 en.cm)))

  )
)
(example
  (utterance "which employee started no later than alice")
  (original "employee whose start date is at most start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what university did alice study computer science at")
  (original "university of student alice whose field of study is computer science")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string field_of_study) (string =) en.field.computer_science) (string university)))

  )
)
(example
  (utterance "student whose end date is after 2004")
  (original "student whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "students whose quit date of job is same as employee alices ")
  (original "student whose end date is at least end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "who has similar relationship status that of alice")
  (original "relationship status that is relationship status of alice and that is relationship status of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) en.person.alice) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) en.person.alice))

  )
)
(example
  (utterance "who is the friend of a person whose end date is at least 2004")
  (original "person that is friends with student whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "who was born on a date before alices start date")
  (original "person whose birthdate is smaller than start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date)))))

  )
)
(example
  (utterance "relationships statuses of employees who dont work as software engineers")
  (original "relationship status that is relationship status of employee whose job title is not software engineer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string !=) en.job_title.software_engineer)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "who was born in 2004 who is friends with alice")
  (original "person that is friends with alice and whose birthdate is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) en.person.alice) (string birthdate) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "what person has a birthdate earlier than 2004")
  (original "person whose birthdate is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1))))

  )
)
(example
  (utterance "people who are friends who employees who didnt quit in 2004")
  (original "person that is friends with employee whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find me the genders of students who attended after 2004")
  (original "gender that is gender of student whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what city was the employee that started after 2004 born in")
  (original "city that is birthplace of employee whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "employee whose start date is after the end date of employee alice")
  (original "employee whose start date is larger than end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "who has a birthdate at the end of alices employment")
  (original "person whose birthdate is at most end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date)))))

  )
)
(example
  (utterance "gender of student whose field of study is not computer science")
  (original "gender that is gender of student whose field of study is not computer science")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string !=) en.field.computer_science)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "people born between 2004 and 2010")
  (original "person whose birthdate is at least 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1)))))

  )
)
(example
  (utterance "what people have two birthplaces")
  (original "person that has two birthplace")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) (number 2)))

  )
)
(example
  (utterance "find employees friends who started in 2004 or before")
  (original "person that is friends with employee whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what is the gender of students not attending brown university")
  (original "gender that is gender of student whose university is not brown university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string university) (string !=) en.university.brown)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "people who are friends with employees who quit their job in or after 2004")
  (original "person that is friends with employee whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "job titles of people that are 180 cm tall")
  (original "job title that is job title of person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.job_title) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string job_title)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "people who are 180 cm tall and are currently online")
  (original "person that is logged in and whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in)) (string height) (string =) (number 180 en.cm)))

  )
)
(example
  (utterance "name an employee who quit after alice")
  (original "employee whose end date is larger than end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what is the relationship status of people that stopped school in or before 2004")
  (original "relationship status that is relationship status of student whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what do people study who are 180 cm")
  (original "field that is field of study of person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.field) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string field_of_study)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "who was born after alice started")
  (original "person whose birthdate is larger than start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date)))))

  )
)
(example
  (utterance "what employees have a start date no later than 2004")
  (original "employee whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "when did alice leave the job she started in 2004")
  (original "end date of employee alice whose start date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date) (string =) (date 2004 -1 -1)) (string employment_end_date)))

  )
)
(example
  (utterance "birthplace of students whose end date is no greater than 2004")
  (original "city that is birthplace of student whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what is total number of univeristies")
  (original "number of university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call .size (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.university) (string !type))))

  )
)
(example
  (utterance "which people have at least two birthplaces")
  (original "person that has at least two birthplace")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string >=) (number 2)))

  )
)
(example
  (utterance "which student has a start date earlier than 2004")
  (original "student whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "the gender of a student that starts after 2004")
  (original "gender that is gender of student whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "which of alices friends are online right now")
  (original "person that is logged in and that alice is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice))

  )
)
(example
  (utterance "the gender of an employee that started before 2004")
  (original "gender that is gender of employee whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what is the birthplace of an employee who left in 2004 or later")
  (original "city that is birthplace of employee whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "people born on or before the day alice quit her job")
  (original "person whose birthdate is at most end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date)))))

  )
)
(example
  (utterance "which students graduate before 2004 or 2010")
  (original "student whose end date is smaller than 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what is the relationship status of people who are 180 cm tall")
  (original "relationship status that is relationship status of person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "a student who has studied at the fewest universities")
  (original "student that has the least number of university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string min) (string university))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "relationship status of employee whose start ate is before 2004")
  (original "relationship status that is relationship status of employee whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "student whose end date is not 2004")
  (original "student whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "who is friends with alice and is 180 cm tall")
  (original "person whose height is 180 cm and that alice is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice))

  )
)
(example
  (utterance "does alice work at mckinsey")
  (original "employer of employee alice whose employer is mckinsey")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employer) (string =) en.company.mckinsey) (string employer)))

  )
)
(example
  (utterance "person with the same birthday as alice")
  (original "person whose birthdate is birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))

  )
)
(example
  (utterance "find employees that have a start date that is the same as student alices")
  (original "employee whose start date is start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find employees whom have an end date bigger than the start date for employee alice")
  (original "employee whose end date is larger than start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find students with a start date no later than 2004")
  (original "student whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "who is now friends with the person who was born in new york")
  (original "person that person whose birthplace is new york is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) en.city.new_york)))

  )
)
(example
  (utterance "what student started before alice was born")
  (original "student whose start date is smaller than birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "people who have student friends who did not graduate in 2004")
  (original "person that is friends with student whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "student whose university is either brown university or ucla")
  (original "student whose university is brown university or ucla")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string university) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.university.brown en.university.ucla))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "relationship status of student whose end date is after 2004")
  (original "relationship status that is relationship status of student whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "employees who finish after alices birthday")
  (original "employee whose end date is larger than birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find people who are currently online and born in new york")
  (original "person that is logged in and whose birthplace is new york")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in)) (string birthplace) (string =) en.city.new_york))

  )
)
(example
  (utterance "find people of the same gender as alices friends")
  (original "gender that is gender of person that alice is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice)))

  )
)
(example
  (utterance "what employees have the earliest end date")
  (original "employee that has the smallest end date")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "all 180 cm tall people born in 2004")
  (original "person whose height is 180 cm and whose birthdate is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string birthdate) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "employees who started before alice")
  (original "employee whose start date is at most start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what is job title of employee alice whose end date is 2004")
  (original "job title of employee alice whose end date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date) (string =) (date 2004 -1 -1)) (string job_title)))

  )
)
(example
  (utterance "the relationship status of an employee is one with a start date of atleast 2004")
  (original "relationship status that is relationship status of employee whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what gender represents the least number of people")
  (original "gender that is gender of the least number of person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "180 cm tall brown university student")
  (original "person whose height is 180 cm and whose university is brown university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string university) (string =) en.university.brown))

  )
)
(example
  (utterance "what city is the birthplace of a student that is not studying computer science")
  (original "city that is birthplace of student whose field of study is not computer science")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string !=) en.field.computer_science)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "who was born on or after alices last day of employment")
  (original "person whose birthdate is at least end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date)))))

  )
)
(example
  (utterance "the gender of a student who started before 2004")
  (original "gender that is gender of student whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "student whose end date is birth date of alice")
  (original "student whose end date is birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "student whose start date is not before end date of student alice")
  (original "student whose start date is at least end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which employees have an eend date that is earlier than that of student alice")
  (original "employee whose end date is smaller than end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "people that stopped working in or before 2004 or in or before 2010")
  (original "employee whose end date is at most 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "relationship status of students whose start date is not 2004")
  (original "relationship status that is relationship status of student whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what date in 2004 is alices last day of work")
  (original "end date of employee alice whose end date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date) (string =) (date 2004 -1 -1)) (string employment_end_date)))

  )
)
(example
  (utterance "who has two or more relationship statuses at once")
  (original "person that has at least two relationship status")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string >=) (number 2)))

  )
)
(example
  (utterance "employee who quit before alice started")
  (original "employee whose end date is start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "a worker who didnt start in 2004")
  (original "employee whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find the people who joined study before alice")
  (original "student whose start date is at most start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "people studying the same thing as alice")
  (original "student whose field of study is field of study of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string field_of_study)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which employee started after alice started")
  (original "employee whose start date is larger than start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what is the birthplace of employees who started before 2004")
  (original "city that is birthplace of employee whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what student has an end date that is no greater than the start date of alice")
  (original "student whose end date is at most start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "how many gender options are there")
  (original "number of gender")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call .size (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type))))

  )
)
(example
  (utterance "people with two relationship statuses or less")
  (original "person that has at most two relationship status")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string <=) (number 2)))

  )
)
(example
  (utterance "who is not single")
  (original "person whose relationship status is not single")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string !=) en.relationship_status.single))

  )
)
(example
  (utterance "find relationship statuses of students with a start date that is 2004 or later")
  (original "relationship status that is relationship status of student whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find people who are friends with students who have a start date of 2004 or later")
  (original "person that is friends with student whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "which date alice the software engineer started")
  (original "start date of employee alice whose job title is software engineer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string job_title) (string =) en.job_title.software_engineer) (string employment_start_date)))

  )
)
(example
  (utterance "birth city of employees whose end date is after 2004")
  (original "city that is birthplace of employee whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find people who were born in new york who are 180 cm tall")
  (original "person whose birthplace is new york and whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) en.city.new_york) (string height) (string =) (number 180 en.cm)))

  )
)
(example
  (utterance "find all of alices friends that are currently online")
  (original "person that alice is friends with and that is logged in")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice) (string logged_in)))

  )
)
(example
  (utterance "what employee has an end date that is 2004 or later")
  (original "employee whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "who was born on the day alice left")
  (original "person whose birthdate is end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))

  )
)
(example
  (utterance "which student started before alice")
  (original "student whose start date is smaller than start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "who is alices single friend")
  (original "person that alice is friends with and whose relationship status is single")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice) (string relationship_status) (string =) en.relationship_status.single))

  )
)
(example
  (utterance "who works for the same employer as ailce")
  (original "employee whose employer is employer of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employer) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employer)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "which students graduate after alice started school")
  (original "student whose end date is larger than start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what person has a height of 180 to 200 cm")
  (original "person whose height is 180 cm or 200 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (number 180 en.cm) (number 200 en.cm))))

  )
)
(example
  (utterance "where were people that started school in any year but 2004 born")
  (original "city that is birthplace of student whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find students who joined after 2004")
  (original "student whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "who has had the most different relationship statuses")
  (original "person that has the most number of relationship status")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string max) (string relationship_status)))

  )
)
(example
  (utterance "student whose start date is not before birth date of alice")
  (original "student whose start date is at least birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what was alices job when she started in 2004")
  (original "job title of employee alice whose start date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date) (string =) (date 2004 -1 -1)) (string job_title)))

  )
)
(example
  (utterance "birthplace of employees who didnt start in 2004")
  (original "city that is birthplace of employee whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find me the people born in any year but 2004")
  (original "person whose birthdate is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string !=) (date 2004 -1 -1)))

  )
)
(example
  (utterance "find people born between 2004 and 2010")
  (original "person whose birthdate is at most 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1)))))

  )
)
(example
  (utterance "whats the gender of employees who didnt start in 2004")
  (original "gender that is gender of employee whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "students starting before alice finishes")
  (original "student whose start date is smaller than end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what is the relationship status of people with the birth place as newyork")
  (original "relationship status that is relationship status of person whose birthplace is new york")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) en.city.new_york)))

  )
)
(example
  (utterance "find all people born after alice quitted")
  (original "person whose birthdate is larger than end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date)))))

  )
)
(example
  (utterance "what employees before working before alice")
  (original "employee whose start date is smaller than start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find people taller than 180 cm")
  (original "person whose height is larger than 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string height)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 180 en.cm))))

  )
)
(example
  (utterance "birthplace of students whose end date is not in 2004")
  (original "city that is birthplace of student whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "which employees last day was no sooner than alices graduation day")
  (original "employee whose end date is at least end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "people that are shorter than 180 cm")
  (original "person whose height is smaller than 180 cm or 200 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string height)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (number 180 en.cm) (number 200 en.cm)))))

  )
)
(example
  (utterance "180 cm tall persons who quit in 2004")
  (original "person whose height is 180 cm and whose end date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string education_end_date) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "what is the relationship status of people that stopped working in or before 2004")
  (original "relationship status that is relationship status of employee whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "who is friends with the person who didnt graduate in 2004")
  (original "person that student whose end date is not 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what person has a birthdate larger than that of alice")
  (original "person whose birthdate is larger than start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date)))))

  )
)
(example
  (utterance "employee who quit after student alice quit her job")
  (original "employee whose end date is larger than end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "people who are friends with males")
  (original "person that is friends with person whose gender is male")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) en.gender.male)))

  )
)
(example
  (utterance "whats the relationship status of employees who quit after 2004")
  (original "relationship status that is relationship status of employee whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "people who are male and currently online")
  (original "person that is logged in and whose gender is male")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in)) (string gender) (string =) en.gender.male))

  )
)
(example
  (utterance "employee whose end date not after start date of student alice")
  (original "employee whose end date is at most start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "employee who joined before 2004 or in 2010")
  (original "employee whose start date is smaller than 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "people that are friends with someone in school studying something other than computer science")
  (original "person that is friends with student whose field of study is not computer science")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string !=) en.field.computer_science)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find me all the people who quit during or after 2004")
  (original "employee whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what students have a field of study that is the same as alice")
  (original "student whose field of study is field of study of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string field_of_study)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find friends of employees with end date in 2004 or earlier")
  (original "person that employee whose end date is at most 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "which student ended earlier than alice")
  (original "student whose end date is smaller than end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "180 cm tall person with same birth place as that of alice")
  (original "person whose height is 180 cm and that is birthplace of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) en.person.alice))

  )
)
(example
  (utterance "employees who started no earlier than alice")
  (original "employee whose start date is at least start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find me the emplotee who started after 2004")
  (original "person that is friends with employee whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what is the least common gender")
  (original "gender that is gender of the least number of person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "find employees starting after student alices last day")
  (original "employee whose start date is larger than end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "employee whose start date is not before start date of student alice")
  (original "employee whose start date is at least start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what employee has end date equal to employee alice")
  (original "employee whose end date is end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find gender of persons born in new york")
  (original "gender that is gender of person whose birthplace is new york")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) en.city.new_york)))

  )
)
(example
  (utterance "student whose end date is not after 2004")
  (original "student whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which employee has the largest end date")
  (original "employee that has the largest end date")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "all 180 cm tall people who joined in 2004")
  (original "person whose height is 180 cm and whose start date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string education_start_date) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "find friends of people born is 2004")
  (original "person that person whose birthdate is 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1))))

  )
)
(example
  (utterance "students who finish in 2004 or 2010")
  (original "student whose end date is 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "when did alice start attending brown university")
  (original "start date of student alice whose university is brown university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string university) (string =) en.university.brown) (string education_start_date)))

  )
)
(example
  (utterance "find the gender of everyone currently online")
  (original "gender that is gender of person that is logged in")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in))))

  )
)
(example
  (utterance "what student has a start date after 2004")
  (original "person that student whose start date is larger than 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "relationship status of student who is not student of brown university")
  (original "relationship status that is relationship status of student whose university is not brown university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string university) (string !=) en.university.brown)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "who started in 2004 and is 180 cm tall")
  (original "person whose height is 180 cm and whose start date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string education_start_date) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "find the birth city of all employees who have a start date that is 2004 or later")
  (original "city that is birthplace of employee whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "relationship statuses of employees who quit their job before 2004")
  (original "relationship status that is relationship status of employee whose end date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what is the birth city of people who are friends with alice")
  (original "city that is birthplace of person that alice is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice)))

  )
)
(example
  (utterance "employee who started in alices end date")
  (original "employee whose start date is end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "gender of people who started their study before 2005")
  (original "gender that is gender of student whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "whose hight is at least 180cm")
  (original "person whose height is at least 180 cm or 200 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string height)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (number 180 en.cm) (number 200 en.cm)))))

  )
)
(example
  (utterance "who is single and is friends with alice")
  (original "person whose relationship status is single and that is friends with alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) en.relationship_status.single) (string friend) (string =) en.person.alice))

  )
)
(example
  (utterance "what is the gender of an employee who does not have mckinsey as an employer")
  (original "gender that is gender of employee whose employer is not mckinsey")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employer) (string !=) en.company.mckinsey)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what is the relationship status of student who ended in 2004")
  (original "relationship status that is relationship status of student whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what people have a height of 180 cm and a birth city of new york")
  (original "person whose height is 180 cm and whose birthplace is new york")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string birthplace) (string =) en.city.new_york))

  )
)
(example
  (utterance "people that started work when alice was born or earlier")
  (original "employee whose start date is at most birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "people that started work after 2004 or after 2010")
  (original "employee whose start date is larger than 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "employee who shares end date with employee alice")
  (original "employee whose end date is end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "people who joined the institution after 2004")
  (original "student whose start date is larger than 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which people are 180 cm tall and started school in 2004")
  (original "person whose height is 180 cm and whose start date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string education_start_date) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "people who joined study in years other than 2004")
  (original "student whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "a worker who began in 2004 or 2010")
  (original "employee whose start date is 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "a friend of a student ending in 2004 or before")
  (original "person that is friends with student whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "people who are a friend of a friend of alices")
  (original "person that is friends with person that is friends with alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) en.person.alice)))

  )
)
(example
  (utterance "what males were born in 2004")
  (original "person whose gender is male and whose birthdate is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) en.gender.male) (string birthdate) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "find employee whose last day at work is before alices start date")
  (original "employee whose end date is smaller than start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what city were the most people born in")
  (original "city that is birthplace of the most number of person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "name the student who the quit the job with alice")
  (original "student whose end date is end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "person who has male friends")
  (original "person that is friends with person whose gender is male")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) en.gender.male)))

  )
)
(example
  (utterance "students that will begin to work on the same day alices leaves her job")
  (original "student whose start date is end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "relationship status of students starting after 2004")
  (original "relationship status that is relationship status of student whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "relationship status of students who joined before 2005")
  (original "relationship status that is relationship status of student whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "which employee has been employed by the most employers")
  (original "employee that has the most number of employer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string max) (string employer))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what city is the birthplace of students with an end date no later than 2004")
  (original "city that is birthplace of student whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find people who are friends of alices friends")
  (original "person that is friends with person that is friends with alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) en.person.alice)))

  )
)
(example
  (utterance "where were the people that go to a university other than brown born")
  (original "city that is birthplace of student whose university is not brown university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string university) (string !=) en.university.brown)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "employees who started after alices birthdate")
  (original "employee whose start date is larger than birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what date in 2004 did alice stop working")
  (original "end date of employee alice whose end date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date) (string =) (date 2004 -1 -1)) (string employment_end_date)))

  )
)
(example
  (utterance "whome is alice friends with who also have a birthdate of 2004")
  (original "person that alice is friends with and whose birthdate is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice) (string birthdate) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "who is friends with the person who started school before 2004")
  (original "person that student whose start date is smaller than 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what employee has less than two jobs")
  (original "employee that has less than two employer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string employer) (string <) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "which is the field of study of alice")
  (original "field of study of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string field_of_study)))

  )
)
(example
  (utterance "people joined their study before alice born")
  (original "student whose start date is smaller than birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "people that were born after alice started school")
  (original "person whose birthdate is larger than start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date)))))

  )
)
(example
  (utterance "student whose end date is before 2004")
  (original "student whose end date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "people that did not stop working in 2004")
  (original "employee whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what city has the least births")
  (original "city that is birthplace of the least number of person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "people who were born between 2004 and 2010")
  (original "person whose birthdate is larger than 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1)))))

  )
)
(example
  (utterance "birthplace of employees who dont study computer science")
  (original "city that is birthplace of student whose field of study is not computer science")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string !=) en.field.computer_science)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "which person 180 cm tall is a software engineer")
  (original "person whose height is 180 cm and whose job title is software engineer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string job_title) (string =) en.job_title.software_engineer))

  )
)
(example
  (utterance "find all people who were born in 2004")
  (original "person whose birthdate is 2004 and whose birthdate is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1)) (string birthdate) (string =) (date 2004 -1 -1)))

  )
)
(example
  (utterance "people that studied at brown university or ucla")
  (original "brown university or ucla")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.university.brown en.university.ucla))

  )
)
(example
  (utterance "find students with last day before or same as alices")
  (original "student whose end date is at most end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what genders are the people born in 2004")
  (original "gender that is gender of person whose birthdate is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1))))

  )
)
(example
  (utterance "what is the gender of employee who started in year other than 2004")
  (original "gender that is gender of employee whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find relationship status of employee with last day in 2004 or before")
  (original "relationship status that is relationship status of employee whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "who is friends with employees before or on 2004")
  (original "person that is friends with employee whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "who is friends with someone born in 2004")
  (original "person that person whose birthdate is 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1))))

  )
)
(example
  (utterance "which employees have a start date between 2004 and 2010")
  (original "employee whose start date is at least 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "birthplace of students who started no earlier than 2004")
  (original "city that is birthplace of employee whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "birthplace of people who did not start their job in 2004")
  (original "city that is birthplace of employee whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "students who started no earlier than alices birthdate")
  (original "student whose start date is at least birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "student whose start date is before 2004")
  (original "student whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find the people joined work before 2010")
  (original "employee whose start date is smaller than 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "who started school the earliest")
  (original "student that has the smallest start date")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find me people that are friends with students leaving before and after 2004")
  (original "person that is friends with student whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what is the gender of the employee who started in 2004 or later")
  (original "gender that is gender of employee whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "employee who started before end date of student alice")
  (original "employee whose start date is smaller than end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "employee who is not employed by mckinsey")
  (original "employee whose employer is not mckinsey")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employer) (string !=) en.company.mckinsey)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what is the relationship status of student whose start date is not 2004")
  (original "relationship status that is relationship status of student whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what employees had start dates on 2004 or 2010")
  (original "employee whose start date is 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "people that started working before alices birthdate")
  (original "employee whose start date is smaller than birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what university does alice study at")
  (original "university of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string university)))

  )
)
(example
  (utterance "find employees with last day not in 2004")
  (original "employee whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "students whose end date is later than the end date of alice")
  (original "student whose end date is larger than end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "name a male who is 180 cm tall")
  (original "person whose height is 180 cm and whose gender is male")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string gender) (string =) en.gender.male))

  )
)
(example
  (utterance "students who began school in 2004 or 2010")
  (original "student whose start date is 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what is alices date of birth")
  (original "birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate)))

  )
)
(example
  (utterance "people that started work when alice did or before")
  (original "employee whose start date is at most start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what is height of alice")
  (original "height of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string height)))

  )
)
(example
  (utterance "what is the birthplace of employees whose last day was no later than 2004")
  (original "city that is birthplace of employee whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "which employees quit after 2004")
  (original "employee whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "current users who are 180 cm tall")
  (original "person that is logged in and whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in)) (string height) (string =) (number 180 en.cm)))

  )
)
(example
  (utterance "person that is studying the most things at school")
  (original "student that has the most number of field of study")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string max) (string field_of_study))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "who was born in over two places")
  (original "person that has more than two birthplace")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string >) (number 2)))

  )
)
(example
  (utterance "people that started school on or after the day alice stopped school")
  (original "student whose start date is at least end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "in which cities were employees who started working after 2004 born")
  (original "city that is birthplace of employee whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "a student ending at the same time as alice")
  (original "student whose end date is end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "give me the genders of the students who graduate in 2004 or sooner")
  (original "gender that is gender of student whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "universities where all 180 cm tall people studied")
  (original "university that is university of person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.university) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string university)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "find me students whose end dates are the same as the start date of alice")
  (original "student whose end date is start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "who has friends with students that have a start date of 2004")
  (original "person that student whose start date is at most 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find all of alices single friends")
  (original "person that is friends with alice and whose relationship status is single")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) en.person.alice) (string relationship_status) (string =) en.relationship_status.single))

  )
)
(example
  (utterance "find employees with last day on or after alices first day")
  (original "employee whose end date is at least start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "people who are friends with students who started after 2004")
  (original "person that is friends with student whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "employees whose last day is the same as alices first day at the job")
  (original "employee whose end date is start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find birthplaces of employees who started after 2004")
  (original "city that is birthplace of employee whose start date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what is the gender of the person whose birthdate is in 2004")
  (original "gender that is gender of person whose birthdate is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1))))

  )
)
(example
  (utterance "which of alices friends is 180 cm tall")
  (original "person whose height is 180 cm and that alice is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice))

  )
)
(example
  (utterance "when did alice quit her software engineer job")
  (original "end date of employee alice whose job title is software engineer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string job_title) (string =) en.job_title.software_engineer) (string employment_end_date)))

  )
)
(example
  (utterance "a friend of a student not starting in 2004")
  (original "person that is friends with student whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "is alices field of study computer science")
  (original "field of study of student alice whose field of study is computer science")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string field_of_study) (string =) en.field.computer_science) (string field_of_study)))

  )
)
(example
  (utterance "what is the gender of people that started working in or before 2004")
  (original "gender that is gender of employee whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "which student started in 2004 or 2010")
  (original "student whose start date is 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which students left after 2004")
  (original "student whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "friend of employee whose start date is smaller than 2004")
  (original "person that employee whose start date is smaller than 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "alices quit date")
  (original "end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date)))

  )
)
(example
  (utterance "what employee has an end date that is the same as that of alice")
  (original "employee whose end date is end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "where were employees who finish on or before 2004 born")
  (original "city that is birthplace of employee whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "the relationship status of a worker who didnt leave in 2004")
  (original "relationship status that is relationship status of employee whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "who was born after 2004 that is friends with alice")
  (original "person whose birthdate is 2004 and that alice is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice))

  )
)
(example
  (utterance "what students have been at college for the least amount of time")
  (original "student that has the least number of university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string min) (string university))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "people that are 180 cm or 200 cm tall")
  (original "person whose height is 180 cm or 200 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (number 180 en.cm) (number 200 en.cm))))

  )
)
(example
  (utterance "people who were born in new york")
  (original "person whose birthplace is new york and whose birthplace is new york")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) en.city.new_york) (string birthplace) (string =) en.city.new_york))

  )
)
(example
  (utterance "people who are friends with employees who started working before or after 2004")
  (original "person that is friends with employee whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "which student started school after alice was born")
  (original "student whose start date is larger than birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what students have an end date that is either 2004 or 2010 and no greater")
  (original "student whose end date is at most 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what is the birthplace of employees who started in 2004 or later")
  (original "city that is birthplace of employee whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what is the relationship status of a student studying something other than computer science")
  (original "relationship status that is relationship status of student whose field of study is not computer science")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string !=) en.field.computer_science)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "birthplace of employees who didnt start working in 2004")
  (original "city that is birthplace of employee whose start date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find employees friend with title other than software engineer")
  (original "person that is friends with employee whose job title is not software engineer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string !=) en.job_title.software_engineer)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "employee whose start date is not after the end date of employee alice")
  (original "employee whose start date is at most end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find employees who have a start date later than that of the end date of employee alice")
  (original "employee whose start date is larger than end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "people that stopped working when alice was born  or before")
  (original "employee whose end date is at most birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "who is a software engineer or program manager")
  (original "software engineer or program manager")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.job_title.software_engineer en.job_title.program_manager))

  )
)
(example
  (utterance "what students have a start date earlier than that of employee alice")
  (original "student whose start date is smaller than start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which relationship status represents no more than two people")
  (original "relationship status that is relationship status of at most two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string <=) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "people that stopped working after 2004")
  (original "employee whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what is the relationship status of students that did not finish school in 2004")
  (original "relationship status that is relationship status of student whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find the least common relationship status")
  (original "relationship status that is relationship status of the least number of person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "what is the gender of the person alice is friends with")
  (original "gender that is gender of person that alice is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice)))

  )
)
(example
  (utterance "who is studying two things or less")
  (original "student that has at most two field of study")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string field_of_study) (string <=) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what is the gender of employees whose end date is less than 2004")
  (original "gender that is gender of employee whose end date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "who is shorter than 180cm")
  (original "person whose height is smaller than 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string height)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 180 en.cm))))

  )
)
(example
  (utterance "an employee with the longest start date")
  (original "employee that has the largest start date")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what is the last date of employee alice who started in 2004")
  (original "end date of employee alice whose start date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date) (string =) (date 2004 -1 -1)) (string employment_end_date)))

  )
)
(example
  (utterance "what is relationship status of employee whose last day was after 2004")
  (original "relationship status that is relationship status of employee whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "which employees started no later than 2004")
  (original "employee whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "people who were born in 2004 and are single")
  (original "person whose birthdate is 2004 and whose relationship status is single")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1)) (string relationship_status) (string =) en.relationship_status.single))

  )
)
(example
  (utterance "what does alice study at brown university")
  (original "field of study of student alice whose university is brown university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string university) (string =) en.university.brown) (string field_of_study)))

  )
)
(example
  (utterance "find people that are friends with students who have quit after 2004")
  (original "person that is friends with student whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "which students have the most majors")
  (original "student that has the most number of field of study")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string max) (string field_of_study))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "employee whose end date is not after birth date of alice")
  (original "employee whose start date is at most birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "name a person with whom alice is not friends")
  (original "person that alice not is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string !=) en.person.alice))

  )
)
(example
  (utterance "find the gender of people with a height of 180 cm")
  (original "gender that is gender of person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "what person is friends with people that do not work for mckinsey")
  (original "person that is friends with employee whose employer is not mckinsey")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employer) (string !=) en.company.mckinsey)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "people who are shorter than 181 cm")
  (original "person whose height is at most 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string height)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 180 en.cm))))

  )
)
(example
  (utterance "what is alices exact start date in 2004")
  (original "start date of employee alice whose start date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date) (string =) (date 2004 -1 -1)) (string employment_start_date)))

  )
)
(example
  (utterance "find me employees that have worked for no more than two employers")
  (original "employee that has at most two employer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string employer) (string <=) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what is the birthplace of students who graduated before 2004")
  (original "city that is birthplace of student whose end date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what person has a height of 180 cm and a job title of software engineer")
  (original "person whose height is 180 cm and whose job title is software engineer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string job_title) (string =) en.job_title.software_engineer))

  )
)
(example
  (utterance "what people are logged in who are also friends with alice")
  (original "person that is logged in and that alice is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice))

  )
)
(example
  (utterance "relationship status of employee whose employer is not mckinsey")
  (original "relationship status that is relationship status of employee whose employer is not mckinsey")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employer) (string !=) en.company.mckinsey)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "male 180 cm tall")
  (original "person whose height is 180 cm and whose gender is male")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string gender) (string =) en.gender.male))

  )
)
(example
  (utterance "who stopped going to school after 2004")
  (original "student whose end date is larger than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which employee quit the day alice started")
  (original "employee whose end date is at most start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "people born the same day as or after alice started school")
  (original "person whose birthdate is at least start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date)))))

  )
)
(example
  (utterance "relationship status of student that left school before or on 2004")
  (original "relationship status that is relationship status of student whose end date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "males born in 2004")
  (original "person whose birthdate is 2004 and whose gender is male")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1)) (string gender) (string =) en.gender.male))

  )
)
(example
  (utterance "who is 180 cm tall and is female")
  (original "person whose height is 180 cm and that is gender of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) en.person.alice))

  )
)
(example
  (utterance "what is the students gender who ended at least in 2004")
  (original "gender that is gender of student whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "who works for mckinsey or google")
  (original "employee whose employer is mckinsey or google")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employer) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.company.mckinsey en.company.google))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find all single people")
  (original "relationship status that is relationship status of person whose relationship status is single")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) en.relationship_status.single)))

  )
)
(example
  (utterance "who started school most recently")
  (original "student that has the largest start date")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what is the gender of students with a start date 2004 or later")
  (original "gender that is gender of student whose start date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what employees have an end date no later than 2004 or 2010")
  (original "employee whose end date is at most 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "who is friends with alice and was born in new york")
  (original "person that alice is friends with and whose birthplace is new york")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice) (string birthplace) (string =) en.city.new_york))

  )
)
(example
  (utterance "student whose end date is not before start date of student alice")
  (original "student whose end date is at least start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "people born in new york that are 180 cm tall")
  (original "person whose height is 180 cm and whose birthplace is new york")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string birthplace) (string =) en.city.new_york))

  )
)
(example
  (utterance "people born before 2004")
  (original "person whose birthdate is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1))))

  )
)
(example
  (utterance "who has less than two friends")
  (original "person that is friends with less than two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string <) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "all 180 cm tall software engineers")
  (original "person whose height is 180 cm and whose job title is software engineer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string job_title) (string =) en.job_title.software_engineer))

  )
)
(example
  (utterance "what is the relationship status of a student whose end date is earlier than 2004")
  (original "relationship status that is relationship status of student whose end date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "what are the students birthplaces who started before 2004")
  (original "city that is birthplace of student whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "which peolpe are exactly 180 cm tall")
  (original "person whose height is person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "who graduated after alice")
  (original "student whose end date is larger than end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what is the birthdate of the person who is 180 cm")
  (original "person whose birthdate is person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "employee whose last date was before the day alice started")
  (original "employee whose end date is smaller than start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "who is the employee leaving the company after alice leaves")
  (original "employee whose end date is larger than end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "who was born after 2003")
  (original "person whose birthdate is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1))))

  )
)
(example
  (utterance "which of my friends is at some school other than brown university")
  (original "person that student whose university is not brown university is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string university) (string !=) en.university.brown)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find me males born in 2004")
  (original "person whose birthdate is 2004 and whose gender is male")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1)) (string gender) (string =) en.gender.male))

  )
)
(example
  (utterance "people 180 cm tall who are single")
  (original "person whose relationship status is single and whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) en.relationship_status.single) (string height) (string =) (number 180 en.cm)))

  )
)
(example
  (utterance "find me all people who are older than alice")
  (original "person whose birthdate is larger than birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate)))))

  )
)
(example
  (utterance "which employee has an end date of at least 2004")
  (original "employee whose end date is at least 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "who is friends with a student who graduated in 2004 or later")
  (original "person that student whose end date is at least 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "student whose end date is not after atart date of student alice")
  (original "student whose end date is at most start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "which people are friends of alices friends")
  (original "person that person that alice is friends with is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice)))

  )
)
(example
  (utterance "student whose start date is not after end date of employee alice")
  (original "student whose start date is at most end date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what is alices end date")
  (original "end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date)))

  )
)
(example
  (utterance "students finishing on or before alices birthday")
  (original "student whose end date is at most birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find someone born on or after alices first day of employment")
  (original "person whose birthdate is at least start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date)))))

  )
)
(example
  (utterance "what employee has an end date that is not in 2004")
  (original "employee whose end date is not 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find employees who have a start date earlier than that of employee alice")
  (original "employee whose start date is smaller than start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "find the birth city of employees who have an end date of 2004 or later")
  (original "city that is birthplace of employee whose end date is at least 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "find people having a relationship with people who are 180 cm tall")
  (original "person whose relationship status is person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "what is alices start date at brown university")
  (original "start date of student alice whose university is brown university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string university) (string =) en.university.brown) (string education_start_date)))

  )
)
(example
  (utterance "what employees have an end date before 2004")
  (original "employee whose end date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "180 cm tall persons studied in brown university")
  (original "person whose height is 180 cm and whose university is brown university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string university) (string =) en.university.brown))

  )
)
(example
  (utterance "students finishing contemporaneous to or before alice starts")
  (original "student whose end date is at least start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "find the friends of students whose end date is later than 2004")
  (original "person that student whose end date is larger than 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "ppeople who joined studies after alice joined the job")
  (original "student whose start date is at least start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "people born on or before alices birthday")
  (original "person whose birthdate is at most birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate)))))

  )
)
(example
  (utterance "what is the job title of alice who started in 2004")
  (original "job title of employee alice whose start date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date) (string =) (date 2004 -1 -1)) (string job_title)))

  )
)
(example
  (utterance "find the relationship statuses of people whom alice is friends with")
  (original "relationship status that is relationship status of person that alice is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice)))

  )
)
(example
  (utterance "which employee ended no greater than alices birthdate")
  (original "employee whose end date is at most birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what is the gender of no more than two people")
  (original "gender that is gender of at most two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string <=) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "employees finishing before alice")
  (original "employee whose end date is at most end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what is the relationship status of students who stated before 2004")
  (original "relationship status that is relationship status of student whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "student whose start date is start date of employee alice")
  (original "student whose start date is start date of employee alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "who is the tallest person")
  (original "person that has the largest height")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string height))))

  )
)
(example
  (utterance "all 180 cm tall females")
  (original "person whose height is 180 cm and that is gender of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) en.person.alice))

  )
)
(example
  (utterance "what employees have an end date that is before student alices start date")
  (original "employee whose end date is smaller than start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what cities are the birthplaces of people who have a height of 180 cm")
  (original "city that is birthplace of person whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))

  )
)
(example
  (utterance "who has over two relationship status")
  (original "person that has more than two relationship status")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string >) (number 2)))

  )
)
(example
  (utterance "who is 180 cm and is in the field of computer science")
  (original "person whose height is 180 cm and whose field of study is computer science")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string field_of_study) (string =) en.field.computer_science))

  )
)
(example
  (utterance "person who is shorter than 180 cm or 200 cm")
  (original "person whose height is smaller than 180 cm or 200 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string height)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (number 180 en.cm) (number 200 en.cm)))))

  )
)
(example
  (utterance "birthplaces of employees starting before 2004")
  (original "city that is birthplace of employee whose start date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "what is the birthplace of an employee who does not work for mckinsey")
  (original "city that is birthplace of employee whose employer is not mckinsey")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employer) (string !=) en.company.mckinsey)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "which employee ended earlier than alices start date")
  (original "employee whose end date is smaller than start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what is job title of alice whose employment end date is in 2004")
  (original "job title of employee alice whose end date is 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date) (string =) (date 2004 -1 -1)) (string job_title)))

  )
)
(example
  (utterance "what city was alice and bob born in")
  (original "city that is birthplace of alice or bob")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.person.alice en.person.bob)))

  )
)
(example
  (utterance "the gender of an employee whos not a software engineer")
  (original "gender that is gender of employee whose job title is not software engineer")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string !=) en.job_title.software_engineer)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "whose birthdate is on or after alices start date")
  (original "person whose birthdate is at least start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date)))))

  )
)
(example
  (utterance "people that started working when alice stopped school or after")
  (original "employee whose start date is at least end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "a student starting after alice ends")
  (original "student whose start date is larger than end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "when did alice finish school")
  (original "end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date)))

  )
)
(example
  (utterance "name a city that fewer than two of the people were born in")
  (original "city that is birthplace of less than two person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string <) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "180 cm tall persons who were born in the same place where alice was born")
  (original "person whose height is 180 cm and that is birthplace of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) en.person.alice))

  )
)
(example
  (utterance "who has friends that are students who have a start date before 2004")
  (original "person that student whose start date is smaller than 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "find students with last days on or before alices first day")
  (original "student whose end date is at most start date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))

  )
)
(example
  (utterance "what is the average height of a person")
  (original "average height of person")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.aggregate (string avg) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height))))

  )
)
(example
  (utterance "find me a male born in new york")
  (original "person whose birthplace is new york and whose gender is male")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) en.city.new_york) (string gender) (string =) en.gender.male))

  )
)
(example
  (utterance "what people are friends of students who have a start date no earlier than 2004")
  (original "person that is friends with student whose start date is at most 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "employees finishing after 2004")
  (original "employee whose end date is larger than 2004 or 2010")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "what cities were people that are currently online born in")
  (original "city that is birthplace of person that is logged in")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in))))

  )
)
(example
  (utterance "what is the gender of employees who dont work for mckinsey")
  (original "gender that is gender of employee whose employer is not mckinsey")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employer) (string !=) en.company.mckinsey)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "name a person of the same gender as alice who is 180 cm tall")
  (original "person whose height is 180 cm and that is gender of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) en.person.alice))

  )
)
(example
  (utterance "people who were not friends before 2004")
  (original "person that employee whose start date is not 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))

  )
)
(example
  (utterance "employees who started working on or after the day alice ended school")
  (original "employee whose start date is at least end date of student alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "connection to someone who will have graduated before 2004")
  (original "person that student whose end date is at most 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "who is 180 cm tall and goes to brown university")
  (original "person whose height is 180 cm and whose university is brown university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string university) (string =) en.university.brown))

  )
)
(example
  (utterance "find employees starting after alices birthday")
  (original "employee whose start date is larger than birthdate of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))

  )
)
(example
  (utterance "which person has a relationship status the same as alice")
  (original "person whose relationship status is relationship status that is relationship status of alice")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) en.person.alice)))

  )
)
(example
  (utterance "what is the relationship status of students who are not at brown")
  (original "relationship status that is relationship status of student whose university is not brown university")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string university) (string !=) en.university.brown)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "people whose height is 180 cm")
  (original "person whose height is 180 cm and whose height is 180 cm")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string height) (string =) (number 180 en.cm)))

  )
)
(example
  (utterance "who are all of alices guy friends")
  (original "person that is friends with alice and whose gender is male")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) en.person.alice) (string gender) (string =) en.gender.male))

  )
)
(example
  (utterance "find the friends of all people who list their relationship status as single")
  (original "person that is friends with person whose relationship status is single")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) en.relationship_status.single)))

  )
)
(example
  (utterance "who is friends with the student who did not start in 2004")
  (original "person that student whose start date is not 2004 is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
(example
  (utterance "who has at least two friends")
  (original "person that at least two person is friends with")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string >=) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))

  )
)
(example
  (utterance "people that are friends with someone that finished school before 2004")
  (original "person that is friends with student whose end date is smaller than 2004")
  (targetFormula 
    (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))

  )
)
